
hmc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006790  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000684  08006930  08006930  00007930  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006fb4  08006fb4  000081cc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08006fb4  08006fb4  00007fb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006fbc  08006fbc  000081cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006fbc  08006fbc  00007fbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006fc0  08006fc0  00007fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08006fc4  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000178  200001cc  08007190  000081cc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000344  08007190  00008344  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000081cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000302b  00000000  00000000  000081fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000ebd  00000000  00000000  0000b227  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000003b0  00000000  00000000  0000c0e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000294  00000000  00000000  0000c498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001658f  00000000  00000000  0000c72c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000062a7  00000000  00000000  00022cbb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008461a  00000000  00000000  00028f62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000ad57c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002188  00000000  00000000  000ad5c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000041  00000000  00000000  000af748  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001cc 	.word	0x200001cc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006918 	.word	0x08006918

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d0 	.word	0x200001d0
 80001dc:	08006918 	.word	0x08006918

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_d2lz>:
 8000c98:	b538      	push	{r3, r4, r5, lr}
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	460d      	mov	r5, r1
 8000ca2:	f7ff ff23 	bl	8000aec <__aeabi_dcmplt>
 8000ca6:	b928      	cbnz	r0, 8000cb4 <__aeabi_d2lz+0x1c>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4629      	mov	r1, r5
 8000cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cb0:	f000 b80a 	b.w	8000cc8 <__aeabi_d2ulz>
 8000cb4:	4620      	mov	r0, r4
 8000cb6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000cba:	f000 f805 	bl	8000cc8 <__aeabi_d2ulz>
 8000cbe:	4240      	negs	r0, r0
 8000cc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2ulz>:
 8000cc8:	b5d0      	push	{r4, r6, r7, lr}
 8000cca:	4b0c      	ldr	r3, [pc, #48]	@ (8000cfc <__aeabi_d2ulz+0x34>)
 8000ccc:	2200      	movs	r2, #0
 8000cce:	4606      	mov	r6, r0
 8000cd0:	460f      	mov	r7, r1
 8000cd2:	f7ff fc99 	bl	8000608 <__aeabi_dmul>
 8000cd6:	f7ff ff6f 	bl	8000bb8 <__aeabi_d2uiz>
 8000cda:	4604      	mov	r4, r0
 8000cdc:	f7ff fc1a 	bl	8000514 <__aeabi_ui2d>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	@ (8000d00 <__aeabi_d2ulz+0x38>)
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	f7ff fc90 	bl	8000608 <__aeabi_dmul>
 8000ce8:	4602      	mov	r2, r0
 8000cea:	460b      	mov	r3, r1
 8000cec:	4630      	mov	r0, r6
 8000cee:	4639      	mov	r1, r7
 8000cf0:	f7ff fad2 	bl	8000298 <__aeabi_dsub>
 8000cf4:	f7ff ff60 	bl	8000bb8 <__aeabi_d2uiz>
 8000cf8:	4621      	mov	r1, r4
 8000cfa:	bdd0      	pop	{r4, r6, r7, pc}
 8000cfc:	3df00000 	.word	0x3df00000
 8000d00:	41f00000 	.word	0x41f00000

08000d04 <Timer1_Init>:
 */

#include "stm32f4xx.h"
#include "delay.h"

void Timer1_Init(void) {
 8000d04:	b480      	push	{r7}
 8000d06:	af00      	add	r7, sp, #0
    // Enable TIM1 clock
    RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
 8000d08:	4b05      	ldr	r3, [pc, #20]	@ (8000d20 <Timer1_Init+0x1c>)
 8000d0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000d0c:	4a04      	ldr	r2, [pc, #16]	@ (8000d20 <Timer1_Init+0x1c>)
 8000d0e:	f043 0301 	orr.w	r3, r3, #1
 8000d12:	6453      	str	r3, [r2, #68]	@ 0x44
    
   
}
 8000d14:	bf00      	nop
 8000d16:	46bd      	mov	sp, r7
 8000d18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d1c:	4770      	bx	lr
 8000d1e:	bf00      	nop
 8000d20:	40023800 	.word	0x40023800

08000d24 <delay_us>:

void delay_us(uint32_t us) {
 8000d24:	b480      	push	{r7}
 8000d26:	b083      	sub	sp, #12
 8000d28:	af00      	add	r7, sp, #0
 8000d2a:	6078      	str	r0, [r7, #4]
     // Configure TIM1
    TIM1->PSC = 16-1;    // 72MHz/72 = 1MHz (1us resolution)
 8000d2c:	4b18      	ldr	r3, [pc, #96]	@ (8000d90 <delay_us+0x6c>)
 8000d2e:	220f      	movs	r2, #15
 8000d30:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM1->CR1 = 0x0000;  // Reset CR1 register
 8000d32:	4b17      	ldr	r3, [pc, #92]	@ (8000d90 <delay_us+0x6c>)
 8000d34:	2200      	movs	r2, #0
 8000d36:	601a      	str	r2, [r3, #0]
    TIM1->ARR = us;      // Set auto-reload value
 8000d38:	4a15      	ldr	r2, [pc, #84]	@ (8000d90 <delay_us+0x6c>)
 8000d3a:	687b      	ldr	r3, [r7, #4]
 8000d3c:	62d3      	str	r3, [r2, #44]	@ 0x2c
    TIM1->EGR = TIM_EGR_UG;  // Generate update event
 8000d3e:	4b14      	ldr	r3, [pc, #80]	@ (8000d90 <delay_us+0x6c>)
 8000d40:	2201      	movs	r2, #1
 8000d42:	615a      	str	r2, [r3, #20]
    TIM1->SR &= ~TIM_SR_UIF; // Clear update flag
 8000d44:	4b12      	ldr	r3, [pc, #72]	@ (8000d90 <delay_us+0x6c>)
 8000d46:	691b      	ldr	r3, [r3, #16]
 8000d48:	4a11      	ldr	r2, [pc, #68]	@ (8000d90 <delay_us+0x6c>)
 8000d4a:	f023 0301 	bic.w	r3, r3, #1
 8000d4e:	6113      	str	r3, [r2, #16]
    TIM1->CR1 |= TIM_CR1_CEN;  // Start counter
 8000d50:	4b0f      	ldr	r3, [pc, #60]	@ (8000d90 <delay_us+0x6c>)
 8000d52:	681b      	ldr	r3, [r3, #0]
 8000d54:	4a0e      	ldr	r2, [pc, #56]	@ (8000d90 <delay_us+0x6c>)
 8000d56:	f043 0301 	orr.w	r3, r3, #1
 8000d5a:	6013      	str	r3, [r2, #0]
    
    // Wait until update flag is set
    while(!(TIM1->SR & TIM_SR_UIF));
 8000d5c:	bf00      	nop
 8000d5e:	4b0c      	ldr	r3, [pc, #48]	@ (8000d90 <delay_us+0x6c>)
 8000d60:	691b      	ldr	r3, [r3, #16]
 8000d62:	f003 0301 	and.w	r3, r3, #1
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	d0f9      	beq.n	8000d5e <delay_us+0x3a>
    
    TIM1->SR &= ~TIM_SR_UIF;  // Clear update flag
 8000d6a:	4b09      	ldr	r3, [pc, #36]	@ (8000d90 <delay_us+0x6c>)
 8000d6c:	691b      	ldr	r3, [r3, #16]
 8000d6e:	4a08      	ldr	r2, [pc, #32]	@ (8000d90 <delay_us+0x6c>)
 8000d70:	f023 0301 	bic.w	r3, r3, #1
 8000d74:	6113      	str	r3, [r2, #16]
    TIM1->CR1 &= ~TIM_CR1_CEN;  // Stop counter
 8000d76:	4b06      	ldr	r3, [pc, #24]	@ (8000d90 <delay_us+0x6c>)
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	4a05      	ldr	r2, [pc, #20]	@ (8000d90 <delay_us+0x6c>)
 8000d7c:	f023 0301 	bic.w	r3, r3, #1
 8000d80:	6013      	str	r3, [r2, #0]
}
 8000d82:	bf00      	nop
 8000d84:	370c      	adds	r7, #12
 8000d86:	46bd      	mov	sp, r7
 8000d88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d8c:	4770      	bx	lr
 8000d8e:	bf00      	nop
 8000d90:	40010000 	.word	0x40010000

08000d94 <delay_ms>:

// Optional: Millisecond delay function
void delay_ms(uint32_t ms) {
 8000d94:	b580      	push	{r7, lr}
 8000d96:	b084      	sub	sp, #16
 8000d98:	af00      	add	r7, sp, #0
 8000d9a:	6078      	str	r0, [r7, #4]
    for(uint32_t i = 0; i < ms; i++) {
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	60fb      	str	r3, [r7, #12]
 8000da0:	e006      	b.n	8000db0 <delay_ms+0x1c>
        delay_us(1000);
 8000da2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000da6:	f7ff ffbd 	bl	8000d24 <delay_us>
    for(uint32_t i = 0; i < ms; i++) {
 8000daa:	68fb      	ldr	r3, [r7, #12]
 8000dac:	3301      	adds	r3, #1
 8000dae:	60fb      	str	r3, [r7, #12]
 8000db0:	68fa      	ldr	r2, [r7, #12]
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	429a      	cmp	r2, r3
 8000db6:	d3f4      	bcc.n	8000da2 <delay_ms+0xe>
    }
}
 8000db8:	bf00      	nop
 8000dba:	bf00      	nop
 8000dbc:	3710      	adds	r7, #16
 8000dbe:	46bd      	mov	sp, r7
 8000dc0:	bd80      	pop	{r7, pc}

08000dc2 <MovingAverage_Init>:
#include "filters.h"
#include <string.h>

void MovingAverage_Init(MovingAverageFilter* filter) {
 8000dc2:	b480      	push	{r7}
 8000dc4:	b085      	sub	sp, #20
 8000dc6:	af00      	add	r7, sp, #0
 8000dc8:	6078      	str	r0, [r7, #4]
    for(uint8_t i = 0; i < FILTER_SIZE; i++) {
 8000dca:	2300      	movs	r3, #0
 8000dcc:	73fb      	strb	r3, [r7, #15]
 8000dce:	e009      	b.n	8000de4 <MovingAverage_Init+0x22>
        filter->values[i] = 0.0f;
 8000dd0:	7bfb      	ldrb	r3, [r7, #15]
 8000dd2:	687a      	ldr	r2, [r7, #4]
 8000dd4:	009b      	lsls	r3, r3, #2
 8000dd6:	4413      	add	r3, r2
 8000dd8:	f04f 0200 	mov.w	r2, #0
 8000ddc:	601a      	str	r2, [r3, #0]
    for(uint8_t i = 0; i < FILTER_SIZE; i++) {
 8000dde:	7bfb      	ldrb	r3, [r7, #15]
 8000de0:	3301      	adds	r3, #1
 8000de2:	73fb      	strb	r3, [r7, #15]
 8000de4:	7bfb      	ldrb	r3, [r7, #15]
 8000de6:	2b04      	cmp	r3, #4
 8000de8:	d9f2      	bls.n	8000dd0 <MovingAverage_Init+0xe>
    }
    filter->sum = 0.0f;
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	f04f 0200 	mov.w	r2, #0
 8000df0:	615a      	str	r2, [r3, #20]
    filter->count = 0;
 8000df2:	687b      	ldr	r3, [r7, #4]
 8000df4:	2200      	movs	r2, #0
 8000df6:	761a      	strb	r2, [r3, #24]
    filter->index = 0;
 8000df8:	687b      	ldr	r3, [r7, #4]
 8000dfa:	2200      	movs	r2, #0
 8000dfc:	765a      	strb	r2, [r3, #25]
}
 8000dfe:	bf00      	nop
 8000e00:	3714      	adds	r7, #20
 8000e02:	46bd      	mov	sp, r7
 8000e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e08:	4770      	bx	lr
	...

08000e0c <MovingAverage_Update>:

float MovingAverage_Update(MovingAverageFilter* filter, float new_value) {
 8000e0c:	b480      	push	{r7}
 8000e0e:	b083      	sub	sp, #12
 8000e10:	af00      	add	r7, sp, #0
 8000e12:	6078      	str	r0, [r7, #4]
 8000e14:	ed87 0a00 	vstr	s0, [r7]
    if(filter->count == FILTER_SIZE) {
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	7e1b      	ldrb	r3, [r3, #24]
 8000e1c:	2b05      	cmp	r3, #5
 8000e1e:	d10f      	bne.n	8000e40 <MovingAverage_Update+0x34>
        filter->sum -= filter->values[filter->index];
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	ed93 7a05 	vldr	s14, [r3, #20]
 8000e26:	687b      	ldr	r3, [r7, #4]
 8000e28:	7e5b      	ldrb	r3, [r3, #25]
 8000e2a:	687a      	ldr	r2, [r7, #4]
 8000e2c:	009b      	lsls	r3, r3, #2
 8000e2e:	4413      	add	r3, r2
 8000e30:	edd3 7a00 	vldr	s15, [r3]
 8000e34:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	edc3 7a05 	vstr	s15, [r3, #20]
 8000e3e:	e005      	b.n	8000e4c <MovingAverage_Update+0x40>
    } else {
        filter->count++;
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	7e1b      	ldrb	r3, [r3, #24]
 8000e44:	3301      	adds	r3, #1
 8000e46:	b2da      	uxtb	r2, r3
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	761a      	strb	r2, [r3, #24]
    }
    
    filter->values[filter->index] = new_value;
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	7e5b      	ldrb	r3, [r3, #25]
 8000e50:	687a      	ldr	r2, [r7, #4]
 8000e52:	009b      	lsls	r3, r3, #2
 8000e54:	4413      	add	r3, r2
 8000e56:	683a      	ldr	r2, [r7, #0]
 8000e58:	601a      	str	r2, [r3, #0]
    filter->sum += new_value;
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	ed93 7a05 	vldr	s14, [r3, #20]
 8000e60:	edd7 7a00 	vldr	s15, [r7]
 8000e64:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e68:	687b      	ldr	r3, [r7, #4]
 8000e6a:	edc3 7a05 	vstr	s15, [r3, #20]
    filter->index = (filter->index + 1) % FILTER_SIZE;
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	7e5b      	ldrb	r3, [r3, #25]
 8000e72:	1c5a      	adds	r2, r3, #1
 8000e74:	4b10      	ldr	r3, [pc, #64]	@ (8000eb8 <MovingAverage_Update+0xac>)
 8000e76:	fb83 1302 	smull	r1, r3, r3, r2
 8000e7a:	1059      	asrs	r1, r3, #1
 8000e7c:	17d3      	asrs	r3, r2, #31
 8000e7e:	1ac9      	subs	r1, r1, r3
 8000e80:	460b      	mov	r3, r1
 8000e82:	009b      	lsls	r3, r3, #2
 8000e84:	440b      	add	r3, r1
 8000e86:	1ad1      	subs	r1, r2, r3
 8000e88:	b2ca      	uxtb	r2, r1
 8000e8a:	687b      	ldr	r3, [r7, #4]
 8000e8c:	765a      	strb	r2, [r3, #25]
    
    return filter->sum / filter->count;
 8000e8e:	687b      	ldr	r3, [r7, #4]
 8000e90:	ed93 7a05 	vldr	s14, [r3, #20]
 8000e94:	687b      	ldr	r3, [r7, #4]
 8000e96:	7e1b      	ldrb	r3, [r3, #24]
 8000e98:	ee07 3a90 	vmov	s15, r3
 8000e9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000ea0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8000ea4:	eef0 7a66 	vmov.f32	s15, s13
}
 8000ea8:	eeb0 0a67 	vmov.f32	s0, s15
 8000eac:	370c      	adds	r7, #12
 8000eae:	46bd      	mov	sp, r7
 8000eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb4:	4770      	bx	lr
 8000eb6:	bf00      	nop
 8000eb8:	66666667 	.word	0x66666667

08000ebc <MedianFilter_Init>:

void MovingAverage_Reset(MovingAverageFilter* filter) {
    MovingAverage_Init(filter);
}

void MedianFilter_Init(MedianFilter* filter) {
 8000ebc:	b480      	push	{r7}
 8000ebe:	b085      	sub	sp, #20
 8000ec0:	af00      	add	r7, sp, #0
 8000ec2:	6078      	str	r0, [r7, #4]
    for(uint8_t i = 0; i < FILTER_SIZE; i++) {
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	73fb      	strb	r3, [r7, #15]
 8000ec8:	e009      	b.n	8000ede <MedianFilter_Init+0x22>
        filter->values[i] = 0.0f;
 8000eca:	7bfb      	ldrb	r3, [r7, #15]
 8000ecc:	687a      	ldr	r2, [r7, #4]
 8000ece:	009b      	lsls	r3, r3, #2
 8000ed0:	4413      	add	r3, r2
 8000ed2:	f04f 0200 	mov.w	r2, #0
 8000ed6:	601a      	str	r2, [r3, #0]
    for(uint8_t i = 0; i < FILTER_SIZE; i++) {
 8000ed8:	7bfb      	ldrb	r3, [r7, #15]
 8000eda:	3301      	adds	r3, #1
 8000edc:	73fb      	strb	r3, [r7, #15]
 8000ede:	7bfb      	ldrb	r3, [r7, #15]
 8000ee0:	2b04      	cmp	r3, #4
 8000ee2:	d9f2      	bls.n	8000eca <MedianFilter_Init+0xe>
    }
    filter->count = 0;
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	2200      	movs	r2, #0
 8000ee8:	751a      	strb	r2, [r3, #20]
    filter->index = 0;
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	2200      	movs	r2, #0
 8000eee:	755a      	strb	r2, [r3, #21]
}
 8000ef0:	bf00      	nop
 8000ef2:	3714      	adds	r7, #20
 8000ef4:	46bd      	mov	sp, r7
 8000ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000efa:	4770      	bx	lr

08000efc <MedianFilter_Update>:

float MedianFilter_Update(MedianFilter* filter, float new_value) {
 8000efc:	b480      	push	{r7}
 8000efe:	b08b      	sub	sp, #44	@ 0x2c
 8000f00:	af00      	add	r7, sp, #0
 8000f02:	6078      	str	r0, [r7, #4]
 8000f04:	ed87 0a00 	vstr	s0, [r7]
    // Add new value
    filter->values[filter->index] = new_value;
 8000f08:	687b      	ldr	r3, [r7, #4]
 8000f0a:	7d5b      	ldrb	r3, [r3, #21]
 8000f0c:	687a      	ldr	r2, [r7, #4]
 8000f0e:	009b      	lsls	r3, r3, #2
 8000f10:	4413      	add	r3, r2
 8000f12:	683a      	ldr	r2, [r7, #0]
 8000f14:	601a      	str	r2, [r3, #0]
    if(filter->count < FILTER_SIZE) {
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	7d1b      	ldrb	r3, [r3, #20]
 8000f1a:	2b04      	cmp	r3, #4
 8000f1c:	d805      	bhi.n	8000f2a <MedianFilter_Update+0x2e>
        filter->count++;
 8000f1e:	687b      	ldr	r3, [r7, #4]
 8000f20:	7d1b      	ldrb	r3, [r3, #20]
 8000f22:	3301      	adds	r3, #1
 8000f24:	b2da      	uxtb	r2, r3
 8000f26:	687b      	ldr	r3, [r7, #4]
 8000f28:	751a      	strb	r2, [r3, #20]
    }
    filter->index = (filter->index + 1) % FILTER_SIZE;
 8000f2a:	687b      	ldr	r3, [r7, #4]
 8000f2c:	7d5b      	ldrb	r3, [r3, #21]
 8000f2e:	1c5a      	adds	r2, r3, #1
 8000f30:	4b4a      	ldr	r3, [pc, #296]	@ (800105c <MedianFilter_Update+0x160>)
 8000f32:	fb83 1302 	smull	r1, r3, r3, r2
 8000f36:	1059      	asrs	r1, r3, #1
 8000f38:	17d3      	asrs	r3, r2, #31
 8000f3a:	1ac9      	subs	r1, r1, r3
 8000f3c:	460b      	mov	r3, r1
 8000f3e:	009b      	lsls	r3, r3, #2
 8000f40:	440b      	add	r3, r1
 8000f42:	1ad1      	subs	r1, r2, r3
 8000f44:	b2ca      	uxtb	r2, r1
 8000f46:	687b      	ldr	r3, [r7, #4]
 8000f48:	755a      	strb	r2, [r3, #21]
    
    // Sort values
    float temp[FILTER_SIZE];
    for(uint8_t i = 0; i < filter->count; i++) {
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f50:	e011      	b.n	8000f76 <MedianFilter_Update+0x7a>
        temp[i] = filter->values[i];
 8000f52:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8000f56:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8000f5a:	6879      	ldr	r1, [r7, #4]
 8000f5c:	0092      	lsls	r2, r2, #2
 8000f5e:	440a      	add	r2, r1
 8000f60:	6812      	ldr	r2, [r2, #0]
 8000f62:	009b      	lsls	r3, r3, #2
 8000f64:	3328      	adds	r3, #40	@ 0x28
 8000f66:	443b      	add	r3, r7
 8000f68:	3b1c      	subs	r3, #28
 8000f6a:	601a      	str	r2, [r3, #0]
    for(uint8_t i = 0; i < filter->count; i++) {
 8000f6c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8000f70:	3301      	adds	r3, #1
 8000f72:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8000f76:	687b      	ldr	r3, [r7, #4]
 8000f78:	7d1b      	ldrb	r3, [r3, #20]
 8000f7a:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8000f7e:	429a      	cmp	r2, r3
 8000f80:	d3e7      	bcc.n	8000f52 <MedianFilter_Update+0x56>
    }
    
    // Simple bubble sort
    for(uint8_t i = 0; i < filter->count-1; i++) {
 8000f82:	2300      	movs	r3, #0
 8000f84:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8000f88:	e04e      	b.n	8001028 <MedianFilter_Update+0x12c>
        for(uint8_t j = 0; j < filter->count-i-1; j++) {
 8000f8a:	2300      	movs	r3, #0
 8000f8c:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 8000f90:	e03a      	b.n	8001008 <MedianFilter_Update+0x10c>
            if(temp[j] > temp[j+1]) {
 8000f92:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8000f96:	009b      	lsls	r3, r3, #2
 8000f98:	3328      	adds	r3, #40	@ 0x28
 8000f9a:	443b      	add	r3, r7
 8000f9c:	3b1c      	subs	r3, #28
 8000f9e:	ed93 7a00 	vldr	s14, [r3]
 8000fa2:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8000fa6:	3301      	adds	r3, #1
 8000fa8:	009b      	lsls	r3, r3, #2
 8000faa:	3328      	adds	r3, #40	@ 0x28
 8000fac:	443b      	add	r3, r7
 8000fae:	3b1c      	subs	r3, #28
 8000fb0:	edd3 7a00 	vldr	s15, [r3]
 8000fb4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8000fb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fbc:	dd1f      	ble.n	8000ffe <MedianFilter_Update+0x102>
                float t = temp[j];
 8000fbe:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8000fc2:	009b      	lsls	r3, r3, #2
 8000fc4:	3328      	adds	r3, #40	@ 0x28
 8000fc6:	443b      	add	r3, r7
 8000fc8:	3b1c      	subs	r3, #28
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	623b      	str	r3, [r7, #32]
                temp[j] = temp[j+1];
 8000fce:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8000fd2:	1c5a      	adds	r2, r3, #1
 8000fd4:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8000fd8:	0092      	lsls	r2, r2, #2
 8000fda:	3228      	adds	r2, #40	@ 0x28
 8000fdc:	443a      	add	r2, r7
 8000fde:	3a1c      	subs	r2, #28
 8000fe0:	6812      	ldr	r2, [r2, #0]
 8000fe2:	009b      	lsls	r3, r3, #2
 8000fe4:	3328      	adds	r3, #40	@ 0x28
 8000fe6:	443b      	add	r3, r7
 8000fe8:	3b1c      	subs	r3, #28
 8000fea:	601a      	str	r2, [r3, #0]
                temp[j+1] = t;
 8000fec:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8000ff0:	3301      	adds	r3, #1
 8000ff2:	009b      	lsls	r3, r3, #2
 8000ff4:	3328      	adds	r3, #40	@ 0x28
 8000ff6:	443b      	add	r3, r7
 8000ff8:	3b1c      	subs	r3, #28
 8000ffa:	6a3a      	ldr	r2, [r7, #32]
 8000ffc:	601a      	str	r2, [r3, #0]
        for(uint8_t j = 0; j < filter->count-i-1; j++) {
 8000ffe:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 8001002:	3301      	adds	r3, #1
 8001004:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 8001008:	f897 2025 	ldrb.w	r2, [r7, #37]	@ 0x25
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	7d1b      	ldrb	r3, [r3, #20]
 8001010:	4619      	mov	r1, r3
 8001012:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8001016:	1acb      	subs	r3, r1, r3
 8001018:	3b01      	subs	r3, #1
 800101a:	429a      	cmp	r2, r3
 800101c:	dbb9      	blt.n	8000f92 <MedianFilter_Update+0x96>
    for(uint8_t i = 0; i < filter->count-1; i++) {
 800101e:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 8001022:	3301      	adds	r3, #1
 8001024:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8001028:	f897 2026 	ldrb.w	r2, [r7, #38]	@ 0x26
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	7d1b      	ldrb	r3, [r3, #20]
 8001030:	3b01      	subs	r3, #1
 8001032:	429a      	cmp	r2, r3
 8001034:	dba9      	blt.n	8000f8a <MedianFilter_Update+0x8e>
            }
        }
    }
    
    return temp[filter->count/2];
 8001036:	687b      	ldr	r3, [r7, #4]
 8001038:	7d1b      	ldrb	r3, [r3, #20]
 800103a:	085b      	lsrs	r3, r3, #1
 800103c:	b2db      	uxtb	r3, r3
 800103e:	009b      	lsls	r3, r3, #2
 8001040:	3328      	adds	r3, #40	@ 0x28
 8001042:	443b      	add	r3, r7
 8001044:	3b1c      	subs	r3, #28
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	ee07 3a90 	vmov	s15, r3
}
 800104c:	eeb0 0a67 	vmov.f32	s0, s15
 8001050:	372c      	adds	r7, #44	@ 0x2c
 8001052:	46bd      	mov	sp, r7
 8001054:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001058:	4770      	bx	lr
 800105a:	bf00      	nop
 800105c:	66666667 	.word	0x66666667

08001060 <HMC5883L_Reset>:
uint8_t HMC5883L_IsDataLocked(void) {
    uint8_t status = I2C1_Read(HMC5883L_ADDR, STATUS_REG);
    return (status & STATUS_LOCK_BIT) ? 1 : 0;
}

uint8_t HMC5883L_Reset(HMC5883L_t* hmc) {
 8001060:	b580      	push	{r7, lr}
 8001062:	b086      	sub	sp, #24
 8001064:	af00      	add	r7, sp, #0
 8001066:	6078      	str	r0, [r7, #4]
    uint8_t retry = 0;
 8001068:	2300      	movs	r3, #0
 800106a:	75fb      	strb	r3, [r7, #23]
    uint8_t max_retry = 3;
 800106c:	2303      	movs	r3, #3
 800106e:	75bb      	strb	r3, [r7, #22]
    
    while(retry < max_retry) {
 8001070:	e033      	b.n	80010da <HMC5883L_Reset+0x7a>
        // Power cycle by toggling mode
        I2C1_Write(HMC5883L_ADDR, MODE_REG, 0x02);  // Idle mode
 8001072:	2202      	movs	r2, #2
 8001074:	2102      	movs	r1, #2
 8001076:	201e      	movs	r0, #30
 8001078:	f000 fbcc 	bl	8001814 <I2C1_Write>
        for(volatile uint32_t i = 0; i < RESET_DELAY; i++);
 800107c:	2300      	movs	r3, #0
 800107e:	613b      	str	r3, [r7, #16]
 8001080:	e002      	b.n	8001088 <HMC5883L_Reset+0x28>
 8001082:	693b      	ldr	r3, [r7, #16]
 8001084:	3301      	adds	r3, #1
 8001086:	613b      	str	r3, [r7, #16]
 8001088:	693b      	ldr	r3, [r7, #16]
 800108a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800108e:	d3f8      	bcc.n	8001082 <HMC5883L_Reset+0x22>
        I2C1_Write(HMC5883L_ADDR, MODE_REG, 0x00);  // Continuous mode
 8001090:	2200      	movs	r2, #0
 8001092:	2102      	movs	r1, #2
 8001094:	201e      	movs	r0, #30
 8001096:	f000 fbbd 	bl	8001814 <I2C1_Write>
        
        // Wait for sensor to stabilize
        for(volatile uint32_t i = 0; i < RESET_DELAY * 2; i++);
 800109a:	2300      	movs	r3, #0
 800109c:	60fb      	str	r3, [r7, #12]
 800109e:	e002      	b.n	80010a6 <HMC5883L_Reset+0x46>
 80010a0:	68fb      	ldr	r3, [r7, #12]
 80010a2:	3301      	adds	r3, #1
 80010a4:	60fb      	str	r3, [r7, #12]
 80010a6:	68fb      	ldr	r3, [r7, #12]
 80010a8:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80010ac:	d3f8      	bcc.n	80010a0 <HMC5883L_Reset+0x40>
        
        // Check if still locked
        uint8_t status = I2C1_Read(HMC5883L_ADDR, STATUS_REG);
 80010ae:	2109      	movs	r1, #9
 80010b0:	201e      	movs	r0, #30
 80010b2:	f000 fc0b 	bl	80018cc <I2C1_Read>
 80010b6:	4603      	mov	r3, r0
 80010b8:	757b      	strb	r3, [r7, #21]
        if(!(status & STATUS_LOCK_BIT)) {
 80010ba:	7d7b      	ldrb	r3, [r7, #21]
 80010bc:	f003 0302 	and.w	r3, r3, #2
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	d104      	bne.n	80010ce <HMC5883L_Reset+0x6e>
            UART2_SendString("Reset successful\r\n");
 80010c4:	4809      	ldr	r0, [pc, #36]	@ (80010ec <HMC5883L_Reset+0x8c>)
 80010c6:	f000 feeb 	bl	8001ea0 <UART2_SendString>
            return 1;
 80010ca:	2301      	movs	r3, #1
 80010cc:	e00a      	b.n	80010e4 <HMC5883L_Reset+0x84>
        }
        
        retry++;
 80010ce:	7dfb      	ldrb	r3, [r7, #23]
 80010d0:	3301      	adds	r3, #1
 80010d2:	75fb      	strb	r3, [r7, #23]
        UART2_SendString("Reset attempt failed, retrying...\r\n");
 80010d4:	4806      	ldr	r0, [pc, #24]	@ (80010f0 <HMC5883L_Reset+0x90>)
 80010d6:	f000 fee3 	bl	8001ea0 <UART2_SendString>
    while(retry < max_retry) {
 80010da:	7dfa      	ldrb	r2, [r7, #23]
 80010dc:	7dbb      	ldrb	r3, [r7, #22]
 80010de:	429a      	cmp	r2, r3
 80010e0:	d3c7      	bcc.n	8001072 <HMC5883L_Reset+0x12>
    }
    
    return 0;
 80010e2:	2300      	movs	r3, #0
}
 80010e4:	4618      	mov	r0, r3
 80010e6:	3718      	adds	r7, #24
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}
 80010ec:	08006930 	.word	0x08006930
 80010f0:	08006944 	.word	0x08006944

080010f4 <HMC5883L_Init>:

void HMC5883L_Init(HMC5883L_t* hmc) {
 80010f4:	b580      	push	{r7, lr}
 80010f6:	b084      	sub	sp, #16
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
    // Power-on reset delay
    Timer1_Init();
 80010fc:	f7ff fe02 	bl	8000d04 <Timer1_Init>
    I2C1_Init();  // Initialize I2C
 8001100:	f000 fb00 	bl	8001704 <I2C1_Init>
    // Configure with delays between writes
    I2C1_Write(HMC5883L_ADDR, CONFIG_A, 0x70);  // 8-average, 15 Hz
 8001104:	2270      	movs	r2, #112	@ 0x70
 8001106:	2100      	movs	r1, #0
 8001108:	201e      	movs	r0, #30
 800110a:	f000 fb83 	bl	8001814 <I2C1_Write>
    I2C1_Write(HMC5883L_ADDR, CONFIG_B, 0x20);  // Gain=1090 LSB/Gauss
 800110e:	2220      	movs	r2, #32
 8001110:	2101      	movs	r1, #1
 8001112:	201e      	movs	r0, #30
 8001114:	f000 fb7e 	bl	8001814 <I2C1_Write>
    I2C1_Write(HMC5883L_ADDR, MODE_REG, 0x00);  // Continuous measurement
 8001118:	2200      	movs	r2, #0
 800111a:	2102      	movs	r1, #2
 800111c:	201e      	movs	r0, #30
 800111e:	f000 fb79 	bl	8001814 <I2C1_Write>
    //     UART2_SendString("Initialization failed!\r\n");
    //     // Handle error
    // }
    
    // Initialize calibration values
    for(int i = 0; i < 3; i++) {
 8001122:	2300      	movs	r3, #0
 8001124:	60fb      	str	r3, [r7, #12]
 8001126:	e012      	b.n	800114e <HMC5883L_Init+0x5a>
        hmc->m_bias[i] = 0.0f;
 8001128:	687a      	ldr	r2, [r7, #4]
 800112a:	68fb      	ldr	r3, [r7, #12]
 800112c:	009b      	lsls	r3, r3, #2
 800112e:	4413      	add	r3, r2
 8001130:	f04f 0200 	mov.w	r2, #0
 8001134:	601a      	str	r2, [r3, #0]
        hmc->m_scale[i] = 1.0f;
 8001136:	687a      	ldr	r2, [r7, #4]
 8001138:	68fb      	ldr	r3, [r7, #12]
 800113a:	3302      	adds	r3, #2
 800113c:	009b      	lsls	r3, r3, #2
 800113e:	4413      	add	r3, r2
 8001140:	3304      	adds	r3, #4
 8001142:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8001146:	601a      	str	r2, [r3, #0]
    for(int i = 0; i < 3; i++) {
 8001148:	68fb      	ldr	r3, [r7, #12]
 800114a:	3301      	adds	r3, #1
 800114c:	60fb      	str	r3, [r7, #12]
 800114e:	68fb      	ldr	r3, [r7, #12]
 8001150:	2b02      	cmp	r3, #2
 8001152:	dde9      	ble.n	8001128 <HMC5883L_Init+0x34>
    }
    
    // Initialize filters
    MovingAverage_Init(&hmc->avg_filter);
 8001154:	687b      	ldr	r3, [r7, #4]
 8001156:	3318      	adds	r3, #24
 8001158:	4618      	mov	r0, r3
 800115a:	f7ff fe32 	bl	8000dc2 <MovingAverage_Init>
    MedianFilter_Init(&hmc->med_filter);
 800115e:	687b      	ldr	r3, [r7, #4]
 8001160:	3334      	adds	r3, #52	@ 0x34
 8001162:	4618      	mov	r0, r3
 8001164:	f7ff feaa 	bl	8000ebc <MedianFilter_Init>
    
    hmc->current_heading = 0.0f;
 8001168:	687b      	ldr	r3, [r7, #4]
 800116a:	f04f 0200 	mov.w	r2, #0
 800116e:	64da      	str	r2, [r3, #76]	@ 0x4c
    
    UART2_SendString("HMC5883L Initialized\r\n");
 8001170:	4803      	ldr	r0, [pc, #12]	@ (8001180 <HMC5883L_Init+0x8c>)
 8001172:	f000 fe95 	bl	8001ea0 <UART2_SendString>
}
 8001176:	bf00      	nop
 8001178:	3710      	adds	r7, #16
 800117a:	46bd      	mov	sp, r7
 800117c:	bd80      	pop	{r7, pc}
 800117e:	bf00      	nop
 8001180:	08006968 	.word	0x08006968

08001184 <HMC5883L_Calibrate>:

// Modify the Calibrate function to check for locked data
uint8_t HMC5883L_Calibrate(HMC5883L_t* hmc) {
 8001184:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001188:	b0a2      	sub	sp, #136	@ 0x88
 800118a:	af04      	add	r7, sp, #16
 800118c:	6078      	str	r0, [r7, #4]
    float mag_min[3] = {999999.0f, 999999.0f, 999999.0f};
 800118e:	4a9c      	ldr	r2, [pc, #624]	@ (8001400 <HMC5883L_Calibrate+0x27c>)
 8001190:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8001194:	ca07      	ldmia	r2, {r0, r1, r2}
 8001196:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    float mag_max[3] = {-999999.0f, -999999.0f, -999999.0f};
 800119a:	4a9a      	ldr	r2, [pc, #616]	@ (8001404 <HMC5883L_Calibrate+0x280>)
 800119c:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 80011a0:	ca07      	ldmia	r2, {r0, r1, r2}
 80011a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    uint8_t data[6];
    int16_t x, y, z;
    uint32_t start_time;
    char buffer[50];
    
    UART2_SendString("Starting 3-second calibration...\r\n");
 80011a6:	4898      	ldr	r0, [pc, #608]	@ (8001408 <HMC5883L_Calibrate+0x284>)
 80011a8:	f000 fe7a 	bl	8001ea0 <UART2_SendString>
    UART2_SendString("Rotate sensor in all directions!\r\n");
 80011ac:	4897      	ldr	r0, [pc, #604]	@ (800140c <HMC5883L_Calibrate+0x288>)
 80011ae:	f000 fe77 	bl	8001ea0 <UART2_SendString>
    
    // Delay before starting
    delay_ms(10);
 80011b2:	200a      	movs	r0, #10
 80011b4:	f7ff fdee 	bl	8000d94 <delay_ms>
    
    // Collect samples for 3 seconds
    for(start_time = 0; start_time < SAMPLE_COUNT; start_time++) {
 80011b8:	2300      	movs	r3, #0
 80011ba:	677b      	str	r3, [r7, #116]	@ 0x74
 80011bc:	e0b6      	b.n	800132c <HMC5883L_Calibrate+0x1a8>
        // if(start_time >= next_progress) {
        //     sprintf(buffer, "Calibrating: %d%%\r\n", (start_time * 100) / calibration_time);
        //     UART2_SendString(buffer);
        //     next_progress += progress_interval;
        // }
        if(isDataReady()) {
 80011be:	f000 fc9d 	bl	8001afc <isDataReady>
 80011c2:	4603      	mov	r3, r0
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	f000 80a7 	beq.w	8001318 <HMC5883L_Calibrate+0x194>
            I2C1_ReadBurst(HMC5883L_ADDR, X_MSB, data, 6);
 80011ca:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 80011ce:	2306      	movs	r3, #6
 80011d0:	2103      	movs	r1, #3
 80011d2:	201e      	movs	r0, #30
 80011d4:	f000 fbf4 	bl	80019c0 <I2C1_ReadBurst>
            
            x = (int16_t)((data[0] << 8) | data[1]);
 80011d8:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 80011dc:	b21b      	sxth	r3, r3
 80011de:	021b      	lsls	r3, r3, #8
 80011e0:	b21a      	sxth	r2, r3
 80011e2:	f897 3049 	ldrb.w	r3, [r7, #73]	@ 0x49
 80011e6:	b21b      	sxth	r3, r3
 80011e8:	4313      	orrs	r3, r2
 80011ea:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
            z = (int16_t)((data[2] << 8) | data[3]);
 80011ee:	f897 304a 	ldrb.w	r3, [r7, #74]	@ 0x4a
 80011f2:	b21b      	sxth	r3, r3
 80011f4:	021b      	lsls	r3, r3, #8
 80011f6:	b21a      	sxth	r2, r3
 80011f8:	f897 304b 	ldrb.w	r3, [r7, #75]	@ 0x4b
 80011fc:	b21b      	sxth	r3, r3
 80011fe:	4313      	orrs	r3, r2
 8001200:	f8a7 306a 	strh.w	r3, [r7, #106]	@ 0x6a
            y = (int16_t)((data[4] << 8) | data[5]);
 8001204:	f897 304c 	ldrb.w	r3, [r7, #76]	@ 0x4c
 8001208:	b21b      	sxth	r3, r3
 800120a:	021b      	lsls	r3, r3, #8
 800120c:	b21a      	sxth	r2, r3
 800120e:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8001212:	b21b      	sxth	r3, r3
 8001214:	4313      	orrs	r3, r2
 8001216:	f8a7 3068 	strh.w	r3, [r7, #104]	@ 0x68
            
            // Update min/max
            if((float)x < mag_min[0]) mag_min[0] = (float)x;
 800121a:	f9b7 306c 	ldrsh.w	r3, [r7, #108]	@ 0x6c
 800121e:	ee07 3a90 	vmov	s15, r3
 8001222:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001226:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 800122a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800122e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001232:	d507      	bpl.n	8001244 <HMC5883L_Calibrate+0xc0>
 8001234:	f9b7 306c 	ldrsh.w	r3, [r7, #108]	@ 0x6c
 8001238:	ee07 3a90 	vmov	s15, r3
 800123c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001240:	edc7 7a17 	vstr	s15, [r7, #92]	@ 0x5c
            if((float)x > mag_max[0]) mag_max[0] = (float)x;
 8001244:	f9b7 306c 	ldrsh.w	r3, [r7, #108]	@ 0x6c
 8001248:	ee07 3a90 	vmov	s15, r3
 800124c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001250:	edd7 7a14 	vldr	s15, [r7, #80]	@ 0x50
 8001254:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001258:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800125c:	dd07      	ble.n	800126e <HMC5883L_Calibrate+0xea>
 800125e:	f9b7 306c 	ldrsh.w	r3, [r7, #108]	@ 0x6c
 8001262:	ee07 3a90 	vmov	s15, r3
 8001266:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800126a:	edc7 7a14 	vstr	s15, [r7, #80]	@ 0x50
            if((float)y < mag_min[1]) mag_min[1] = (float)y;
 800126e:	f9b7 3068 	ldrsh.w	r3, [r7, #104]	@ 0x68
 8001272:	ee07 3a90 	vmov	s15, r3
 8001276:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800127a:	edd7 7a18 	vldr	s15, [r7, #96]	@ 0x60
 800127e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001286:	d507      	bpl.n	8001298 <HMC5883L_Calibrate+0x114>
 8001288:	f9b7 3068 	ldrsh.w	r3, [r7, #104]	@ 0x68
 800128c:	ee07 3a90 	vmov	s15, r3
 8001290:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001294:	edc7 7a18 	vstr	s15, [r7, #96]	@ 0x60
            if((float)y > mag_max[1]) mag_max[1] = (float)y;
 8001298:	f9b7 3068 	ldrsh.w	r3, [r7, #104]	@ 0x68
 800129c:	ee07 3a90 	vmov	s15, r3
 80012a0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012a4:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 80012a8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012b0:	dd07      	ble.n	80012c2 <HMC5883L_Calibrate+0x13e>
 80012b2:	f9b7 3068 	ldrsh.w	r3, [r7, #104]	@ 0x68
 80012b6:	ee07 3a90 	vmov	s15, r3
 80012ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012be:	edc7 7a15 	vstr	s15, [r7, #84]	@ 0x54
            if((float)z < mag_min[2]) mag_min[2] = (float)z;
 80012c2:	f9b7 306a 	ldrsh.w	r3, [r7, #106]	@ 0x6a
 80012c6:	ee07 3a90 	vmov	s15, r3
 80012ca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012ce:	edd7 7a19 	vldr	s15, [r7, #100]	@ 0x64
 80012d2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012da:	d507      	bpl.n	80012ec <HMC5883L_Calibrate+0x168>
 80012dc:	f9b7 306a 	ldrsh.w	r3, [r7, #106]	@ 0x6a
 80012e0:	ee07 3a90 	vmov	s15, r3
 80012e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012e8:	edc7 7a19 	vstr	s15, [r7, #100]	@ 0x64
            if((float)z > mag_max[2]) mag_max[2] = (float)z;
 80012ec:	f9b7 306a 	ldrsh.w	r3, [r7, #106]	@ 0x6a
 80012f0:	ee07 3a90 	vmov	s15, r3
 80012f4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012f8:	edd7 7a16 	vldr	s15, [r7, #88]	@ 0x58
 80012fc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001304:	dd0c      	ble.n	8001320 <HMC5883L_Calibrate+0x19c>
 8001306:	f9b7 306a 	ldrsh.w	r3, [r7, #106]	@ 0x6a
 800130a:	ee07 3a90 	vmov	s15, r3
 800130e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001312:	edc7 7a16 	vstr	s15, [r7, #88]	@ 0x58
 8001316:	e003      	b.n	8001320 <HMC5883L_Calibrate+0x19c>
            
            // Small delay between samples
        } else{
            UART2_SendString("Data locked during calibration! Restarting...\r\n");
 8001318:	483d      	ldr	r0, [pc, #244]	@ (8001410 <HMC5883L_Calibrate+0x28c>)
 800131a:	f000 fdc1 	bl	8001ea0 <UART2_SendString>
            // return 0; // Indicate calibration failure
            continue;
 800131e:	e002      	b.n	8001326 <HMC5883L_Calibrate+0x1a2>
        }
        delay_ms(100);  // Small delay between samples
 8001320:	2064      	movs	r0, #100	@ 0x64
 8001322:	f7ff fd37 	bl	8000d94 <delay_ms>
    for(start_time = 0; start_time < SAMPLE_COUNT; start_time++) {
 8001326:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8001328:	3301      	adds	r3, #1
 800132a:	677b      	str	r3, [r7, #116]	@ 0x74
 800132c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800132e:	f5b3 7f96 	cmp.w	r3, #300	@ 0x12c
 8001332:	f4ff af44 	bcc.w	80011be <HMC5883L_Calibrate+0x3a>
    }
    
    // Calculate calibration parameters
    float avg_radius = 0.0f;
 8001336:	f04f 0300 	mov.w	r3, #0
 800133a:	673b      	str	r3, [r7, #112]	@ 0x70
    float scale_factors[3];
    
    for(uint8_t i = 0; i < 3; i++) {
 800133c:	2300      	movs	r3, #0
 800133e:	f887 306f 	strb.w	r3, [r7, #111]	@ 0x6f
 8001342:	e04d      	b.n	80013e0 <HMC5883L_Calibrate+0x25c>
        hmc->m_bias[i] = (mag_max[i] + mag_min[i]) / 2.0f;
 8001344:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 8001348:	009b      	lsls	r3, r3, #2
 800134a:	3378      	adds	r3, #120	@ 0x78
 800134c:	443b      	add	r3, r7
 800134e:	3b28      	subs	r3, #40	@ 0x28
 8001350:	ed93 7a00 	vldr	s14, [r3]
 8001354:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 8001358:	009b      	lsls	r3, r3, #2
 800135a:	3378      	adds	r3, #120	@ 0x78
 800135c:	443b      	add	r3, r7
 800135e:	3b1c      	subs	r3, #28
 8001360:	edd3 7a00 	vldr	s15, [r3]
 8001364:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001368:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 800136c:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8001370:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001374:	687a      	ldr	r2, [r7, #4]
 8001376:	009b      	lsls	r3, r3, #2
 8001378:	4413      	add	r3, r2
 800137a:	edc3 7a00 	vstr	s15, [r3]
        scale_factors[i] = (mag_max[i] - mag_min[i]) / 2.0f;
 800137e:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 8001382:	009b      	lsls	r3, r3, #2
 8001384:	3378      	adds	r3, #120	@ 0x78
 8001386:	443b      	add	r3, r7
 8001388:	3b28      	subs	r3, #40	@ 0x28
 800138a:	ed93 7a00 	vldr	s14, [r3]
 800138e:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 8001392:	009b      	lsls	r3, r3, #2
 8001394:	3378      	adds	r3, #120	@ 0x78
 8001396:	443b      	add	r3, r7
 8001398:	3b1c      	subs	r3, #28
 800139a:	edd3 7a00 	vldr	s15, [r3]
 800139e:	ee37 7a67 	vsub.f32	s14, s14, s15
 80013a2:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 80013a6:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 80013aa:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80013ae:	009b      	lsls	r3, r3, #2
 80013b0:	3378      	adds	r3, #120	@ 0x78
 80013b2:	443b      	add	r3, r7
 80013b4:	3b70      	subs	r3, #112	@ 0x70
 80013b6:	edc3 7a00 	vstr	s15, [r3]
        avg_radius += scale_factors[i];
 80013ba:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 80013be:	009b      	lsls	r3, r3, #2
 80013c0:	3378      	adds	r3, #120	@ 0x78
 80013c2:	443b      	add	r3, r7
 80013c4:	3b70      	subs	r3, #112	@ 0x70
 80013c6:	edd3 7a00 	vldr	s15, [r3]
 80013ca:	ed97 7a1c 	vldr	s14, [r7, #112]	@ 0x70
 80013ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013d2:	edc7 7a1c 	vstr	s15, [r7, #112]	@ 0x70
    for(uint8_t i = 0; i < 3; i++) {
 80013d6:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 80013da:	3301      	adds	r3, #1
 80013dc:	f887 306f 	strb.w	r3, [r7, #111]	@ 0x6f
 80013e0:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 80013e4:	2b02      	cmp	r3, #2
 80013e6:	d9ad      	bls.n	8001344 <HMC5883L_Calibrate+0x1c0>
    }
    
    avg_radius /= 3.0f;
 80013e8:	ed97 7a1c 	vldr	s14, [r7, #112]	@ 0x70
 80013ec:	eef0 6a08 	vmov.f32	s13, #8	@ 0x40400000  3.0
 80013f0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80013f4:	edc7 7a1c 	vstr	s15, [r7, #112]	@ 0x70
    
    // Calculate final scale values
    for(uint8_t i = 0; i < 3; i++) {
 80013f8:	2300      	movs	r3, #0
 80013fa:	f887 306e 	strb.w	r3, [r7, #110]	@ 0x6e
 80013fe:	e03b      	b.n	8001478 <HMC5883L_Calibrate+0x2f4>
 8001400:	08006a44 	.word	0x08006a44
 8001404:	08006a50 	.word	0x08006a50
 8001408:	08006980 	.word	0x08006980
 800140c:	080069a4 	.word	0x080069a4
 8001410:	080069c8 	.word	0x080069c8
        hmc->m_scale[i] = avg_radius / scale_factors[i];
 8001414:	f897 306e 	ldrb.w	r3, [r7, #110]	@ 0x6e
 8001418:	009b      	lsls	r3, r3, #2
 800141a:	3378      	adds	r3, #120	@ 0x78
 800141c:	443b      	add	r3, r7
 800141e:	3b70      	subs	r3, #112	@ 0x70
 8001420:	ed93 7a00 	vldr	s14, [r3]
 8001424:	f897 306e 	ldrb.w	r3, [r7, #110]	@ 0x6e
 8001428:	edd7 6a1c 	vldr	s13, [r7, #112]	@ 0x70
 800142c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001430:	687a      	ldr	r2, [r7, #4]
 8001432:	3302      	adds	r3, #2
 8001434:	009b      	lsls	r3, r3, #2
 8001436:	4413      	add	r3, r2
 8001438:	3304      	adds	r3, #4
 800143a:	edc3 7a00 	vstr	s15, [r3]
        if(isnanf(hmc->m_scale[i])) {
 800143e:	f897 306e 	ldrb.w	r3, [r7, #110]	@ 0x6e
 8001442:	687a      	ldr	r2, [r7, #4]
 8001444:	3302      	adds	r3, #2
 8001446:	009b      	lsls	r3, r3, #2
 8001448:	4413      	add	r3, r2
 800144a:	3304      	adds	r3, #4
 800144c:	edd3 7a00 	vldr	s15, [r3]
 8001450:	eef4 7a67 	vcmp.f32	s15, s15
 8001454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001458:	d709      	bvc.n	800146e <HMC5883L_Calibrate+0x2ea>
            hmc->m_scale[i] = 1.0f;
 800145a:	f897 306e 	ldrb.w	r3, [r7, #110]	@ 0x6e
 800145e:	687a      	ldr	r2, [r7, #4]
 8001460:	3302      	adds	r3, #2
 8001462:	009b      	lsls	r3, r3, #2
 8001464:	4413      	add	r3, r2
 8001466:	3304      	adds	r3, #4
 8001468:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800146c:	601a      	str	r2, [r3, #0]
    for(uint8_t i = 0; i < 3; i++) {
 800146e:	f897 306e 	ldrb.w	r3, [r7, #110]	@ 0x6e
 8001472:	3301      	adds	r3, #1
 8001474:	f887 306e 	strb.w	r3, [r7, #110]	@ 0x6e
 8001478:	f897 306e 	ldrb.w	r3, [r7, #110]	@ 0x6e
 800147c:	2b02      	cmp	r3, #2
 800147e:	d9c9      	bls.n	8001414 <HMC5883L_Calibrate+0x290>
        }
    }
    
    sprintf(buffer, "Calibration complete!\r\nBias: %.1f, %.1f, %.1f\r\n", 
            hmc->m_bias[0], hmc->m_bias[1], hmc->m_bias[2]);
 8001480:	687b      	ldr	r3, [r7, #4]
 8001482:	681b      	ldr	r3, [r3, #0]
    sprintf(buffer, "Calibration complete!\r\nBias: %.1f, %.1f, %.1f\r\n", 
 8001484:	4618      	mov	r0, r3
 8001486:	f7ff f867 	bl	8000558 <__aeabi_f2d>
 800148a:	4680      	mov	r8, r0
 800148c:	4689      	mov	r9, r1
            hmc->m_bias[0], hmc->m_bias[1], hmc->m_bias[2]);
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	685b      	ldr	r3, [r3, #4]
    sprintf(buffer, "Calibration complete!\r\nBias: %.1f, %.1f, %.1f\r\n", 
 8001492:	4618      	mov	r0, r3
 8001494:	f7ff f860 	bl	8000558 <__aeabi_f2d>
 8001498:	4604      	mov	r4, r0
 800149a:	460d      	mov	r5, r1
            hmc->m_bias[0], hmc->m_bias[1], hmc->m_bias[2]);
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	689b      	ldr	r3, [r3, #8]
    sprintf(buffer, "Calibration complete!\r\nBias: %.1f, %.1f, %.1f\r\n", 
 80014a0:	4618      	mov	r0, r3
 80014a2:	f7ff f859 	bl	8000558 <__aeabi_f2d>
 80014a6:	4602      	mov	r2, r0
 80014a8:	460b      	mov	r3, r1
 80014aa:	f107 0014 	add.w	r0, r7, #20
 80014ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80014b2:	e9cd 4500 	strd	r4, r5, [sp]
 80014b6:	4642      	mov	r2, r8
 80014b8:	464b      	mov	r3, r9
 80014ba:	4919      	ldr	r1, [pc, #100]	@ (8001520 <HMC5883L_Calibrate+0x39c>)
 80014bc:	f001 fc70 	bl	8002da0 <siprintf>
    UART2_SendString(buffer);
 80014c0:	f107 0314 	add.w	r3, r7, #20
 80014c4:	4618      	mov	r0, r3
 80014c6:	f000 fceb 	bl	8001ea0 <UART2_SendString>
    
    sprintf(buffer, "Scale: %.3f, %.3f, %.3f\r\n", 
            hmc->m_scale[0], hmc->m_scale[1], hmc->m_scale[2]);
 80014ca:	687b      	ldr	r3, [r7, #4]
 80014cc:	68db      	ldr	r3, [r3, #12]
    sprintf(buffer, "Scale: %.3f, %.3f, %.3f\r\n", 
 80014ce:	4618      	mov	r0, r3
 80014d0:	f7ff f842 	bl	8000558 <__aeabi_f2d>
 80014d4:	4680      	mov	r8, r0
 80014d6:	4689      	mov	r9, r1
            hmc->m_scale[0], hmc->m_scale[1], hmc->m_scale[2]);
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	691b      	ldr	r3, [r3, #16]
    sprintf(buffer, "Scale: %.3f, %.3f, %.3f\r\n", 
 80014dc:	4618      	mov	r0, r3
 80014de:	f7ff f83b 	bl	8000558 <__aeabi_f2d>
 80014e2:	4604      	mov	r4, r0
 80014e4:	460d      	mov	r5, r1
            hmc->m_scale[0], hmc->m_scale[1], hmc->m_scale[2]);
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	695b      	ldr	r3, [r3, #20]
    sprintf(buffer, "Scale: %.3f, %.3f, %.3f\r\n", 
 80014ea:	4618      	mov	r0, r3
 80014ec:	f7ff f834 	bl	8000558 <__aeabi_f2d>
 80014f0:	4602      	mov	r2, r0
 80014f2:	460b      	mov	r3, r1
 80014f4:	f107 0014 	add.w	r0, r7, #20
 80014f8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80014fc:	e9cd 4500 	strd	r4, r5, [sp]
 8001500:	4642      	mov	r2, r8
 8001502:	464b      	mov	r3, r9
 8001504:	4907      	ldr	r1, [pc, #28]	@ (8001524 <HMC5883L_Calibrate+0x3a0>)
 8001506:	f001 fc4b 	bl	8002da0 <siprintf>
    UART2_SendString(buffer);
 800150a:	f107 0314 	add.w	r3, r7, #20
 800150e:	4618      	mov	r0, r3
 8001510:	f000 fcc6 	bl	8001ea0 <UART2_SendString>
    
    return 1;
 8001514:	2301      	movs	r3, #1
}
 8001516:	4618      	mov	r0, r3
 8001518:	3778      	adds	r7, #120	@ 0x78
 800151a:	46bd      	mov	sp, r7
 800151c:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001520:	080069f8 	.word	0x080069f8
 8001524:	08006a28 	.word	0x08006a28

08001528 <HMC5883L_GetHeading>:

// Modify the GetHeading function to check for locked data
float HMC5883L_GetHeading(HMC5883L_t* hmc) {
 8001528:	b580      	push	{r7, lr}
 800152a:	b098      	sub	sp, #96	@ 0x60
 800152c:	af00      	add	r7, sp, #0
 800152e:	6078      	str	r0, [r7, #4]
    uint8_t status = I2C1_Read(HMC5883L_ADDR, STATUS_REG);
 8001530:	2109      	movs	r1, #9
 8001532:	201e      	movs	r0, #30
 8001534:	f000 f9ca 	bl	80018cc <I2C1_Read>
 8001538:	4603      	mov	r3, r0
 800153a:	f887 305b 	strb.w	r3, [r7, #91]	@ 0x5b
    sensor_status.last_status = status;
 800153e:	4a68      	ldr	r2, [pc, #416]	@ (80016e0 <HMC5883L_GetHeading+0x1b8>)
 8001540:	f897 305b 	ldrb.w	r3, [r7, #91]	@ 0x5b
 8001544:	7093      	strb	r3, [r2, #2]
    
    if(status & STATUS_LOCK_BIT) {
 8001546:	f897 305b 	ldrb.w	r3, [r7, #91]	@ 0x5b
 800154a:	f003 0302 	and.w	r3, r3, #2
 800154e:	2b00      	cmp	r3, #0
 8001550:	d02d      	beq.n	80015ae <HMC5883L_GetHeading+0x86>
        char buffer[50];
        sprintf(buffer, "Lock detected! Status: 0x%02X\r\n", status);
 8001552:	f897 205b 	ldrb.w	r2, [r7, #91]	@ 0x5b
 8001556:	f107 030c 	add.w	r3, r7, #12
 800155a:	4962      	ldr	r1, [pc, #392]	@ (80016e4 <HMC5883L_GetHeading+0x1bc>)
 800155c:	4618      	mov	r0, r3
 800155e:	f001 fc1f 	bl	8002da0 <siprintf>
        UART2_SendString(buffer);
 8001562:	f107 030c 	add.w	r3, r7, #12
 8001566:	4618      	mov	r0, r3
 8001568:	f000 fc9a 	bl	8001ea0 <UART2_SendString>
        
        // Attempt reset if not exceeded max retries
        if(sensor_status.retry_count < MAX_RETRIES) {
 800156c:	4b5c      	ldr	r3, [pc, #368]	@ (80016e0 <HMC5883L_GetHeading+0x1b8>)
 800156e:	785b      	ldrb	r3, [r3, #1]
 8001570:	2b02      	cmp	r3, #2
 8001572:	d813      	bhi.n	800159c <HMC5883L_GetHeading+0x74>
            sensor_status.retry_count++;
 8001574:	4b5a      	ldr	r3, [pc, #360]	@ (80016e0 <HMC5883L_GetHeading+0x1b8>)
 8001576:	785b      	ldrb	r3, [r3, #1]
 8001578:	3301      	adds	r3, #1
 800157a:	b2da      	uxtb	r2, r3
 800157c:	4b58      	ldr	r3, [pc, #352]	@ (80016e0 <HMC5883L_GetHeading+0x1b8>)
 800157e:	705a      	strb	r2, [r3, #1]
            if(HMC5883L_Reset(hmc)) {
 8001580:	6878      	ldr	r0, [r7, #4]
 8001582:	f7ff fd6d 	bl	8001060 <HMC5883L_Reset>
 8001586:	4603      	mov	r3, r0
 8001588:	2b00      	cmp	r3, #0
 800158a:	d003      	beq.n	8001594 <HMC5883L_GetHeading+0x6c>
                UART2_SendString("Resuming operation...\r\n");
 800158c:	4856      	ldr	r0, [pc, #344]	@ (80016e8 <HMC5883L_GetHeading+0x1c0>)
 800158e:	f000 fc87 	bl	8001ea0 <UART2_SendString>
 8001592:	e009      	b.n	80015a8 <HMC5883L_GetHeading+0x80>
            } else {
                UART2_SendString("Reset failed! Check connections.\r\n");
 8001594:	4855      	ldr	r0, [pc, #340]	@ (80016ec <HMC5883L_GetHeading+0x1c4>)
 8001596:	f000 fc83 	bl	8001ea0 <UART2_SendString>
 800159a:	e005      	b.n	80015a8 <HMC5883L_GetHeading+0x80>
            }
        } else {
            UART2_SendString("Max retries exceeded! Hardware error?\r\n");
 800159c:	4854      	ldr	r0, [pc, #336]	@ (80016f0 <HMC5883L_GetHeading+0x1c8>)
 800159e:	f000 fc7f 	bl	8001ea0 <UART2_SendString>
            sensor_status.error_code = HMC_ERR_TIMEOUT;
 80015a2:	4b4f      	ldr	r3, [pc, #316]	@ (80016e0 <HMC5883L_GetHeading+0x1b8>)
 80015a4:	2202      	movs	r2, #2
 80015a6:	701a      	strb	r2, [r3, #0]
        }
        return hmc->current_heading;  // Return last valid heading
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015ac:	e091      	b.n	80016d2 <HMC5883L_GetHeading+0x1aa>
    }
    
    // Reset retry count on successful read
    if(status & STATUS_RDY_BIT) {
 80015ae:	f897 305b 	ldrb.w	r3, [r7, #91]	@ 0x5b
 80015b2:	f003 0301 	and.w	r3, r3, #1
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	f000 8089 	beq.w	80016ce <HMC5883L_GetHeading+0x1a6>
        sensor_status.retry_count = 0;
 80015bc:	4b48      	ldr	r3, [pc, #288]	@ (80016e0 <HMC5883L_GetHeading+0x1b8>)
 80015be:	2200      	movs	r2, #0
 80015c0:	705a      	strb	r2, [r3, #1]
        
        uint8_t data[6];
        float heading = 0.0f;
 80015c2:	f04f 0300 	mov.w	r3, #0
 80015c6:	65fb      	str	r3, [r7, #92]	@ 0x5c
        
        I2C1_ReadBurst(HMC5883L_ADDR, X_MSB, data, 6);
 80015c8:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 80015cc:	2306      	movs	r3, #6
 80015ce:	2103      	movs	r1, #3
 80015d0:	201e      	movs	r0, #30
 80015d2:	f000 f9f5 	bl	80019c0 <I2C1_ReadBurst>
        
        // Get raw values
        float x = (float)((int16_t)((data[0] << 8) | data[1]));
 80015d6:	f897 3040 	ldrb.w	r3, [r7, #64]	@ 0x40
 80015da:	b21b      	sxth	r3, r3
 80015dc:	021b      	lsls	r3, r3, #8
 80015de:	b21a      	sxth	r2, r3
 80015e0:	f897 3041 	ldrb.w	r3, [r7, #65]	@ 0x41
 80015e4:	b21b      	sxth	r3, r3
 80015e6:	4313      	orrs	r3, r2
 80015e8:	b21b      	sxth	r3, r3
 80015ea:	ee07 3a90 	vmov	s15, r3
 80015ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80015f2:	edc7 7a15 	vstr	s15, [r7, #84]	@ 0x54
        float y = (float)((int16_t)((data[4] << 8) | data[5]));
 80015f6:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 80015fa:	b21b      	sxth	r3, r3
 80015fc:	021b      	lsls	r3, r3, #8
 80015fe:	b21a      	sxth	r2, r3
 8001600:	f897 3045 	ldrb.w	r3, [r7, #69]	@ 0x45
 8001604:	b21b      	sxth	r3, r3
 8001606:	4313      	orrs	r3, r2
 8001608:	b21b      	sxth	r3, r3
 800160a:	ee07 3a90 	vmov	s15, r3
 800160e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001612:	edc7 7a14 	vstr	s15, [r7, #80]	@ 0x50
        
        // Apply calibration
        x = (x - hmc->m_bias[0]) * hmc->m_scale[0];
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	edd3 7a00 	vldr	s15, [r3]
 800161c:	ed97 7a15 	vldr	s14, [r7, #84]	@ 0x54
 8001620:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	edd3 7a03 	vldr	s15, [r3, #12]
 800162a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800162e:	edc7 7a15 	vstr	s15, [r7, #84]	@ 0x54
        y = (y - hmc->m_bias[1]) * hmc->m_scale[1];
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	edd3 7a01 	vldr	s15, [r3, #4]
 8001638:	ed97 7a14 	vldr	s14, [r7, #80]	@ 0x50
 800163c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	edd3 7a04 	vldr	s15, [r3, #16]
 8001646:	ee67 7a27 	vmul.f32	s15, s14, s15
 800164a:	edc7 7a14 	vstr	s15, [r7, #80]	@ 0x50
        
        // Calculate heading
        heading = atan2f(y, x);
 800164e:	edd7 0a15 	vldr	s1, [r7, #84]	@ 0x54
 8001652:	ed97 0a14 	vldr	s0, [r7, #80]	@ 0x50
 8001656:	f004 ffe1 	bl	800661c <atan2f>
 800165a:	ed87 0a17 	vstr	s0, [r7, #92]	@ 0x5c
        
        // Add declination
        heading += DECLINATION_ANGLE * PI / 180.0f;
 800165e:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8001662:	ed9f 7a24 	vldr	s14, [pc, #144]	@ 80016f4 <HMC5883L_GetHeading+0x1cc>
 8001666:	ee77 7a87 	vadd.f32	s15, s15, s14
 800166a:	edc7 7a17 	vstr	s15, [r7, #92]	@ 0x5c
        
        // Normalize to 0-2π
        if(heading < 0) {
 800166e:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8001672:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001676:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800167a:	d507      	bpl.n	800168c <HMC5883L_GetHeading+0x164>
            heading += 2 * PI;
 800167c:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8001680:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 80016f8 <HMC5883L_GetHeading+0x1d0>
 8001684:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001688:	edc7 7a17 	vstr	s15, [r7, #92]	@ 0x5c
        }
        
        // Convert to degrees
        heading = heading * 180.0f / PI;
 800168c:	edd7 7a17 	vldr	s15, [r7, #92]	@ 0x5c
 8001690:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 80016fc <HMC5883L_GetHeading+0x1d4>
 8001694:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001698:	eddf 6a19 	vldr	s13, [pc, #100]	@ 8001700 <HMC5883L_GetHeading+0x1d8>
 800169c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80016a0:	edc7 7a17 	vstr	s15, [r7, #92]	@ 0x5c
        
        // Apply filters
        float heading_median = MedianFilter_Update(&hmc->med_filter, heading);
 80016a4:	687b      	ldr	r3, [r7, #4]
 80016a6:	3334      	adds	r3, #52	@ 0x34
 80016a8:	ed97 0a17 	vldr	s0, [r7, #92]	@ 0x5c
 80016ac:	4618      	mov	r0, r3
 80016ae:	f7ff fc25 	bl	8000efc <MedianFilter_Update>
 80016b2:	ed87 0a13 	vstr	s0, [r7, #76]	@ 0x4c
        float heading_avg = MovingAverage_Update(&hmc->avg_filter, heading_median);
 80016b6:	687b      	ldr	r3, [r7, #4]
 80016b8:	3318      	adds	r3, #24
 80016ba:	ed97 0a13 	vldr	s0, [r7, #76]	@ 0x4c
 80016be:	4618      	mov	r0, r3
 80016c0:	f7ff fba4 	bl	8000e0c <MovingAverage_Update>
 80016c4:	ed87 0a12 	vstr	s0, [r7, #72]	@ 0x48
        
        hmc->current_heading = heading_avg;
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80016cc:	64da      	str	r2, [r3, #76]	@ 0x4c
    }
    
    return hmc->current_heading;
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 80016d2:	ee07 3a90 	vmov	s15, r3
 80016d6:	eeb0 0a67 	vmov.f32	s0, s15
 80016da:	3760      	adds	r7, #96	@ 0x60
 80016dc:	46bd      	mov	sp, r7
 80016de:	bd80      	pop	{r7, pc}
 80016e0:	200001e8 	.word	0x200001e8
 80016e4:	08006a5c 	.word	0x08006a5c
 80016e8:	08006a7c 	.word	0x08006a7c
 80016ec:	08006a94 	.word	0x08006a94
 80016f0:	08006ab8 	.word	0x08006ab8
 80016f4:	00000000 	.word	0x00000000
 80016f8:	40c90fd0 	.word	0x40c90fd0
 80016fc:	43340000 	.word	0x43340000
 8001700:	40490fd0 	.word	0x40490fd0

08001704 <I2C1_Init>:
 */


#include "hmc_i2c.h"
void I2C1_Init(void)
{
 8001704:	b480      	push	{r7}
 8001706:	b083      	sub	sp, #12
 8001708:	af00      	add	r7, sp, #0
    // Reset I2C first
    RCC->APB1RSTR |= RCC_APB1RSTR_I2C1RST;
 800170a:	4b3f      	ldr	r3, [pc, #252]	@ (8001808 <I2C1_Init+0x104>)
 800170c:	6a1b      	ldr	r3, [r3, #32]
 800170e:	4a3e      	ldr	r2, [pc, #248]	@ (8001808 <I2C1_Init+0x104>)
 8001710:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001714:	6213      	str	r3, [r2, #32]
    for(volatile int i = 0; i < 100; i++);
 8001716:	2300      	movs	r3, #0
 8001718:	607b      	str	r3, [r7, #4]
 800171a:	e002      	b.n	8001722 <I2C1_Init+0x1e>
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	3301      	adds	r3, #1
 8001720:	607b      	str	r3, [r7, #4]
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	2b63      	cmp	r3, #99	@ 0x63
 8001726:	ddf9      	ble.n	800171c <I2C1_Init+0x18>
    RCC->APB1RSTR &= ~RCC_APB1RSTR_I2C1RST;
 8001728:	4b37      	ldr	r3, [pc, #220]	@ (8001808 <I2C1_Init+0x104>)
 800172a:	6a1b      	ldr	r3, [r3, #32]
 800172c:	4a36      	ldr	r2, [pc, #216]	@ (8001808 <I2C1_Init+0x104>)
 800172e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8001732:	6213      	str	r3, [r2, #32]

	//Clock
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8001734:	4b34      	ldr	r3, [pc, #208]	@ (8001808 <I2C1_Init+0x104>)
 8001736:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001738:	4a33      	ldr	r2, [pc, #204]	@ (8001808 <I2C1_Init+0x104>)
 800173a:	f043 0302 	orr.w	r3, r3, #2
 800173e:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8001740:	4b31      	ldr	r3, [pc, #196]	@ (8001808 <I2C1_Init+0x104>)
 8001742:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001744:	4a30      	ldr	r2, [pc, #192]	@ (8001808 <I2C1_Init+0x104>)
 8001746:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800174a:	6413      	str	r3, [r2, #64]	@ 0x40

	//Analog mode
    GPIOB->MODER |= GPIO_MODER_MODER8_1 | GPIO_MODER_MODER9_1;
 800174c:	4b2f      	ldr	r3, [pc, #188]	@ (800180c <I2C1_Init+0x108>)
 800174e:	681b      	ldr	r3, [r3, #0]
 8001750:	4a2e      	ldr	r2, [pc, #184]	@ (800180c <I2C1_Init+0x108>)
 8001752:	f443 2320 	orr.w	r3, r3, #655360	@ 0xa0000
 8001756:	6013      	str	r3, [r2, #0]

    //Open drain
	GPIOB->OTYPER |= GPIO_OTYPER_OT_8 | GPIO_OTYPER_OT_9;
 8001758:	4b2c      	ldr	r3, [pc, #176]	@ (800180c <I2C1_Init+0x108>)
 800175a:	685b      	ldr	r3, [r3, #4]
 800175c:	4a2b      	ldr	r2, [pc, #172]	@ (800180c <I2C1_Init+0x108>)
 800175e:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 8001762:	6053      	str	r3, [r2, #4]

    //High speed output
	GPIOB->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR8 | GPIO_OSPEEDER_OSPEEDR9;
 8001764:	4b29      	ldr	r3, [pc, #164]	@ (800180c <I2C1_Init+0x108>)
 8001766:	689b      	ldr	r3, [r3, #8]
 8001768:	4a28      	ldr	r2, [pc, #160]	@ (800180c <I2C1_Init+0x108>)
 800176a:	f443 2370 	orr.w	r3, r3, #983040	@ 0xf0000
 800176e:	6093      	str	r3, [r2, #8]

    //Pull up resistor
	GPIOB->PUPDR |= GPIO_PUPDR_PUPDR8_0 | GPIO_PUPDR_PUPDR9_0;
 8001770:	4b26      	ldr	r3, [pc, #152]	@ (800180c <I2C1_Init+0x108>)
 8001772:	68db      	ldr	r3, [r3, #12]
 8001774:	4a25      	ldr	r2, [pc, #148]	@ (800180c <I2C1_Init+0x108>)
 8001776:	f443 23a0 	orr.w	r3, r3, #327680	@ 0x50000
 800177a:	60d3      	str	r3, [r2, #12]

    //Alternative function for i2c
	GPIOB->AFR[1] |= (4 << 0) | (4 << 4);
 800177c:	4b23      	ldr	r3, [pc, #140]	@ (800180c <I2C1_Init+0x108>)
 800177e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001780:	4a22      	ldr	r2, [pc, #136]	@ (800180c <I2C1_Init+0x108>)
 8001782:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 8001786:	6253      	str	r3, [r2, #36]	@ 0x24

    // Make sure the bus is free
    while(I2C1->SR2 & I2C_SR2_BUSY) {
 8001788:	e014      	b.n	80017b4 <I2C1_Init+0xb0>
        // Toggle I2C pins to release bus
        GPIOB->MODER &= ~(GPIO_MODER_MODER8 | GPIO_MODER_MODER9);
 800178a:	4b20      	ldr	r3, [pc, #128]	@ (800180c <I2C1_Init+0x108>)
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	4a1f      	ldr	r2, [pc, #124]	@ (800180c <I2C1_Init+0x108>)
 8001790:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8001794:	6013      	str	r3, [r2, #0]
        for(volatile int i = 0; i < 100; i++);
 8001796:	2300      	movs	r3, #0
 8001798:	603b      	str	r3, [r7, #0]
 800179a:	e002      	b.n	80017a2 <I2C1_Init+0x9e>
 800179c:	683b      	ldr	r3, [r7, #0]
 800179e:	3301      	adds	r3, #1
 80017a0:	603b      	str	r3, [r7, #0]
 80017a2:	683b      	ldr	r3, [r7, #0]
 80017a4:	2b63      	cmp	r3, #99	@ 0x63
 80017a6:	ddf9      	ble.n	800179c <I2C1_Init+0x98>
        GPIOB->MODER |= GPIO_MODER_MODER8_1 | GPIO_MODER_MODER9_1;
 80017a8:	4b18      	ldr	r3, [pc, #96]	@ (800180c <I2C1_Init+0x108>)
 80017aa:	681b      	ldr	r3, [r3, #0]
 80017ac:	4a17      	ldr	r2, [pc, #92]	@ (800180c <I2C1_Init+0x108>)
 80017ae:	f443 2320 	orr.w	r3, r3, #655360	@ 0xa0000
 80017b2:	6013      	str	r3, [r2, #0]
    while(I2C1->SR2 & I2C_SR2_BUSY) {
 80017b4:	4b16      	ldr	r3, [pc, #88]	@ (8001810 <I2C1_Init+0x10c>)
 80017b6:	699b      	ldr	r3, [r3, #24]
 80017b8:	f003 0302 	and.w	r3, r3, #2
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d1e4      	bne.n	800178a <I2C1_Init+0x86>
    }

	//Reset I2C
	I2C1->CR1 |= (1<<15);
 80017c0:	4b13      	ldr	r3, [pc, #76]	@ (8001810 <I2C1_Init+0x10c>)
 80017c2:	681b      	ldr	r3, [r3, #0]
 80017c4:	4a12      	ldr	r2, [pc, #72]	@ (8001810 <I2C1_Init+0x10c>)
 80017c6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80017ca:	6013      	str	r3, [r2, #0]
	I2C1->CR1 &= ~(1<<15);
 80017cc:	4b10      	ldr	r3, [pc, #64]	@ (8001810 <I2C1_Init+0x10c>)
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	4a0f      	ldr	r2, [pc, #60]	@ (8001810 <I2C1_Init+0x10c>)
 80017d2:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80017d6:	6013      	str	r3, [r2, #0]

	//I2C clock bus
    I2C1->CR2 |= (42<<0);
 80017d8:	4b0d      	ldr	r3, [pc, #52]	@ (8001810 <I2C1_Init+0x10c>)
 80017da:	685b      	ldr	r3, [r3, #4]
 80017dc:	4a0c      	ldr	r2, [pc, #48]	@ (8001810 <I2C1_Init+0x10c>)
 80017de:	f043 032a 	orr.w	r3, r3, #42	@ 0x2a
 80017e2:	6053      	str	r3, [r2, #4]
    I2C1->CCR = 210<<0;
 80017e4:	4b0a      	ldr	r3, [pc, #40]	@ (8001810 <I2C1_Init+0x10c>)
 80017e6:	22d2      	movs	r2, #210	@ 0xd2
 80017e8:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 43;
 80017ea:	4b09      	ldr	r3, [pc, #36]	@ (8001810 <I2C1_Init+0x10c>)
 80017ec:	222b      	movs	r2, #43	@ 0x2b
 80017ee:	621a      	str	r2, [r3, #32]

    //I2C enable
	I2C1->CR1 |= I2C_CR1_PE;
 80017f0:	4b07      	ldr	r3, [pc, #28]	@ (8001810 <I2C1_Init+0x10c>)
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	4a06      	ldr	r2, [pc, #24]	@ (8001810 <I2C1_Init+0x10c>)
 80017f6:	f043 0301 	orr.w	r3, r3, #1
 80017fa:	6013      	str	r3, [r2, #0]
}
 80017fc:	bf00      	nop
 80017fe:	370c      	adds	r7, #12
 8001800:	46bd      	mov	sp, r7
 8001802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001806:	4770      	bx	lr
 8001808:	40023800 	.word	0x40023800
 800180c:	40020400 	.word	0x40020400
 8001810:	40005400 	.word	0x40005400

08001814 <I2C1_Write>:

// Modify I2C1_Write function
void I2C1_Write(uint8_t address, uint8_t reg, uint8_t data)
{
 8001814:	b480      	push	{r7}
 8001816:	b083      	sub	sp, #12
 8001818:	af00      	add	r7, sp, #0
 800181a:	4603      	mov	r3, r0
 800181c:	71fb      	strb	r3, [r7, #7]
 800181e:	460b      	mov	r3, r1
 8001820:	71bb      	strb	r3, [r7, #6]
 8001822:	4613      	mov	r3, r2
 8001824:	717b      	strb	r3, [r7, #5]
    // Start condition
    I2C1->CR1 |= I2C_CR1_ACK;
 8001826:	4b28      	ldr	r3, [pc, #160]	@ (80018c8 <I2C1_Write+0xb4>)
 8001828:	681b      	ldr	r3, [r3, #0]
 800182a:	4a27      	ldr	r2, [pc, #156]	@ (80018c8 <I2C1_Write+0xb4>)
 800182c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001830:	6013      	str	r3, [r2, #0]
    I2C1->CR1 |= I2C_CR1_START;
 8001832:	4b25      	ldr	r3, [pc, #148]	@ (80018c8 <I2C1_Write+0xb4>)
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	4a24      	ldr	r2, [pc, #144]	@ (80018c8 <I2C1_Write+0xb4>)
 8001838:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800183c:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_SB));
 800183e:	bf00      	nop
 8001840:	4b21      	ldr	r3, [pc, #132]	@ (80018c8 <I2C1_Write+0xb4>)
 8001842:	695b      	ldr	r3, [r3, #20]
 8001844:	f003 0301 	and.w	r3, r3, #1
 8001848:	2b00      	cmp	r3, #0
 800184a:	d0f9      	beq.n	8001840 <I2C1_Write+0x2c>

    // Send slave address (write mode)
    I2C1->DR = address << 1;  // Shift left 1 bit for write mode (0)
 800184c:	79fb      	ldrb	r3, [r7, #7]
 800184e:	4a1e      	ldr	r2, [pc, #120]	@ (80018c8 <I2C1_Write+0xb4>)
 8001850:	005b      	lsls	r3, r3, #1
 8001852:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_ADDR));
 8001854:	bf00      	nop
 8001856:	4b1c      	ldr	r3, [pc, #112]	@ (80018c8 <I2C1_Write+0xb4>)
 8001858:	695b      	ldr	r3, [r3, #20]
 800185a:	f003 0302 	and.w	r3, r3, #2
 800185e:	2b00      	cmp	r3, #0
 8001860:	d0f9      	beq.n	8001856 <I2C1_Write+0x42>
    (void)I2C1->SR1;
 8001862:	4b19      	ldr	r3, [pc, #100]	@ (80018c8 <I2C1_Write+0xb4>)
 8001864:	695b      	ldr	r3, [r3, #20]
    (void)I2C1->SR2;
 8001866:	4b18      	ldr	r3, [pc, #96]	@ (80018c8 <I2C1_Write+0xb4>)
 8001868:	699b      	ldr	r3, [r3, #24]

    // Send register address
    while(!(I2C1->SR1 & I2C_SR1_TXE));
 800186a:	bf00      	nop
 800186c:	4b16      	ldr	r3, [pc, #88]	@ (80018c8 <I2C1_Write+0xb4>)
 800186e:	695b      	ldr	r3, [r3, #20]
 8001870:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001874:	2b00      	cmp	r3, #0
 8001876:	d0f9      	beq.n	800186c <I2C1_Write+0x58>
    I2C1->DR = reg;
 8001878:	4a13      	ldr	r2, [pc, #76]	@ (80018c8 <I2C1_Write+0xb4>)
 800187a:	79bb      	ldrb	r3, [r7, #6]
 800187c:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_BTF));
 800187e:	bf00      	nop
 8001880:	4b11      	ldr	r3, [pc, #68]	@ (80018c8 <I2C1_Write+0xb4>)
 8001882:	695b      	ldr	r3, [r3, #20]
 8001884:	f003 0304 	and.w	r3, r3, #4
 8001888:	2b00      	cmp	r3, #0
 800188a:	d0f9      	beq.n	8001880 <I2C1_Write+0x6c>

    // Send data
    while(!(I2C1->SR1 & I2C_SR1_TXE));
 800188c:	bf00      	nop
 800188e:	4b0e      	ldr	r3, [pc, #56]	@ (80018c8 <I2C1_Write+0xb4>)
 8001890:	695b      	ldr	r3, [r3, #20]
 8001892:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001896:	2b00      	cmp	r3, #0
 8001898:	d0f9      	beq.n	800188e <I2C1_Write+0x7a>
    I2C1->DR = data;
 800189a:	4a0b      	ldr	r2, [pc, #44]	@ (80018c8 <I2C1_Write+0xb4>)
 800189c:	797b      	ldrb	r3, [r7, #5]
 800189e:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_BTF));
 80018a0:	bf00      	nop
 80018a2:	4b09      	ldr	r3, [pc, #36]	@ (80018c8 <I2C1_Write+0xb4>)
 80018a4:	695b      	ldr	r3, [r3, #20]
 80018a6:	f003 0304 	and.w	r3, r3, #4
 80018aa:	2b00      	cmp	r3, #0
 80018ac:	d0f9      	beq.n	80018a2 <I2C1_Write+0x8e>

    // Stop condition
    I2C1->CR1 |= I2C_CR1_STOP;
 80018ae:	4b06      	ldr	r3, [pc, #24]	@ (80018c8 <I2C1_Write+0xb4>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	4a05      	ldr	r2, [pc, #20]	@ (80018c8 <I2C1_Write+0xb4>)
 80018b4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80018b8:	6013      	str	r3, [r2, #0]
}
 80018ba:	bf00      	nop
 80018bc:	370c      	adds	r7, #12
 80018be:	46bd      	mov	sp, r7
 80018c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018c4:	4770      	bx	lr
 80018c6:	bf00      	nop
 80018c8:	40005400 	.word	0x40005400

080018cc <I2C1_Read>:

uint8_t I2C1_Read(uint8_t address, uint8_t reg)
{
 80018cc:	b480      	push	{r7}
 80018ce:	b085      	sub	sp, #20
 80018d0:	af00      	add	r7, sp, #0
 80018d2:	4603      	mov	r3, r0
 80018d4:	460a      	mov	r2, r1
 80018d6:	71fb      	strb	r3, [r7, #7]
 80018d8:	4613      	mov	r3, r2
 80018da:	71bb      	strb	r3, [r7, #6]
    uint8_t data = 0;
 80018dc:	2300      	movs	r3, #0
 80018de:	73fb      	strb	r3, [r7, #15]

    // Start condition
    I2C1->CR1 |= I2C_CR1_ACK;
 80018e0:	4b36      	ldr	r3, [pc, #216]	@ (80019bc <I2C1_Read+0xf0>)
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a35      	ldr	r2, [pc, #212]	@ (80019bc <I2C1_Read+0xf0>)
 80018e6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80018ea:	6013      	str	r3, [r2, #0]
    I2C1->CR1 |= I2C_CR1_START;
 80018ec:	4b33      	ldr	r3, [pc, #204]	@ (80019bc <I2C1_Read+0xf0>)
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	4a32      	ldr	r2, [pc, #200]	@ (80019bc <I2C1_Read+0xf0>)
 80018f2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80018f6:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_SB));
 80018f8:	bf00      	nop
 80018fa:	4b30      	ldr	r3, [pc, #192]	@ (80019bc <I2C1_Read+0xf0>)
 80018fc:	695b      	ldr	r3, [r3, #20]
 80018fe:	f003 0301 	and.w	r3, r3, #1
 8001902:	2b00      	cmp	r3, #0
 8001904:	d0f9      	beq.n	80018fa <I2C1_Read+0x2e>

    // Send slave address (write mode)
    I2C1->DR = address << 1;  // Shift left 1 bit for write mode (0)
 8001906:	79fb      	ldrb	r3, [r7, #7]
 8001908:	4a2c      	ldr	r2, [pc, #176]	@ (80019bc <I2C1_Read+0xf0>)
 800190a:	005b      	lsls	r3, r3, #1
 800190c:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_ADDR));
 800190e:	bf00      	nop
 8001910:	4b2a      	ldr	r3, [pc, #168]	@ (80019bc <I2C1_Read+0xf0>)
 8001912:	695b      	ldr	r3, [r3, #20]
 8001914:	f003 0302 	and.w	r3, r3, #2
 8001918:	2b00      	cmp	r3, #0
 800191a:	d0f9      	beq.n	8001910 <I2C1_Read+0x44>
    (void)I2C1->SR1;
 800191c:	4b27      	ldr	r3, [pc, #156]	@ (80019bc <I2C1_Read+0xf0>)
 800191e:	695b      	ldr	r3, [r3, #20]
    (void)I2C1->SR2;
 8001920:	4b26      	ldr	r3, [pc, #152]	@ (80019bc <I2C1_Read+0xf0>)
 8001922:	699b      	ldr	r3, [r3, #24]

    // Send register address
    while(!(I2C1->SR1 & I2C_SR1_TXE));
 8001924:	bf00      	nop
 8001926:	4b25      	ldr	r3, [pc, #148]	@ (80019bc <I2C1_Read+0xf0>)
 8001928:	695b      	ldr	r3, [r3, #20]
 800192a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800192e:	2b00      	cmp	r3, #0
 8001930:	d0f9      	beq.n	8001926 <I2C1_Read+0x5a>
    I2C1->DR = reg;
 8001932:	4a22      	ldr	r2, [pc, #136]	@ (80019bc <I2C1_Read+0xf0>)
 8001934:	79bb      	ldrb	r3, [r7, #6]
 8001936:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_BTF));
 8001938:	bf00      	nop
 800193a:	4b20      	ldr	r3, [pc, #128]	@ (80019bc <I2C1_Read+0xf0>)
 800193c:	695b      	ldr	r3, [r3, #20]
 800193e:	f003 0304 	and.w	r3, r3, #4
 8001942:	2b00      	cmp	r3, #0
 8001944:	d0f9      	beq.n	800193a <I2C1_Read+0x6e>

    // Restart for reading
    I2C1->CR1 |= I2C_CR1_START;
 8001946:	4b1d      	ldr	r3, [pc, #116]	@ (80019bc <I2C1_Read+0xf0>)
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	4a1c      	ldr	r2, [pc, #112]	@ (80019bc <I2C1_Read+0xf0>)
 800194c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001950:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_SB));
 8001952:	bf00      	nop
 8001954:	4b19      	ldr	r3, [pc, #100]	@ (80019bc <I2C1_Read+0xf0>)
 8001956:	695b      	ldr	r3, [r3, #20]
 8001958:	f003 0301 	and.w	r3, r3, #1
 800195c:	2b00      	cmp	r3, #0
 800195e:	d0f9      	beq.n	8001954 <I2C1_Read+0x88>

    // Send slave address (read mode)
    I2C1->DR = (address << 1) | 0x1;  // Shift left 1 bit and set read bit (1)
 8001960:	79fb      	ldrb	r3, [r7, #7]
 8001962:	005b      	lsls	r3, r3, #1
 8001964:	f043 0201 	orr.w	r2, r3, #1
 8001968:	4b14      	ldr	r3, [pc, #80]	@ (80019bc <I2C1_Read+0xf0>)
 800196a:	611a      	str	r2, [r3, #16]
    while(!(I2C1->SR1 & I2C_SR1_ADDR));
 800196c:	bf00      	nop
 800196e:	4b13      	ldr	r3, [pc, #76]	@ (80019bc <I2C1_Read+0xf0>)
 8001970:	695b      	ldr	r3, [r3, #20]
 8001972:	f003 0302 	and.w	r3, r3, #2
 8001976:	2b00      	cmp	r3, #0
 8001978:	d0f9      	beq.n	800196e <I2C1_Read+0xa2>
    
    // Clear ACK bit and set STOP
    I2C1->CR1 &= ~I2C_CR1_ACK;
 800197a:	4b10      	ldr	r3, [pc, #64]	@ (80019bc <I2C1_Read+0xf0>)
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	4a0f      	ldr	r2, [pc, #60]	@ (80019bc <I2C1_Read+0xf0>)
 8001980:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001984:	6013      	str	r3, [r2, #0]
    (void)I2C1->SR1;
 8001986:	4b0d      	ldr	r3, [pc, #52]	@ (80019bc <I2C1_Read+0xf0>)
 8001988:	695b      	ldr	r3, [r3, #20]
    (void)I2C1->SR2;
 800198a:	4b0c      	ldr	r3, [pc, #48]	@ (80019bc <I2C1_Read+0xf0>)
 800198c:	699b      	ldr	r3, [r3, #24]

    // Wait for data and read it
    while(!(I2C1->SR1 & I2C_SR1_RXNE));
 800198e:	bf00      	nop
 8001990:	4b0a      	ldr	r3, [pc, #40]	@ (80019bc <I2C1_Read+0xf0>)
 8001992:	695b      	ldr	r3, [r3, #20]
 8001994:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001998:	2b00      	cmp	r3, #0
 800199a:	d0f9      	beq.n	8001990 <I2C1_Read+0xc4>
    data = I2C1->DR;
 800199c:	4b07      	ldr	r3, [pc, #28]	@ (80019bc <I2C1_Read+0xf0>)
 800199e:	691b      	ldr	r3, [r3, #16]
 80019a0:	73fb      	strb	r3, [r7, #15]

    // Stop condition
    I2C1->CR1 |= I2C_CR1_STOP;
 80019a2:	4b06      	ldr	r3, [pc, #24]	@ (80019bc <I2C1_Read+0xf0>)
 80019a4:	681b      	ldr	r3, [r3, #0]
 80019a6:	4a05      	ldr	r2, [pc, #20]	@ (80019bc <I2C1_Read+0xf0>)
 80019a8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80019ac:	6013      	str	r3, [r2, #0]

    return data;
 80019ae:	7bfb      	ldrb	r3, [r7, #15]
}
 80019b0:	4618      	mov	r0, r3
 80019b2:	3714      	adds	r7, #20
 80019b4:	46bd      	mov	sp, r7
 80019b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ba:	4770      	bx	lr
 80019bc:	40005400 	.word	0x40005400

080019c0 <I2C1_ReadBurst>:

// Add this new function to read multiple registers in sequence
void I2C1_ReadBurst(uint8_t address, uint8_t start_reg, uint8_t* buffer, uint8_t length)
{
 80019c0:	b480      	push	{r7}
 80019c2:	b085      	sub	sp, #20
 80019c4:	af00      	add	r7, sp, #0
 80019c6:	603a      	str	r2, [r7, #0]
 80019c8:	461a      	mov	r2, r3
 80019ca:	4603      	mov	r3, r0
 80019cc:	71fb      	strb	r3, [r7, #7]
 80019ce:	460b      	mov	r3, r1
 80019d0:	71bb      	strb	r3, [r7, #6]
 80019d2:	4613      	mov	r3, r2
 80019d4:	717b      	strb	r3, [r7, #5]
    // Start condition
    I2C1->CR1 |= I2C_CR1_ACK;
 80019d6:	4b48      	ldr	r3, [pc, #288]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	4a47      	ldr	r2, [pc, #284]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 80019dc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80019e0:	6013      	str	r3, [r2, #0]
    I2C1->CR1 |= I2C_CR1_START;
 80019e2:	4b45      	ldr	r3, [pc, #276]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	4a44      	ldr	r2, [pc, #272]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 80019e8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80019ec:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_SB));
 80019ee:	bf00      	nop
 80019f0:	4b41      	ldr	r3, [pc, #260]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 80019f2:	695b      	ldr	r3, [r3, #20]
 80019f4:	f003 0301 	and.w	r3, r3, #1
 80019f8:	2b00      	cmp	r3, #0
 80019fa:	d0f9      	beq.n	80019f0 <I2C1_ReadBurst+0x30>

    // Send slave address (write mode) to set register pointer
    I2C1->DR = address << 1;
 80019fc:	79fb      	ldrb	r3, [r7, #7]
 80019fe:	4a3e      	ldr	r2, [pc, #248]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a00:	005b      	lsls	r3, r3, #1
 8001a02:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_ADDR));
 8001a04:	bf00      	nop
 8001a06:	4b3c      	ldr	r3, [pc, #240]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a08:	695b      	ldr	r3, [r3, #20]
 8001a0a:	f003 0302 	and.w	r3, r3, #2
 8001a0e:	2b00      	cmp	r3, #0
 8001a10:	d0f9      	beq.n	8001a06 <I2C1_ReadBurst+0x46>
    (void)I2C1->SR1;
 8001a12:	4b39      	ldr	r3, [pc, #228]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a14:	695b      	ldr	r3, [r3, #20]
    (void)I2C1->SR2;
 8001a16:	4b38      	ldr	r3, [pc, #224]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a18:	699b      	ldr	r3, [r3, #24]

    // Send start register address
    while(!(I2C1->SR1 & I2C_SR1_TXE));
 8001a1a:	bf00      	nop
 8001a1c:	4b36      	ldr	r3, [pc, #216]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a1e:	695b      	ldr	r3, [r3, #20]
 8001a20:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d0f9      	beq.n	8001a1c <I2C1_ReadBurst+0x5c>
    I2C1->DR = start_reg;
 8001a28:	4a33      	ldr	r2, [pc, #204]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a2a:	79bb      	ldrb	r3, [r7, #6]
 8001a2c:	6113      	str	r3, [r2, #16]
    while(!(I2C1->SR1 & I2C_SR1_BTF));
 8001a2e:	bf00      	nop
 8001a30:	4b31      	ldr	r3, [pc, #196]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a32:	695b      	ldr	r3, [r3, #20]
 8001a34:	f003 0304 	and.w	r3, r3, #4
 8001a38:	2b00      	cmp	r3, #0
 8001a3a:	d0f9      	beq.n	8001a30 <I2C1_ReadBurst+0x70>

    // Repeated start
    I2C1->CR1 |= I2C_CR1_START;
 8001a3c:	4b2e      	ldr	r3, [pc, #184]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	4a2d      	ldr	r2, [pc, #180]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a42:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001a46:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_SB));
 8001a48:	bf00      	nop
 8001a4a:	4b2b      	ldr	r3, [pc, #172]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a4c:	695b      	ldr	r3, [r3, #20]
 8001a4e:	f003 0301 	and.w	r3, r3, #1
 8001a52:	2b00      	cmp	r3, #0
 8001a54:	d0f9      	beq.n	8001a4a <I2C1_ReadBurst+0x8a>

    // Send slave address (read mode)
    I2C1->DR = (address << 1) | 0x1;
 8001a56:	79fb      	ldrb	r3, [r7, #7]
 8001a58:	005b      	lsls	r3, r3, #1
 8001a5a:	f043 0201 	orr.w	r2, r3, #1
 8001a5e:	4b26      	ldr	r3, [pc, #152]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a60:	611a      	str	r2, [r3, #16]
    while(!(I2C1->SR1 & I2C_SR1_ADDR));
 8001a62:	bf00      	nop
 8001a64:	4b24      	ldr	r3, [pc, #144]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a66:	695b      	ldr	r3, [r3, #20]
 8001a68:	f003 0302 	and.w	r3, r3, #2
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	d0f9      	beq.n	8001a64 <I2C1_ReadBurst+0xa4>
    (void)I2C1->SR1;
 8001a70:	4b21      	ldr	r3, [pc, #132]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a72:	695b      	ldr	r3, [r3, #20]
    (void)I2C1->SR2;
 8001a74:	4b20      	ldr	r3, [pc, #128]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a76:	699b      	ldr	r3, [r3, #24]

    // Read multiple bytes using auto-increment
    for(uint8_t i = 0; i < length - 1; i++) {
 8001a78:	2300      	movs	r3, #0
 8001a7a:	73fb      	strb	r3, [r7, #15]
 8001a7c:	e016      	b.n	8001aac <I2C1_ReadBurst+0xec>
        // Keep ACK high to continue reading
        I2C1->CR1 |= I2C_CR1_ACK;
 8001a7e:	4b1e      	ldr	r3, [pc, #120]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a80:	681b      	ldr	r3, [r3, #0]
 8001a82:	4a1d      	ldr	r2, [pc, #116]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a84:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001a88:	6013      	str	r3, [r2, #0]
        while(!(I2C1->SR1 & I2C_SR1_RXNE));
 8001a8a:	bf00      	nop
 8001a8c:	4b1a      	ldr	r3, [pc, #104]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a8e:	695b      	ldr	r3, [r3, #20]
 8001a90:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001a94:	2b00      	cmp	r3, #0
 8001a96:	d0f9      	beq.n	8001a8c <I2C1_ReadBurst+0xcc>
        buffer[i] = I2C1->DR;
 8001a98:	4b17      	ldr	r3, [pc, #92]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001a9a:	6919      	ldr	r1, [r3, #16]
 8001a9c:	7bfb      	ldrb	r3, [r7, #15]
 8001a9e:	683a      	ldr	r2, [r7, #0]
 8001aa0:	4413      	add	r3, r2
 8001aa2:	b2ca      	uxtb	r2, r1
 8001aa4:	701a      	strb	r2, [r3, #0]
    for(uint8_t i = 0; i < length - 1; i++) {
 8001aa6:	7bfb      	ldrb	r3, [r7, #15]
 8001aa8:	3301      	adds	r3, #1
 8001aaa:	73fb      	strb	r3, [r7, #15]
 8001aac:	7bfa      	ldrb	r2, [r7, #15]
 8001aae:	797b      	ldrb	r3, [r7, #5]
 8001ab0:	3b01      	subs	r3, #1
 8001ab2:	429a      	cmp	r2, r3
 8001ab4:	dbe3      	blt.n	8001a7e <I2C1_ReadBurst+0xbe>
    }

    // Read last byte with NACK
    I2C1->CR1 &= ~I2C_CR1_ACK;
 8001ab6:	4b10      	ldr	r3, [pc, #64]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	4a0f      	ldr	r2, [pc, #60]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001abc:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001ac0:	6013      	str	r3, [r2, #0]
    while(!(I2C1->SR1 & I2C_SR1_RXNE));
 8001ac2:	bf00      	nop
 8001ac4:	4b0c      	ldr	r3, [pc, #48]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001ac6:	695b      	ldr	r3, [r3, #20]
 8001ac8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001acc:	2b00      	cmp	r3, #0
 8001ace:	d0f9      	beq.n	8001ac4 <I2C1_ReadBurst+0x104>
    buffer[length-1] = I2C1->DR;
 8001ad0:	4b09      	ldr	r3, [pc, #36]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001ad2:	6919      	ldr	r1, [r3, #16]
 8001ad4:	797b      	ldrb	r3, [r7, #5]
 8001ad6:	3b01      	subs	r3, #1
 8001ad8:	683a      	ldr	r2, [r7, #0]
 8001ada:	4413      	add	r3, r2
 8001adc:	b2ca      	uxtb	r2, r1
 8001ade:	701a      	strb	r2, [r3, #0]

    // Stop condition
    I2C1->CR1 |= I2C_CR1_STOP;
 8001ae0:	4b05      	ldr	r3, [pc, #20]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	4a04      	ldr	r2, [pc, #16]	@ (8001af8 <I2C1_ReadBurst+0x138>)
 8001ae6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001aea:	6013      	str	r3, [r2, #0]
}
 8001aec:	bf00      	nop
 8001aee:	3714      	adds	r7, #20
 8001af0:	46bd      	mov	sp, r7
 8001af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001af6:	4770      	bx	lr
 8001af8:	40005400 	.word	0x40005400

08001afc <isDataReady>:

// Modify the isDataReady function to include better checking and logging
uint8_t isDataReady(void)
{
 8001afc:	b580      	push	{r7, lr}
 8001afe:	b08e      	sub	sp, #56	@ 0x38
 8001b00:	af00      	add	r7, sp, #0
    uint8_t status = I2C1_Read(HMC5883L_ADDR, STATUS_REG);
 8001b02:	2109      	movs	r1, #9
 8001b04:	201e      	movs	r0, #30
 8001b06:	f7ff fee1 	bl	80018cc <I2C1_Read>
 8001b0a:	4603      	mov	r3, r0
 8001b0c:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
    char buffer[50];

    // Check for data lock (overwrite prevented)
    if (status & STATUS_LOCK_MASK) {
 8001b10:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8001b14:	f003 0302 	and.w	r3, r3, #2
 8001b18:	2b00      	cmp	r3, #0
 8001b1a:	d00c      	beq.n	8001b36 <isDataReady+0x3a>
        sprintf(buffer, "WARNING: Data lock detected (0x%02X)\r\n", status);
 8001b1c:	f897 2037 	ldrb.w	r2, [r7, #55]	@ 0x37
 8001b20:	1d3b      	adds	r3, r7, #4
 8001b22:	4917      	ldr	r1, [pc, #92]	@ (8001b80 <isDataReady+0x84>)
 8001b24:	4618      	mov	r0, r3
 8001b26:	f001 f93b 	bl	8002da0 <siprintf>
        UART2_SendString(buffer);
 8001b2a:	1d3b      	adds	r3, r7, #4
 8001b2c:	4618      	mov	r0, r3
 8001b2e:	f000 f9b7 	bl	8001ea0 <UART2_SendString>
        return 0;
 8001b32:	2300      	movs	r3, #0
 8001b34:	e020      	b.n	8001b78 <isDataReady+0x7c>
    }

    // Check for data ready
    if (status & STATUS_READY_MASK) {
 8001b36:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8001b3a:	f003 0301 	and.w	r3, r3, #1
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	d001      	beq.n	8001b46 <isDataReady+0x4a>
        return 1;
 8001b42:	2301      	movs	r3, #1
 8001b44:	e018      	b.n	8001b78 <isDataReady+0x7c>
    }

    // Optional: Log when waiting for too long
    static uint32_t wait_count = 0;
    wait_count++;
 8001b46:	4b0f      	ldr	r3, [pc, #60]	@ (8001b84 <isDataReady+0x88>)
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	3301      	adds	r3, #1
 8001b4c:	4a0d      	ldr	r2, [pc, #52]	@ (8001b84 <isDataReady+0x88>)
 8001b4e:	6013      	str	r3, [r2, #0]
    if (wait_count > 1000) {
 8001b50:	4b0c      	ldr	r3, [pc, #48]	@ (8001b84 <isDataReady+0x88>)
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001b58:	d90d      	bls.n	8001b76 <isDataReady+0x7a>
        sprintf(buffer, "INFO: Waiting for data... Status: 0x%02X\r\n", status);
 8001b5a:	f897 2037 	ldrb.w	r2, [r7, #55]	@ 0x37
 8001b5e:	1d3b      	adds	r3, r7, #4
 8001b60:	4909      	ldr	r1, [pc, #36]	@ (8001b88 <isDataReady+0x8c>)
 8001b62:	4618      	mov	r0, r3
 8001b64:	f001 f91c 	bl	8002da0 <siprintf>
        UART2_SendString(buffer);
 8001b68:	1d3b      	adds	r3, r7, #4
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	f000 f998 	bl	8001ea0 <UART2_SendString>
        wait_count = 0;
 8001b70:	4b04      	ldr	r3, [pc, #16]	@ (8001b84 <isDataReady+0x88>)
 8001b72:	2200      	movs	r2, #0
 8001b74:	601a      	str	r2, [r3, #0]
    }

    return 0;
 8001b76:	2300      	movs	r3, #0
}
 8001b78:	4618      	mov	r0, r3
 8001b7a:	3738      	adds	r7, #56	@ 0x38
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	bd80      	pop	{r7, pc}
 8001b80:	08006ae0 	.word	0x08006ae0
 8001b84:	200001ec 	.word	0x200001ec
 8001b88:	08006b08 	.word	0x08006b08

08001b8c <main>:
#define STATUS_LOCK_MASK 0x02
#define STATUS_READY_MASK 0x01

// Add timeout mechanism
#define I2C_TIMEOUT 10000
int main(void) {
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	b0a2      	sub	sp, #136	@ 0x88
 8001b90:	af00      	add	r7, sp, #0
    char buffer[50];
    HMC5883L_t hmc;
    float heading;

    // Initialize peripherals
    UART2_Init();  // Changed from UART2_Init
 8001b92:	f000 f933 	bl	8001dfc <UART2_Init>
    UART2_SendString("HMC5883L Test\r\n");  // Changed from UART2_SendString
 8001b96:	4813      	ldr	r0, [pc, #76]	@ (8001be4 <main+0x58>)
 8001b98:	f000 f982 	bl	8001ea0 <UART2_SendString>

    // Initialize HMC5883L
    HMC5883L_Init(&hmc);
 8001b9c:	463b      	mov	r3, r7
 8001b9e:	4618      	mov	r0, r3
 8001ba0:	f7ff faa8 	bl	80010f4 <HMC5883L_Init>

    // Perform calibration
    HMC5883L_Calibrate(&hmc);
 8001ba4:	463b      	mov	r3, r7
 8001ba6:	4618      	mov	r0, r3
 8001ba8:	f7ff faec 	bl	8001184 <HMC5883L_Calibrate>

    while(1) {
        // Get filtered and calibrated heading
        heading = HMC5883L_GetHeading(&hmc);
 8001bac:	463b      	mov	r3, r7
 8001bae:	4618      	mov	r0, r3
 8001bb0:	f7ff fcba 	bl	8001528 <HMC5883L_GetHeading>
 8001bb4:	ed87 0a21 	vstr	s0, [r7, #132]	@ 0x84

        // Send data via UART
        sprintf(buffer, "Heading: %.2f\r\n", heading);
 8001bb8:	f8d7 0084 	ldr.w	r0, [r7, #132]	@ 0x84
 8001bbc:	f7fe fccc 	bl	8000558 <__aeabi_f2d>
 8001bc0:	4602      	mov	r2, r0
 8001bc2:	460b      	mov	r3, r1
 8001bc4:	f107 0050 	add.w	r0, r7, #80	@ 0x50
 8001bc8:	4907      	ldr	r1, [pc, #28]	@ (8001be8 <main+0x5c>)
 8001bca:	f001 f8e9 	bl	8002da0 <siprintf>
        UART2_SendString(buffer);  // Changed from UART2_SendString
 8001bce:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	f000 f964 	bl	8001ea0 <UART2_SendString>

        // Small delay
        delay_ms(300);
 8001bd8:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8001bdc:	f7ff f8da 	bl	8000d94 <delay_ms>
        heading = HMC5883L_GetHeading(&hmc);
 8001be0:	bf00      	nop
 8001be2:	e7e3      	b.n	8001bac <main+0x20>
 8001be4:	08006b34 	.word	0x08006b34
 8001be8:	08006b44 	.word	0x08006b44

08001bec <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001bec:	b480      	push	{r7}
 8001bee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001bf0:	bf00      	nop
 8001bf2:	e7fd      	b.n	8001bf0 <NMI_Handler+0x4>

08001bf4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001bf4:	b480      	push	{r7}
 8001bf6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001bf8:	bf00      	nop
 8001bfa:	e7fd      	b.n	8001bf8 <HardFault_Handler+0x4>

08001bfc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001bfc:	b480      	push	{r7}
 8001bfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001c00:	bf00      	nop
 8001c02:	e7fd      	b.n	8001c00 <MemManage_Handler+0x4>

08001c04 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001c04:	b480      	push	{r7}
 8001c06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001c08:	bf00      	nop
 8001c0a:	e7fd      	b.n	8001c08 <BusFault_Handler+0x4>

08001c0c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001c0c:	b480      	push	{r7}
 8001c0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001c10:	bf00      	nop
 8001c12:	e7fd      	b.n	8001c10 <UsageFault_Handler+0x4>

08001c14 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001c14:	b480      	push	{r7}
 8001c16:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001c18:	bf00      	nop
 8001c1a:	46bd      	mov	sp, r7
 8001c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c20:	4770      	bx	lr

08001c22 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001c22:	b480      	push	{r7}
 8001c24:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001c26:	bf00      	nop
 8001c28:	46bd      	mov	sp, r7
 8001c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c2e:	4770      	bx	lr

08001c30 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001c30:	b480      	push	{r7}
 8001c32:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001c34:	bf00      	nop
 8001c36:	46bd      	mov	sp, r7
 8001c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c3c:	4770      	bx	lr

08001c3e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001c3e:	b580      	push	{r7, lr}
 8001c40:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001c42:	f000 f973 	bl	8001f2c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001c46:	bf00      	nop
 8001c48:	bd80      	pop	{r7, pc}

08001c4a <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001c4a:	b480      	push	{r7}
 8001c4c:	af00      	add	r7, sp, #0
  return 1;
 8001c4e:	2301      	movs	r3, #1
}
 8001c50:	4618      	mov	r0, r3
 8001c52:	46bd      	mov	sp, r7
 8001c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c58:	4770      	bx	lr

08001c5a <_kill>:

int _kill(int pid, int sig)
{
 8001c5a:	b580      	push	{r7, lr}
 8001c5c:	b082      	sub	sp, #8
 8001c5e:	af00      	add	r7, sp, #0
 8001c60:	6078      	str	r0, [r7, #4]
 8001c62:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001c64:	f001 f954 	bl	8002f10 <__errno>
 8001c68:	4603      	mov	r3, r0
 8001c6a:	2216      	movs	r2, #22
 8001c6c:	601a      	str	r2, [r3, #0]
  return -1;
 8001c6e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001c72:	4618      	mov	r0, r3
 8001c74:	3708      	adds	r7, #8
 8001c76:	46bd      	mov	sp, r7
 8001c78:	bd80      	pop	{r7, pc}

08001c7a <_exit>:

void _exit (int status)
{
 8001c7a:	b580      	push	{r7, lr}
 8001c7c:	b082      	sub	sp, #8
 8001c7e:	af00      	add	r7, sp, #0
 8001c80:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001c82:	f04f 31ff 	mov.w	r1, #4294967295
 8001c86:	6878      	ldr	r0, [r7, #4]
 8001c88:	f7ff ffe7 	bl	8001c5a <_kill>
  while (1) {}    /* Make sure we hang here */
 8001c8c:	bf00      	nop
 8001c8e:	e7fd      	b.n	8001c8c <_exit+0x12>

08001c90 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001c90:	b580      	push	{r7, lr}
 8001c92:	b086      	sub	sp, #24
 8001c94:	af00      	add	r7, sp, #0
 8001c96:	60f8      	str	r0, [r7, #12]
 8001c98:	60b9      	str	r1, [r7, #8]
 8001c9a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c9c:	2300      	movs	r3, #0
 8001c9e:	617b      	str	r3, [r7, #20]
 8001ca0:	e00a      	b.n	8001cb8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001ca2:	f3af 8000 	nop.w
 8001ca6:	4601      	mov	r1, r0
 8001ca8:	68bb      	ldr	r3, [r7, #8]
 8001caa:	1c5a      	adds	r2, r3, #1
 8001cac:	60ba      	str	r2, [r7, #8]
 8001cae:	b2ca      	uxtb	r2, r1
 8001cb0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001cb2:	697b      	ldr	r3, [r7, #20]
 8001cb4:	3301      	adds	r3, #1
 8001cb6:	617b      	str	r3, [r7, #20]
 8001cb8:	697a      	ldr	r2, [r7, #20]
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	429a      	cmp	r2, r3
 8001cbe:	dbf0      	blt.n	8001ca2 <_read+0x12>
  }

  return len;
 8001cc0:	687b      	ldr	r3, [r7, #4]
}
 8001cc2:	4618      	mov	r0, r3
 8001cc4:	3718      	adds	r7, #24
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	bd80      	pop	{r7, pc}

08001cca <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001cca:	b580      	push	{r7, lr}
 8001ccc:	b086      	sub	sp, #24
 8001cce:	af00      	add	r7, sp, #0
 8001cd0:	60f8      	str	r0, [r7, #12]
 8001cd2:	60b9      	str	r1, [r7, #8]
 8001cd4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001cd6:	2300      	movs	r3, #0
 8001cd8:	617b      	str	r3, [r7, #20]
 8001cda:	e009      	b.n	8001cf0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001cdc:	68bb      	ldr	r3, [r7, #8]
 8001cde:	1c5a      	adds	r2, r3, #1
 8001ce0:	60ba      	str	r2, [r7, #8]
 8001ce2:	781b      	ldrb	r3, [r3, #0]
 8001ce4:	4618      	mov	r0, r3
 8001ce6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001cea:	697b      	ldr	r3, [r7, #20]
 8001cec:	3301      	adds	r3, #1
 8001cee:	617b      	str	r3, [r7, #20]
 8001cf0:	697a      	ldr	r2, [r7, #20]
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	429a      	cmp	r2, r3
 8001cf6:	dbf1      	blt.n	8001cdc <_write+0x12>
  }
  return len;
 8001cf8:	687b      	ldr	r3, [r7, #4]
}
 8001cfa:	4618      	mov	r0, r3
 8001cfc:	3718      	adds	r7, #24
 8001cfe:	46bd      	mov	sp, r7
 8001d00:	bd80      	pop	{r7, pc}

08001d02 <_close>:

int _close(int file)
{
 8001d02:	b480      	push	{r7}
 8001d04:	b083      	sub	sp, #12
 8001d06:	af00      	add	r7, sp, #0
 8001d08:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001d0a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001d0e:	4618      	mov	r0, r3
 8001d10:	370c      	adds	r7, #12
 8001d12:	46bd      	mov	sp, r7
 8001d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d18:	4770      	bx	lr

08001d1a <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001d1a:	b480      	push	{r7}
 8001d1c:	b083      	sub	sp, #12
 8001d1e:	af00      	add	r7, sp, #0
 8001d20:	6078      	str	r0, [r7, #4]
 8001d22:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001d24:	683b      	ldr	r3, [r7, #0]
 8001d26:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001d2a:	605a      	str	r2, [r3, #4]
  return 0;
 8001d2c:	2300      	movs	r3, #0
}
 8001d2e:	4618      	mov	r0, r3
 8001d30:	370c      	adds	r7, #12
 8001d32:	46bd      	mov	sp, r7
 8001d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d38:	4770      	bx	lr

08001d3a <_isatty>:

int _isatty(int file)
{
 8001d3a:	b480      	push	{r7}
 8001d3c:	b083      	sub	sp, #12
 8001d3e:	af00      	add	r7, sp, #0
 8001d40:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001d42:	2301      	movs	r3, #1
}
 8001d44:	4618      	mov	r0, r3
 8001d46:	370c      	adds	r7, #12
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4e:	4770      	bx	lr

08001d50 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001d50:	b480      	push	{r7}
 8001d52:	b085      	sub	sp, #20
 8001d54:	af00      	add	r7, sp, #0
 8001d56:	60f8      	str	r0, [r7, #12]
 8001d58:	60b9      	str	r1, [r7, #8]
 8001d5a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001d5c:	2300      	movs	r3, #0
}
 8001d5e:	4618      	mov	r0, r3
 8001d60:	3714      	adds	r7, #20
 8001d62:	46bd      	mov	sp, r7
 8001d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d68:	4770      	bx	lr
	...

08001d6c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001d6c:	b580      	push	{r7, lr}
 8001d6e:	b086      	sub	sp, #24
 8001d70:	af00      	add	r7, sp, #0
 8001d72:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001d74:	4a14      	ldr	r2, [pc, #80]	@ (8001dc8 <_sbrk+0x5c>)
 8001d76:	4b15      	ldr	r3, [pc, #84]	@ (8001dcc <_sbrk+0x60>)
 8001d78:	1ad3      	subs	r3, r2, r3
 8001d7a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001d7c:	697b      	ldr	r3, [r7, #20]
 8001d7e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001d80:	4b13      	ldr	r3, [pc, #76]	@ (8001dd0 <_sbrk+0x64>)
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d102      	bne.n	8001d8e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001d88:	4b11      	ldr	r3, [pc, #68]	@ (8001dd0 <_sbrk+0x64>)
 8001d8a:	4a12      	ldr	r2, [pc, #72]	@ (8001dd4 <_sbrk+0x68>)
 8001d8c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001d8e:	4b10      	ldr	r3, [pc, #64]	@ (8001dd0 <_sbrk+0x64>)
 8001d90:	681a      	ldr	r2, [r3, #0]
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	4413      	add	r3, r2
 8001d96:	693a      	ldr	r2, [r7, #16]
 8001d98:	429a      	cmp	r2, r3
 8001d9a:	d207      	bcs.n	8001dac <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001d9c:	f001 f8b8 	bl	8002f10 <__errno>
 8001da0:	4603      	mov	r3, r0
 8001da2:	220c      	movs	r2, #12
 8001da4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001da6:	f04f 33ff 	mov.w	r3, #4294967295
 8001daa:	e009      	b.n	8001dc0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001dac:	4b08      	ldr	r3, [pc, #32]	@ (8001dd0 <_sbrk+0x64>)
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001db2:	4b07      	ldr	r3, [pc, #28]	@ (8001dd0 <_sbrk+0x64>)
 8001db4:	681a      	ldr	r2, [r3, #0]
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	4413      	add	r3, r2
 8001dba:	4a05      	ldr	r2, [pc, #20]	@ (8001dd0 <_sbrk+0x64>)
 8001dbc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001dbe:	68fb      	ldr	r3, [r7, #12]
}
 8001dc0:	4618      	mov	r0, r3
 8001dc2:	3718      	adds	r7, #24
 8001dc4:	46bd      	mov	sp, r7
 8001dc6:	bd80      	pop	{r7, pc}
 8001dc8:	20018000 	.word	0x20018000
 8001dcc:	00000400 	.word	0x00000400
 8001dd0:	200001f0 	.word	0x200001f0
 8001dd4:	20000348 	.word	0x20000348

08001dd8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001dd8:	b480      	push	{r7}
 8001dda:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001ddc:	4b06      	ldr	r3, [pc, #24]	@ (8001df8 <SystemInit+0x20>)
 8001dde:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001de2:	4a05      	ldr	r2, [pc, #20]	@ (8001df8 <SystemInit+0x20>)
 8001de4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001de8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001dec:	bf00      	nop
 8001dee:	46bd      	mov	sp, r7
 8001df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001df4:	4770      	bx	lr
 8001df6:	bf00      	nop
 8001df8:	e000ed00 	.word	0xe000ed00

08001dfc <UART2_Init>:
// Include the appropriate header file for your STM32F4 series microcontroller
#include <uart.h>
void UART2_Init(void)
{
 8001dfc:	b480      	push	{r7}
 8001dfe:	af00      	add	r7, sp, #0
    // Enable clock for UART2 and GPIOA (PA2 and PA3)
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;   // Enable UART2 clock
 8001e00:	4b18      	ldr	r3, [pc, #96]	@ (8001e64 <UART2_Init+0x68>)
 8001e02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e04:	4a17      	ldr	r2, [pc, #92]	@ (8001e64 <UART2_Init+0x68>)
 8001e06:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001e0a:	6413      	str	r3, [r2, #64]	@ 0x40
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;     // Enable GPIOA clock
 8001e0c:	4b15      	ldr	r3, [pc, #84]	@ (8001e64 <UART2_Init+0x68>)
 8001e0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e10:	4a14      	ldr	r2, [pc, #80]	@ (8001e64 <UART2_Init+0x68>)
 8001e12:	f043 0301 	orr.w	r3, r3, #1
 8001e16:	6313      	str	r3, [r2, #48]	@ 0x30

    // Configure PA2 as UART2 TX (Alternate function mode)
    GPIOA->MODER |= GPIO_MODER_MODE2_1;      // PA2: Alternate function
 8001e18:	4b13      	ldr	r3, [pc, #76]	@ (8001e68 <UART2_Init+0x6c>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	4a12      	ldr	r2, [pc, #72]	@ (8001e68 <UART2_Init+0x6c>)
 8001e1e:	f043 0320 	orr.w	r3, r3, #32
 8001e22:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[0] |= (0x7 << GPIO_AFRL_AFSEL2_Pos); // AF7 (UART2) for PA2
 8001e24:	4b10      	ldr	r3, [pc, #64]	@ (8001e68 <UART2_Init+0x6c>)
 8001e26:	6a1b      	ldr	r3, [r3, #32]
 8001e28:	4a0f      	ldr	r2, [pc, #60]	@ (8001e68 <UART2_Init+0x6c>)
 8001e2a:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8001e2e:	6213      	str	r3, [r2, #32]

    // Configure PA3 as UART2 RX (Alternate function mode)
    GPIOA->MODER |= GPIO_MODER_MODE3_1;      // PA3: Alternate function
 8001e30:	4b0d      	ldr	r3, [pc, #52]	@ (8001e68 <UART2_Init+0x6c>)
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	4a0c      	ldr	r2, [pc, #48]	@ (8001e68 <UART2_Init+0x6c>)
 8001e36:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001e3a:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[0] |= (0x7 << GPIO_AFRL_AFSEL3_Pos); // AF7 (UART2) for PA3
 8001e3c:	4b0a      	ldr	r3, [pc, #40]	@ (8001e68 <UART2_Init+0x6c>)
 8001e3e:	6a1b      	ldr	r3, [r3, #32]
 8001e40:	4a09      	ldr	r2, [pc, #36]	@ (8001e68 <UART2_Init+0x6c>)
 8001e42:	f443 43e0 	orr.w	r3, r3, #28672	@ 0x7000
 8001e46:	6213      	str	r3, [r2, #32]

    // Configure UART2 settings: Baud Rate = 9600, 8 data bits, 1 stop bit, no parity
    USART2->BRR = 0x0683;   // Baud rate = 9600 (assuming 16 MHz PCLK1)
 8001e48:	4b08      	ldr	r3, [pc, #32]	@ (8001e6c <UART2_Init+0x70>)
 8001e4a:	f240 6283 	movw	r2, #1667	@ 0x683
 8001e4e:	609a      	str	r2, [r3, #8]
    USART2->CR1 = USART_CR1_TE | USART_CR1_UE;  // Enable UART2 transmitter and UART2
 8001e50:	4b06      	ldr	r3, [pc, #24]	@ (8001e6c <UART2_Init+0x70>)
 8001e52:	f242 0208 	movw	r2, #8200	@ 0x2008
 8001e56:	60da      	str	r2, [r3, #12]
}
 8001e58:	bf00      	nop
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e60:	4770      	bx	lr
 8001e62:	bf00      	nop
 8001e64:	40023800 	.word	0x40023800
 8001e68:	40020000 	.word	0x40020000
 8001e6c:	40004400 	.word	0x40004400

08001e70 <UART2_SendChar>:

void UART2_SendChar(char ch)
{
 8001e70:	b480      	push	{r7}
 8001e72:	b083      	sub	sp, #12
 8001e74:	af00      	add	r7, sp, #0
 8001e76:	4603      	mov	r3, r0
 8001e78:	71fb      	strb	r3, [r7, #7]
    // Wait until TXE (Transmit Data Register Empty) is set
    while (!(USART2->SR & USART_SR_TXE));
 8001e7a:	bf00      	nop
 8001e7c:	4b07      	ldr	r3, [pc, #28]	@ (8001e9c <UART2_SendChar+0x2c>)
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001e84:	2b00      	cmp	r3, #0
 8001e86:	d0f9      	beq.n	8001e7c <UART2_SendChar+0xc>

    // Send the character
    USART2->DR = ch;
 8001e88:	4a04      	ldr	r2, [pc, #16]	@ (8001e9c <UART2_SendChar+0x2c>)
 8001e8a:	79fb      	ldrb	r3, [r7, #7]
 8001e8c:	6053      	str	r3, [r2, #4]
}
 8001e8e:	bf00      	nop
 8001e90:	370c      	adds	r7, #12
 8001e92:	46bd      	mov	sp, r7
 8001e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e98:	4770      	bx	lr
 8001e9a:	bf00      	nop
 8001e9c:	40004400 	.word	0x40004400

08001ea0 <UART2_SendString>:
void UART2_SendString(char* st ){
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b084      	sub	sp, #16
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
	int i = 0;
 8001ea8:	2300      	movs	r3, #0
 8001eaa:	60fb      	str	r3, [r7, #12]
	while (*(st+i)){
 8001eac:	e009      	b.n	8001ec2 <UART2_SendString+0x22>
		UART2_SendChar(st[i]);
 8001eae:	68fb      	ldr	r3, [r7, #12]
 8001eb0:	687a      	ldr	r2, [r7, #4]
 8001eb2:	4413      	add	r3, r2
 8001eb4:	781b      	ldrb	r3, [r3, #0]
 8001eb6:	4618      	mov	r0, r3
 8001eb8:	f7ff ffda 	bl	8001e70 <UART2_SendChar>
		i++;
 8001ebc:	68fb      	ldr	r3, [r7, #12]
 8001ebe:	3301      	adds	r3, #1
 8001ec0:	60fb      	str	r3, [r7, #12]
	while (*(st+i)){
 8001ec2:	68fb      	ldr	r3, [r7, #12]
 8001ec4:	687a      	ldr	r2, [r7, #4]
 8001ec6:	4413      	add	r3, r2
 8001ec8:	781b      	ldrb	r3, [r3, #0]
 8001eca:	2b00      	cmp	r3, #0
 8001ecc:	d1ef      	bne.n	8001eae <UART2_SendString+0xe>
	}
 8001ece:	bf00      	nop
 8001ed0:	bf00      	nop
 8001ed2:	3710      	adds	r7, #16
 8001ed4:	46bd      	mov	sp, r7
 8001ed6:	bd80      	pop	{r7, pc}

08001ed8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8001ed8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001f10 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001edc:	f7ff ff7c 	bl	8001dd8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001ee0:	480c      	ldr	r0, [pc, #48]	@ (8001f14 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001ee2:	490d      	ldr	r1, [pc, #52]	@ (8001f18 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001ee4:	4a0d      	ldr	r2, [pc, #52]	@ (8001f1c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001ee6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001ee8:	e002      	b.n	8001ef0 <LoopCopyDataInit>

08001eea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001eea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001eec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001eee:	3304      	adds	r3, #4

08001ef0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001ef0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001ef2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001ef4:	d3f9      	bcc.n	8001eea <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001ef6:	4a0a      	ldr	r2, [pc, #40]	@ (8001f20 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001ef8:	4c0a      	ldr	r4, [pc, #40]	@ (8001f24 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001efa:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001efc:	e001      	b.n	8001f02 <LoopFillZerobss>

08001efe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001efe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001f00:	3204      	adds	r2, #4

08001f02 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001f02:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001f04:	d3fb      	bcc.n	8001efe <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001f06:	f001 f809 	bl	8002f1c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001f0a:	f7ff fe3f 	bl	8001b8c <main>
  bx  lr    
 8001f0e:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001f10:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001f14:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001f18:	200001cc 	.word	0x200001cc
  ldr r2, =_sidata
 8001f1c:	08006fc4 	.word	0x08006fc4
  ldr r2, =_sbss
 8001f20:	200001cc 	.word	0x200001cc
  ldr r4, =_ebss
 8001f24:	20000344 	.word	0x20000344

08001f28 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001f28:	e7fe      	b.n	8001f28 <ADC_IRQHandler>
	...

08001f2c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001f2c:	b480      	push	{r7}
 8001f2e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001f30:	4b06      	ldr	r3, [pc, #24]	@ (8001f4c <HAL_IncTick+0x20>)
 8001f32:	781b      	ldrb	r3, [r3, #0]
 8001f34:	461a      	mov	r2, r3
 8001f36:	4b06      	ldr	r3, [pc, #24]	@ (8001f50 <HAL_IncTick+0x24>)
 8001f38:	681b      	ldr	r3, [r3, #0]
 8001f3a:	4413      	add	r3, r2
 8001f3c:	4a04      	ldr	r2, [pc, #16]	@ (8001f50 <HAL_IncTick+0x24>)
 8001f3e:	6013      	str	r3, [r2, #0]
}
 8001f40:	bf00      	nop
 8001f42:	46bd      	mov	sp, r7
 8001f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f48:	4770      	bx	lr
 8001f4a:	bf00      	nop
 8001f4c:	20000000 	.word	0x20000000
 8001f50:	200001f4 	.word	0x200001f4

08001f54 <__cvt>:
 8001f54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001f58:	ec57 6b10 	vmov	r6, r7, d0
 8001f5c:	2f00      	cmp	r7, #0
 8001f5e:	460c      	mov	r4, r1
 8001f60:	4619      	mov	r1, r3
 8001f62:	463b      	mov	r3, r7
 8001f64:	bfbb      	ittet	lt
 8001f66:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001f6a:	461f      	movlt	r7, r3
 8001f6c:	2300      	movge	r3, #0
 8001f6e:	232d      	movlt	r3, #45	@ 0x2d
 8001f70:	700b      	strb	r3, [r1, #0]
 8001f72:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001f74:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001f78:	4691      	mov	r9, r2
 8001f7a:	f023 0820 	bic.w	r8, r3, #32
 8001f7e:	bfbc      	itt	lt
 8001f80:	4632      	movlt	r2, r6
 8001f82:	4616      	movlt	r6, r2
 8001f84:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001f88:	d005      	beq.n	8001f96 <__cvt+0x42>
 8001f8a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001f8e:	d100      	bne.n	8001f92 <__cvt+0x3e>
 8001f90:	3401      	adds	r4, #1
 8001f92:	2102      	movs	r1, #2
 8001f94:	e000      	b.n	8001f98 <__cvt+0x44>
 8001f96:	2103      	movs	r1, #3
 8001f98:	ab03      	add	r3, sp, #12
 8001f9a:	9301      	str	r3, [sp, #4]
 8001f9c:	ab02      	add	r3, sp, #8
 8001f9e:	9300      	str	r3, [sp, #0]
 8001fa0:	ec47 6b10 	vmov	d0, r6, r7
 8001fa4:	4653      	mov	r3, sl
 8001fa6:	4622      	mov	r2, r4
 8001fa8:	f001 f86e 	bl	8003088 <_dtoa_r>
 8001fac:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001fb0:	4605      	mov	r5, r0
 8001fb2:	d119      	bne.n	8001fe8 <__cvt+0x94>
 8001fb4:	f019 0f01 	tst.w	r9, #1
 8001fb8:	d00e      	beq.n	8001fd8 <__cvt+0x84>
 8001fba:	eb00 0904 	add.w	r9, r0, r4
 8001fbe:	2200      	movs	r2, #0
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	4630      	mov	r0, r6
 8001fc4:	4639      	mov	r1, r7
 8001fc6:	f7fe fd87 	bl	8000ad8 <__aeabi_dcmpeq>
 8001fca:	b108      	cbz	r0, 8001fd0 <__cvt+0x7c>
 8001fcc:	f8cd 900c 	str.w	r9, [sp, #12]
 8001fd0:	2230      	movs	r2, #48	@ 0x30
 8001fd2:	9b03      	ldr	r3, [sp, #12]
 8001fd4:	454b      	cmp	r3, r9
 8001fd6:	d31e      	bcc.n	8002016 <__cvt+0xc2>
 8001fd8:	9b03      	ldr	r3, [sp, #12]
 8001fda:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001fdc:	1b5b      	subs	r3, r3, r5
 8001fde:	4628      	mov	r0, r5
 8001fe0:	6013      	str	r3, [r2, #0]
 8001fe2:	b004      	add	sp, #16
 8001fe4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001fe8:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001fec:	eb00 0904 	add.w	r9, r0, r4
 8001ff0:	d1e5      	bne.n	8001fbe <__cvt+0x6a>
 8001ff2:	7803      	ldrb	r3, [r0, #0]
 8001ff4:	2b30      	cmp	r3, #48	@ 0x30
 8001ff6:	d10a      	bne.n	800200e <__cvt+0xba>
 8001ff8:	2200      	movs	r2, #0
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	4630      	mov	r0, r6
 8001ffe:	4639      	mov	r1, r7
 8002000:	f7fe fd6a 	bl	8000ad8 <__aeabi_dcmpeq>
 8002004:	b918      	cbnz	r0, 800200e <__cvt+0xba>
 8002006:	f1c4 0401 	rsb	r4, r4, #1
 800200a:	f8ca 4000 	str.w	r4, [sl]
 800200e:	f8da 3000 	ldr.w	r3, [sl]
 8002012:	4499      	add	r9, r3
 8002014:	e7d3      	b.n	8001fbe <__cvt+0x6a>
 8002016:	1c59      	adds	r1, r3, #1
 8002018:	9103      	str	r1, [sp, #12]
 800201a:	701a      	strb	r2, [r3, #0]
 800201c:	e7d9      	b.n	8001fd2 <__cvt+0x7e>

0800201e <__exponent>:
 800201e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002020:	2900      	cmp	r1, #0
 8002022:	bfba      	itte	lt
 8002024:	4249      	neglt	r1, r1
 8002026:	232d      	movlt	r3, #45	@ 0x2d
 8002028:	232b      	movge	r3, #43	@ 0x2b
 800202a:	2909      	cmp	r1, #9
 800202c:	7002      	strb	r2, [r0, #0]
 800202e:	7043      	strb	r3, [r0, #1]
 8002030:	dd29      	ble.n	8002086 <__exponent+0x68>
 8002032:	f10d 0307 	add.w	r3, sp, #7
 8002036:	461d      	mov	r5, r3
 8002038:	270a      	movs	r7, #10
 800203a:	461a      	mov	r2, r3
 800203c:	fbb1 f6f7 	udiv	r6, r1, r7
 8002040:	fb07 1416 	mls	r4, r7, r6, r1
 8002044:	3430      	adds	r4, #48	@ 0x30
 8002046:	f802 4c01 	strb.w	r4, [r2, #-1]
 800204a:	460c      	mov	r4, r1
 800204c:	2c63      	cmp	r4, #99	@ 0x63
 800204e:	f103 33ff 	add.w	r3, r3, #4294967295
 8002052:	4631      	mov	r1, r6
 8002054:	dcf1      	bgt.n	800203a <__exponent+0x1c>
 8002056:	3130      	adds	r1, #48	@ 0x30
 8002058:	1e94      	subs	r4, r2, #2
 800205a:	f803 1c01 	strb.w	r1, [r3, #-1]
 800205e:	1c41      	adds	r1, r0, #1
 8002060:	4623      	mov	r3, r4
 8002062:	42ab      	cmp	r3, r5
 8002064:	d30a      	bcc.n	800207c <__exponent+0x5e>
 8002066:	f10d 0309 	add.w	r3, sp, #9
 800206a:	1a9b      	subs	r3, r3, r2
 800206c:	42ac      	cmp	r4, r5
 800206e:	bf88      	it	hi
 8002070:	2300      	movhi	r3, #0
 8002072:	3302      	adds	r3, #2
 8002074:	4403      	add	r3, r0
 8002076:	1a18      	subs	r0, r3, r0
 8002078:	b003      	add	sp, #12
 800207a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800207c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8002080:	f801 6f01 	strb.w	r6, [r1, #1]!
 8002084:	e7ed      	b.n	8002062 <__exponent+0x44>
 8002086:	2330      	movs	r3, #48	@ 0x30
 8002088:	3130      	adds	r1, #48	@ 0x30
 800208a:	7083      	strb	r3, [r0, #2]
 800208c:	70c1      	strb	r1, [r0, #3]
 800208e:	1d03      	adds	r3, r0, #4
 8002090:	e7f1      	b.n	8002076 <__exponent+0x58>
	...

08002094 <_printf_float>:
 8002094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002098:	b08d      	sub	sp, #52	@ 0x34
 800209a:	460c      	mov	r4, r1
 800209c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80020a0:	4616      	mov	r6, r2
 80020a2:	461f      	mov	r7, r3
 80020a4:	4605      	mov	r5, r0
 80020a6:	f000 fee9 	bl	8002e7c <_localeconv_r>
 80020aa:	6803      	ldr	r3, [r0, #0]
 80020ac:	9304      	str	r3, [sp, #16]
 80020ae:	4618      	mov	r0, r3
 80020b0:	f7fe f8e6 	bl	8000280 <strlen>
 80020b4:	2300      	movs	r3, #0
 80020b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80020b8:	f8d8 3000 	ldr.w	r3, [r8]
 80020bc:	9005      	str	r0, [sp, #20]
 80020be:	3307      	adds	r3, #7
 80020c0:	f023 0307 	bic.w	r3, r3, #7
 80020c4:	f103 0208 	add.w	r2, r3, #8
 80020c8:	f894 a018 	ldrb.w	sl, [r4, #24]
 80020cc:	f8d4 b000 	ldr.w	fp, [r4]
 80020d0:	f8c8 2000 	str.w	r2, [r8]
 80020d4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80020d8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80020dc:	9307      	str	r3, [sp, #28]
 80020de:	f8cd 8018 	str.w	r8, [sp, #24]
 80020e2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80020e6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80020ea:	4b9c      	ldr	r3, [pc, #624]	@ (800235c <_printf_float+0x2c8>)
 80020ec:	f04f 32ff 	mov.w	r2, #4294967295
 80020f0:	f7fe fd24 	bl	8000b3c <__aeabi_dcmpun>
 80020f4:	bb70      	cbnz	r0, 8002154 <_printf_float+0xc0>
 80020f6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80020fa:	4b98      	ldr	r3, [pc, #608]	@ (800235c <_printf_float+0x2c8>)
 80020fc:	f04f 32ff 	mov.w	r2, #4294967295
 8002100:	f7fe fcfe 	bl	8000b00 <__aeabi_dcmple>
 8002104:	bb30      	cbnz	r0, 8002154 <_printf_float+0xc0>
 8002106:	2200      	movs	r2, #0
 8002108:	2300      	movs	r3, #0
 800210a:	4640      	mov	r0, r8
 800210c:	4649      	mov	r1, r9
 800210e:	f7fe fced 	bl	8000aec <__aeabi_dcmplt>
 8002112:	b110      	cbz	r0, 800211a <_printf_float+0x86>
 8002114:	232d      	movs	r3, #45	@ 0x2d
 8002116:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800211a:	4a91      	ldr	r2, [pc, #580]	@ (8002360 <_printf_float+0x2cc>)
 800211c:	4b91      	ldr	r3, [pc, #580]	@ (8002364 <_printf_float+0x2d0>)
 800211e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8002122:	bf8c      	ite	hi
 8002124:	4690      	movhi	r8, r2
 8002126:	4698      	movls	r8, r3
 8002128:	2303      	movs	r3, #3
 800212a:	6123      	str	r3, [r4, #16]
 800212c:	f02b 0304 	bic.w	r3, fp, #4
 8002130:	6023      	str	r3, [r4, #0]
 8002132:	f04f 0900 	mov.w	r9, #0
 8002136:	9700      	str	r7, [sp, #0]
 8002138:	4633      	mov	r3, r6
 800213a:	aa0b      	add	r2, sp, #44	@ 0x2c
 800213c:	4621      	mov	r1, r4
 800213e:	4628      	mov	r0, r5
 8002140:	f000 f9d2 	bl	80024e8 <_printf_common>
 8002144:	3001      	adds	r0, #1
 8002146:	f040 808d 	bne.w	8002264 <_printf_float+0x1d0>
 800214a:	f04f 30ff 	mov.w	r0, #4294967295
 800214e:	b00d      	add	sp, #52	@ 0x34
 8002150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002154:	4642      	mov	r2, r8
 8002156:	464b      	mov	r3, r9
 8002158:	4640      	mov	r0, r8
 800215a:	4649      	mov	r1, r9
 800215c:	f7fe fcee 	bl	8000b3c <__aeabi_dcmpun>
 8002160:	b140      	cbz	r0, 8002174 <_printf_float+0xe0>
 8002162:	464b      	mov	r3, r9
 8002164:	2b00      	cmp	r3, #0
 8002166:	bfbc      	itt	lt
 8002168:	232d      	movlt	r3, #45	@ 0x2d
 800216a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800216e:	4a7e      	ldr	r2, [pc, #504]	@ (8002368 <_printf_float+0x2d4>)
 8002170:	4b7e      	ldr	r3, [pc, #504]	@ (800236c <_printf_float+0x2d8>)
 8002172:	e7d4      	b.n	800211e <_printf_float+0x8a>
 8002174:	6863      	ldr	r3, [r4, #4]
 8002176:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800217a:	9206      	str	r2, [sp, #24]
 800217c:	1c5a      	adds	r2, r3, #1
 800217e:	d13b      	bne.n	80021f8 <_printf_float+0x164>
 8002180:	2306      	movs	r3, #6
 8002182:	6063      	str	r3, [r4, #4]
 8002184:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8002188:	2300      	movs	r3, #0
 800218a:	6022      	str	r2, [r4, #0]
 800218c:	9303      	str	r3, [sp, #12]
 800218e:	ab0a      	add	r3, sp, #40	@ 0x28
 8002190:	e9cd a301 	strd	sl, r3, [sp, #4]
 8002194:	ab09      	add	r3, sp, #36	@ 0x24
 8002196:	9300      	str	r3, [sp, #0]
 8002198:	6861      	ldr	r1, [r4, #4]
 800219a:	ec49 8b10 	vmov	d0, r8, r9
 800219e:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80021a2:	4628      	mov	r0, r5
 80021a4:	f7ff fed6 	bl	8001f54 <__cvt>
 80021a8:	9b06      	ldr	r3, [sp, #24]
 80021aa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80021ac:	2b47      	cmp	r3, #71	@ 0x47
 80021ae:	4680      	mov	r8, r0
 80021b0:	d129      	bne.n	8002206 <_printf_float+0x172>
 80021b2:	1cc8      	adds	r0, r1, #3
 80021b4:	db02      	blt.n	80021bc <_printf_float+0x128>
 80021b6:	6863      	ldr	r3, [r4, #4]
 80021b8:	4299      	cmp	r1, r3
 80021ba:	dd41      	ble.n	8002240 <_printf_float+0x1ac>
 80021bc:	f1aa 0a02 	sub.w	sl, sl, #2
 80021c0:	fa5f fa8a 	uxtb.w	sl, sl
 80021c4:	3901      	subs	r1, #1
 80021c6:	4652      	mov	r2, sl
 80021c8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80021cc:	9109      	str	r1, [sp, #36]	@ 0x24
 80021ce:	f7ff ff26 	bl	800201e <__exponent>
 80021d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80021d4:	1813      	adds	r3, r2, r0
 80021d6:	2a01      	cmp	r2, #1
 80021d8:	4681      	mov	r9, r0
 80021da:	6123      	str	r3, [r4, #16]
 80021dc:	dc02      	bgt.n	80021e4 <_printf_float+0x150>
 80021de:	6822      	ldr	r2, [r4, #0]
 80021e0:	07d2      	lsls	r2, r2, #31
 80021e2:	d501      	bpl.n	80021e8 <_printf_float+0x154>
 80021e4:	3301      	adds	r3, #1
 80021e6:	6123      	str	r3, [r4, #16]
 80021e8:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 80021ec:	2b00      	cmp	r3, #0
 80021ee:	d0a2      	beq.n	8002136 <_printf_float+0xa2>
 80021f0:	232d      	movs	r3, #45	@ 0x2d
 80021f2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80021f6:	e79e      	b.n	8002136 <_printf_float+0xa2>
 80021f8:	9a06      	ldr	r2, [sp, #24]
 80021fa:	2a47      	cmp	r2, #71	@ 0x47
 80021fc:	d1c2      	bne.n	8002184 <_printf_float+0xf0>
 80021fe:	2b00      	cmp	r3, #0
 8002200:	d1c0      	bne.n	8002184 <_printf_float+0xf0>
 8002202:	2301      	movs	r3, #1
 8002204:	e7bd      	b.n	8002182 <_printf_float+0xee>
 8002206:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800220a:	d9db      	bls.n	80021c4 <_printf_float+0x130>
 800220c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002210:	d118      	bne.n	8002244 <_printf_float+0x1b0>
 8002212:	2900      	cmp	r1, #0
 8002214:	6863      	ldr	r3, [r4, #4]
 8002216:	dd0b      	ble.n	8002230 <_printf_float+0x19c>
 8002218:	6121      	str	r1, [r4, #16]
 800221a:	b913      	cbnz	r3, 8002222 <_printf_float+0x18e>
 800221c:	6822      	ldr	r2, [r4, #0]
 800221e:	07d0      	lsls	r0, r2, #31
 8002220:	d502      	bpl.n	8002228 <_printf_float+0x194>
 8002222:	3301      	adds	r3, #1
 8002224:	440b      	add	r3, r1
 8002226:	6123      	str	r3, [r4, #16]
 8002228:	65a1      	str	r1, [r4, #88]	@ 0x58
 800222a:	f04f 0900 	mov.w	r9, #0
 800222e:	e7db      	b.n	80021e8 <_printf_float+0x154>
 8002230:	b913      	cbnz	r3, 8002238 <_printf_float+0x1a4>
 8002232:	6822      	ldr	r2, [r4, #0]
 8002234:	07d2      	lsls	r2, r2, #31
 8002236:	d501      	bpl.n	800223c <_printf_float+0x1a8>
 8002238:	3302      	adds	r3, #2
 800223a:	e7f4      	b.n	8002226 <_printf_float+0x192>
 800223c:	2301      	movs	r3, #1
 800223e:	e7f2      	b.n	8002226 <_printf_float+0x192>
 8002240:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8002244:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002246:	4299      	cmp	r1, r3
 8002248:	db05      	blt.n	8002256 <_printf_float+0x1c2>
 800224a:	6823      	ldr	r3, [r4, #0]
 800224c:	6121      	str	r1, [r4, #16]
 800224e:	07d8      	lsls	r0, r3, #31
 8002250:	d5ea      	bpl.n	8002228 <_printf_float+0x194>
 8002252:	1c4b      	adds	r3, r1, #1
 8002254:	e7e7      	b.n	8002226 <_printf_float+0x192>
 8002256:	2900      	cmp	r1, #0
 8002258:	bfd4      	ite	le
 800225a:	f1c1 0202 	rsble	r2, r1, #2
 800225e:	2201      	movgt	r2, #1
 8002260:	4413      	add	r3, r2
 8002262:	e7e0      	b.n	8002226 <_printf_float+0x192>
 8002264:	6823      	ldr	r3, [r4, #0]
 8002266:	055a      	lsls	r2, r3, #21
 8002268:	d407      	bmi.n	800227a <_printf_float+0x1e6>
 800226a:	6923      	ldr	r3, [r4, #16]
 800226c:	4642      	mov	r2, r8
 800226e:	4631      	mov	r1, r6
 8002270:	4628      	mov	r0, r5
 8002272:	47b8      	blx	r7
 8002274:	3001      	adds	r0, #1
 8002276:	d12b      	bne.n	80022d0 <_printf_float+0x23c>
 8002278:	e767      	b.n	800214a <_printf_float+0xb6>
 800227a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800227e:	f240 80dd 	bls.w	800243c <_printf_float+0x3a8>
 8002282:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002286:	2200      	movs	r2, #0
 8002288:	2300      	movs	r3, #0
 800228a:	f7fe fc25 	bl	8000ad8 <__aeabi_dcmpeq>
 800228e:	2800      	cmp	r0, #0
 8002290:	d033      	beq.n	80022fa <_printf_float+0x266>
 8002292:	4a37      	ldr	r2, [pc, #220]	@ (8002370 <_printf_float+0x2dc>)
 8002294:	2301      	movs	r3, #1
 8002296:	4631      	mov	r1, r6
 8002298:	4628      	mov	r0, r5
 800229a:	47b8      	blx	r7
 800229c:	3001      	adds	r0, #1
 800229e:	f43f af54 	beq.w	800214a <_printf_float+0xb6>
 80022a2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80022a6:	4543      	cmp	r3, r8
 80022a8:	db02      	blt.n	80022b0 <_printf_float+0x21c>
 80022aa:	6823      	ldr	r3, [r4, #0]
 80022ac:	07d8      	lsls	r0, r3, #31
 80022ae:	d50f      	bpl.n	80022d0 <_printf_float+0x23c>
 80022b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80022b4:	4631      	mov	r1, r6
 80022b6:	4628      	mov	r0, r5
 80022b8:	47b8      	blx	r7
 80022ba:	3001      	adds	r0, #1
 80022bc:	f43f af45 	beq.w	800214a <_printf_float+0xb6>
 80022c0:	f04f 0900 	mov.w	r9, #0
 80022c4:	f108 38ff 	add.w	r8, r8, #4294967295
 80022c8:	f104 0a1a 	add.w	sl, r4, #26
 80022cc:	45c8      	cmp	r8, r9
 80022ce:	dc09      	bgt.n	80022e4 <_printf_float+0x250>
 80022d0:	6823      	ldr	r3, [r4, #0]
 80022d2:	079b      	lsls	r3, r3, #30
 80022d4:	f100 8103 	bmi.w	80024de <_printf_float+0x44a>
 80022d8:	68e0      	ldr	r0, [r4, #12]
 80022da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80022dc:	4298      	cmp	r0, r3
 80022de:	bfb8      	it	lt
 80022e0:	4618      	movlt	r0, r3
 80022e2:	e734      	b.n	800214e <_printf_float+0xba>
 80022e4:	2301      	movs	r3, #1
 80022e6:	4652      	mov	r2, sl
 80022e8:	4631      	mov	r1, r6
 80022ea:	4628      	mov	r0, r5
 80022ec:	47b8      	blx	r7
 80022ee:	3001      	adds	r0, #1
 80022f0:	f43f af2b 	beq.w	800214a <_printf_float+0xb6>
 80022f4:	f109 0901 	add.w	r9, r9, #1
 80022f8:	e7e8      	b.n	80022cc <_printf_float+0x238>
 80022fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	dc39      	bgt.n	8002374 <_printf_float+0x2e0>
 8002300:	4a1b      	ldr	r2, [pc, #108]	@ (8002370 <_printf_float+0x2dc>)
 8002302:	2301      	movs	r3, #1
 8002304:	4631      	mov	r1, r6
 8002306:	4628      	mov	r0, r5
 8002308:	47b8      	blx	r7
 800230a:	3001      	adds	r0, #1
 800230c:	f43f af1d 	beq.w	800214a <_printf_float+0xb6>
 8002310:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8002314:	ea59 0303 	orrs.w	r3, r9, r3
 8002318:	d102      	bne.n	8002320 <_printf_float+0x28c>
 800231a:	6823      	ldr	r3, [r4, #0]
 800231c:	07d9      	lsls	r1, r3, #31
 800231e:	d5d7      	bpl.n	80022d0 <_printf_float+0x23c>
 8002320:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002324:	4631      	mov	r1, r6
 8002326:	4628      	mov	r0, r5
 8002328:	47b8      	blx	r7
 800232a:	3001      	adds	r0, #1
 800232c:	f43f af0d 	beq.w	800214a <_printf_float+0xb6>
 8002330:	f04f 0a00 	mov.w	sl, #0
 8002334:	f104 0b1a 	add.w	fp, r4, #26
 8002338:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800233a:	425b      	negs	r3, r3
 800233c:	4553      	cmp	r3, sl
 800233e:	dc01      	bgt.n	8002344 <_printf_float+0x2b0>
 8002340:	464b      	mov	r3, r9
 8002342:	e793      	b.n	800226c <_printf_float+0x1d8>
 8002344:	2301      	movs	r3, #1
 8002346:	465a      	mov	r2, fp
 8002348:	4631      	mov	r1, r6
 800234a:	4628      	mov	r0, r5
 800234c:	47b8      	blx	r7
 800234e:	3001      	adds	r0, #1
 8002350:	f43f aefb 	beq.w	800214a <_printf_float+0xb6>
 8002354:	f10a 0a01 	add.w	sl, sl, #1
 8002358:	e7ee      	b.n	8002338 <_printf_float+0x2a4>
 800235a:	bf00      	nop
 800235c:	7fefffff 	.word	0x7fefffff
 8002360:	08006b58 	.word	0x08006b58
 8002364:	08006b54 	.word	0x08006b54
 8002368:	08006b60 	.word	0x08006b60
 800236c:	08006b5c 	.word	0x08006b5c
 8002370:	08006b64 	.word	0x08006b64
 8002374:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002376:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800237a:	4553      	cmp	r3, sl
 800237c:	bfa8      	it	ge
 800237e:	4653      	movge	r3, sl
 8002380:	2b00      	cmp	r3, #0
 8002382:	4699      	mov	r9, r3
 8002384:	dc36      	bgt.n	80023f4 <_printf_float+0x360>
 8002386:	f04f 0b00 	mov.w	fp, #0
 800238a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800238e:	f104 021a 	add.w	r2, r4, #26
 8002392:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002394:	9306      	str	r3, [sp, #24]
 8002396:	eba3 0309 	sub.w	r3, r3, r9
 800239a:	455b      	cmp	r3, fp
 800239c:	dc31      	bgt.n	8002402 <_printf_float+0x36e>
 800239e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80023a0:	459a      	cmp	sl, r3
 80023a2:	dc3a      	bgt.n	800241a <_printf_float+0x386>
 80023a4:	6823      	ldr	r3, [r4, #0]
 80023a6:	07da      	lsls	r2, r3, #31
 80023a8:	d437      	bmi.n	800241a <_printf_float+0x386>
 80023aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80023ac:	ebaa 0903 	sub.w	r9, sl, r3
 80023b0:	9b06      	ldr	r3, [sp, #24]
 80023b2:	ebaa 0303 	sub.w	r3, sl, r3
 80023b6:	4599      	cmp	r9, r3
 80023b8:	bfa8      	it	ge
 80023ba:	4699      	movge	r9, r3
 80023bc:	f1b9 0f00 	cmp.w	r9, #0
 80023c0:	dc33      	bgt.n	800242a <_printf_float+0x396>
 80023c2:	f04f 0800 	mov.w	r8, #0
 80023c6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80023ca:	f104 0b1a 	add.w	fp, r4, #26
 80023ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80023d0:	ebaa 0303 	sub.w	r3, sl, r3
 80023d4:	eba3 0309 	sub.w	r3, r3, r9
 80023d8:	4543      	cmp	r3, r8
 80023da:	f77f af79 	ble.w	80022d0 <_printf_float+0x23c>
 80023de:	2301      	movs	r3, #1
 80023e0:	465a      	mov	r2, fp
 80023e2:	4631      	mov	r1, r6
 80023e4:	4628      	mov	r0, r5
 80023e6:	47b8      	blx	r7
 80023e8:	3001      	adds	r0, #1
 80023ea:	f43f aeae 	beq.w	800214a <_printf_float+0xb6>
 80023ee:	f108 0801 	add.w	r8, r8, #1
 80023f2:	e7ec      	b.n	80023ce <_printf_float+0x33a>
 80023f4:	4642      	mov	r2, r8
 80023f6:	4631      	mov	r1, r6
 80023f8:	4628      	mov	r0, r5
 80023fa:	47b8      	blx	r7
 80023fc:	3001      	adds	r0, #1
 80023fe:	d1c2      	bne.n	8002386 <_printf_float+0x2f2>
 8002400:	e6a3      	b.n	800214a <_printf_float+0xb6>
 8002402:	2301      	movs	r3, #1
 8002404:	4631      	mov	r1, r6
 8002406:	4628      	mov	r0, r5
 8002408:	9206      	str	r2, [sp, #24]
 800240a:	47b8      	blx	r7
 800240c:	3001      	adds	r0, #1
 800240e:	f43f ae9c 	beq.w	800214a <_printf_float+0xb6>
 8002412:	9a06      	ldr	r2, [sp, #24]
 8002414:	f10b 0b01 	add.w	fp, fp, #1
 8002418:	e7bb      	b.n	8002392 <_printf_float+0x2fe>
 800241a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800241e:	4631      	mov	r1, r6
 8002420:	4628      	mov	r0, r5
 8002422:	47b8      	blx	r7
 8002424:	3001      	adds	r0, #1
 8002426:	d1c0      	bne.n	80023aa <_printf_float+0x316>
 8002428:	e68f      	b.n	800214a <_printf_float+0xb6>
 800242a:	9a06      	ldr	r2, [sp, #24]
 800242c:	464b      	mov	r3, r9
 800242e:	4442      	add	r2, r8
 8002430:	4631      	mov	r1, r6
 8002432:	4628      	mov	r0, r5
 8002434:	47b8      	blx	r7
 8002436:	3001      	adds	r0, #1
 8002438:	d1c3      	bne.n	80023c2 <_printf_float+0x32e>
 800243a:	e686      	b.n	800214a <_printf_float+0xb6>
 800243c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8002440:	f1ba 0f01 	cmp.w	sl, #1
 8002444:	dc01      	bgt.n	800244a <_printf_float+0x3b6>
 8002446:	07db      	lsls	r3, r3, #31
 8002448:	d536      	bpl.n	80024b8 <_printf_float+0x424>
 800244a:	2301      	movs	r3, #1
 800244c:	4642      	mov	r2, r8
 800244e:	4631      	mov	r1, r6
 8002450:	4628      	mov	r0, r5
 8002452:	47b8      	blx	r7
 8002454:	3001      	adds	r0, #1
 8002456:	f43f ae78 	beq.w	800214a <_printf_float+0xb6>
 800245a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800245e:	4631      	mov	r1, r6
 8002460:	4628      	mov	r0, r5
 8002462:	47b8      	blx	r7
 8002464:	3001      	adds	r0, #1
 8002466:	f43f ae70 	beq.w	800214a <_printf_float+0xb6>
 800246a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800246e:	2200      	movs	r2, #0
 8002470:	2300      	movs	r3, #0
 8002472:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002476:	f7fe fb2f 	bl	8000ad8 <__aeabi_dcmpeq>
 800247a:	b9c0      	cbnz	r0, 80024ae <_printf_float+0x41a>
 800247c:	4653      	mov	r3, sl
 800247e:	f108 0201 	add.w	r2, r8, #1
 8002482:	4631      	mov	r1, r6
 8002484:	4628      	mov	r0, r5
 8002486:	47b8      	blx	r7
 8002488:	3001      	adds	r0, #1
 800248a:	d10c      	bne.n	80024a6 <_printf_float+0x412>
 800248c:	e65d      	b.n	800214a <_printf_float+0xb6>
 800248e:	2301      	movs	r3, #1
 8002490:	465a      	mov	r2, fp
 8002492:	4631      	mov	r1, r6
 8002494:	4628      	mov	r0, r5
 8002496:	47b8      	blx	r7
 8002498:	3001      	adds	r0, #1
 800249a:	f43f ae56 	beq.w	800214a <_printf_float+0xb6>
 800249e:	f108 0801 	add.w	r8, r8, #1
 80024a2:	45d0      	cmp	r8, sl
 80024a4:	dbf3      	blt.n	800248e <_printf_float+0x3fa>
 80024a6:	464b      	mov	r3, r9
 80024a8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80024ac:	e6df      	b.n	800226e <_printf_float+0x1da>
 80024ae:	f04f 0800 	mov.w	r8, #0
 80024b2:	f104 0b1a 	add.w	fp, r4, #26
 80024b6:	e7f4      	b.n	80024a2 <_printf_float+0x40e>
 80024b8:	2301      	movs	r3, #1
 80024ba:	4642      	mov	r2, r8
 80024bc:	e7e1      	b.n	8002482 <_printf_float+0x3ee>
 80024be:	2301      	movs	r3, #1
 80024c0:	464a      	mov	r2, r9
 80024c2:	4631      	mov	r1, r6
 80024c4:	4628      	mov	r0, r5
 80024c6:	47b8      	blx	r7
 80024c8:	3001      	adds	r0, #1
 80024ca:	f43f ae3e 	beq.w	800214a <_printf_float+0xb6>
 80024ce:	f108 0801 	add.w	r8, r8, #1
 80024d2:	68e3      	ldr	r3, [r4, #12]
 80024d4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80024d6:	1a5b      	subs	r3, r3, r1
 80024d8:	4543      	cmp	r3, r8
 80024da:	dcf0      	bgt.n	80024be <_printf_float+0x42a>
 80024dc:	e6fc      	b.n	80022d8 <_printf_float+0x244>
 80024de:	f04f 0800 	mov.w	r8, #0
 80024e2:	f104 0919 	add.w	r9, r4, #25
 80024e6:	e7f4      	b.n	80024d2 <_printf_float+0x43e>

080024e8 <_printf_common>:
 80024e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80024ec:	4616      	mov	r6, r2
 80024ee:	4698      	mov	r8, r3
 80024f0:	688a      	ldr	r2, [r1, #8]
 80024f2:	690b      	ldr	r3, [r1, #16]
 80024f4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80024f8:	4293      	cmp	r3, r2
 80024fa:	bfb8      	it	lt
 80024fc:	4613      	movlt	r3, r2
 80024fe:	6033      	str	r3, [r6, #0]
 8002500:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002504:	4607      	mov	r7, r0
 8002506:	460c      	mov	r4, r1
 8002508:	b10a      	cbz	r2, 800250e <_printf_common+0x26>
 800250a:	3301      	adds	r3, #1
 800250c:	6033      	str	r3, [r6, #0]
 800250e:	6823      	ldr	r3, [r4, #0]
 8002510:	0699      	lsls	r1, r3, #26
 8002512:	bf42      	ittt	mi
 8002514:	6833      	ldrmi	r3, [r6, #0]
 8002516:	3302      	addmi	r3, #2
 8002518:	6033      	strmi	r3, [r6, #0]
 800251a:	6825      	ldr	r5, [r4, #0]
 800251c:	f015 0506 	ands.w	r5, r5, #6
 8002520:	d106      	bne.n	8002530 <_printf_common+0x48>
 8002522:	f104 0a19 	add.w	sl, r4, #25
 8002526:	68e3      	ldr	r3, [r4, #12]
 8002528:	6832      	ldr	r2, [r6, #0]
 800252a:	1a9b      	subs	r3, r3, r2
 800252c:	42ab      	cmp	r3, r5
 800252e:	dc26      	bgt.n	800257e <_printf_common+0x96>
 8002530:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002534:	6822      	ldr	r2, [r4, #0]
 8002536:	3b00      	subs	r3, #0
 8002538:	bf18      	it	ne
 800253a:	2301      	movne	r3, #1
 800253c:	0692      	lsls	r2, r2, #26
 800253e:	d42b      	bmi.n	8002598 <_printf_common+0xb0>
 8002540:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002544:	4641      	mov	r1, r8
 8002546:	4638      	mov	r0, r7
 8002548:	47c8      	blx	r9
 800254a:	3001      	adds	r0, #1
 800254c:	d01e      	beq.n	800258c <_printf_common+0xa4>
 800254e:	6823      	ldr	r3, [r4, #0]
 8002550:	6922      	ldr	r2, [r4, #16]
 8002552:	f003 0306 	and.w	r3, r3, #6
 8002556:	2b04      	cmp	r3, #4
 8002558:	bf02      	ittt	eq
 800255a:	68e5      	ldreq	r5, [r4, #12]
 800255c:	6833      	ldreq	r3, [r6, #0]
 800255e:	1aed      	subeq	r5, r5, r3
 8002560:	68a3      	ldr	r3, [r4, #8]
 8002562:	bf0c      	ite	eq
 8002564:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002568:	2500      	movne	r5, #0
 800256a:	4293      	cmp	r3, r2
 800256c:	bfc4      	itt	gt
 800256e:	1a9b      	subgt	r3, r3, r2
 8002570:	18ed      	addgt	r5, r5, r3
 8002572:	2600      	movs	r6, #0
 8002574:	341a      	adds	r4, #26
 8002576:	42b5      	cmp	r5, r6
 8002578:	d11a      	bne.n	80025b0 <_printf_common+0xc8>
 800257a:	2000      	movs	r0, #0
 800257c:	e008      	b.n	8002590 <_printf_common+0xa8>
 800257e:	2301      	movs	r3, #1
 8002580:	4652      	mov	r2, sl
 8002582:	4641      	mov	r1, r8
 8002584:	4638      	mov	r0, r7
 8002586:	47c8      	blx	r9
 8002588:	3001      	adds	r0, #1
 800258a:	d103      	bne.n	8002594 <_printf_common+0xac>
 800258c:	f04f 30ff 	mov.w	r0, #4294967295
 8002590:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002594:	3501      	adds	r5, #1
 8002596:	e7c6      	b.n	8002526 <_printf_common+0x3e>
 8002598:	18e1      	adds	r1, r4, r3
 800259a:	1c5a      	adds	r2, r3, #1
 800259c:	2030      	movs	r0, #48	@ 0x30
 800259e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80025a2:	4422      	add	r2, r4
 80025a4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80025a8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80025ac:	3302      	adds	r3, #2
 80025ae:	e7c7      	b.n	8002540 <_printf_common+0x58>
 80025b0:	2301      	movs	r3, #1
 80025b2:	4622      	mov	r2, r4
 80025b4:	4641      	mov	r1, r8
 80025b6:	4638      	mov	r0, r7
 80025b8:	47c8      	blx	r9
 80025ba:	3001      	adds	r0, #1
 80025bc:	d0e6      	beq.n	800258c <_printf_common+0xa4>
 80025be:	3601      	adds	r6, #1
 80025c0:	e7d9      	b.n	8002576 <_printf_common+0x8e>
	...

080025c4 <_printf_i>:
 80025c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80025c8:	7e0f      	ldrb	r7, [r1, #24]
 80025ca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80025cc:	2f78      	cmp	r7, #120	@ 0x78
 80025ce:	4691      	mov	r9, r2
 80025d0:	4680      	mov	r8, r0
 80025d2:	460c      	mov	r4, r1
 80025d4:	469a      	mov	sl, r3
 80025d6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80025da:	d807      	bhi.n	80025ec <_printf_i+0x28>
 80025dc:	2f62      	cmp	r7, #98	@ 0x62
 80025de:	d80a      	bhi.n	80025f6 <_printf_i+0x32>
 80025e0:	2f00      	cmp	r7, #0
 80025e2:	f000 80d1 	beq.w	8002788 <_printf_i+0x1c4>
 80025e6:	2f58      	cmp	r7, #88	@ 0x58
 80025e8:	f000 80b8 	beq.w	800275c <_printf_i+0x198>
 80025ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80025f0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80025f4:	e03a      	b.n	800266c <_printf_i+0xa8>
 80025f6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80025fa:	2b15      	cmp	r3, #21
 80025fc:	d8f6      	bhi.n	80025ec <_printf_i+0x28>
 80025fe:	a101      	add	r1, pc, #4	@ (adr r1, 8002604 <_printf_i+0x40>)
 8002600:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002604:	0800265d 	.word	0x0800265d
 8002608:	08002671 	.word	0x08002671
 800260c:	080025ed 	.word	0x080025ed
 8002610:	080025ed 	.word	0x080025ed
 8002614:	080025ed 	.word	0x080025ed
 8002618:	080025ed 	.word	0x080025ed
 800261c:	08002671 	.word	0x08002671
 8002620:	080025ed 	.word	0x080025ed
 8002624:	080025ed 	.word	0x080025ed
 8002628:	080025ed 	.word	0x080025ed
 800262c:	080025ed 	.word	0x080025ed
 8002630:	0800276f 	.word	0x0800276f
 8002634:	0800269b 	.word	0x0800269b
 8002638:	08002729 	.word	0x08002729
 800263c:	080025ed 	.word	0x080025ed
 8002640:	080025ed 	.word	0x080025ed
 8002644:	08002791 	.word	0x08002791
 8002648:	080025ed 	.word	0x080025ed
 800264c:	0800269b 	.word	0x0800269b
 8002650:	080025ed 	.word	0x080025ed
 8002654:	080025ed 	.word	0x080025ed
 8002658:	08002731 	.word	0x08002731
 800265c:	6833      	ldr	r3, [r6, #0]
 800265e:	1d1a      	adds	r2, r3, #4
 8002660:	681b      	ldr	r3, [r3, #0]
 8002662:	6032      	str	r2, [r6, #0]
 8002664:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002668:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800266c:	2301      	movs	r3, #1
 800266e:	e09c      	b.n	80027aa <_printf_i+0x1e6>
 8002670:	6833      	ldr	r3, [r6, #0]
 8002672:	6820      	ldr	r0, [r4, #0]
 8002674:	1d19      	adds	r1, r3, #4
 8002676:	6031      	str	r1, [r6, #0]
 8002678:	0606      	lsls	r6, r0, #24
 800267a:	d501      	bpl.n	8002680 <_printf_i+0xbc>
 800267c:	681d      	ldr	r5, [r3, #0]
 800267e:	e003      	b.n	8002688 <_printf_i+0xc4>
 8002680:	0645      	lsls	r5, r0, #25
 8002682:	d5fb      	bpl.n	800267c <_printf_i+0xb8>
 8002684:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002688:	2d00      	cmp	r5, #0
 800268a:	da03      	bge.n	8002694 <_printf_i+0xd0>
 800268c:	232d      	movs	r3, #45	@ 0x2d
 800268e:	426d      	negs	r5, r5
 8002690:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002694:	4858      	ldr	r0, [pc, #352]	@ (80027f8 <_printf_i+0x234>)
 8002696:	230a      	movs	r3, #10
 8002698:	e011      	b.n	80026be <_printf_i+0xfa>
 800269a:	6821      	ldr	r1, [r4, #0]
 800269c:	6833      	ldr	r3, [r6, #0]
 800269e:	0608      	lsls	r0, r1, #24
 80026a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80026a4:	d402      	bmi.n	80026ac <_printf_i+0xe8>
 80026a6:	0649      	lsls	r1, r1, #25
 80026a8:	bf48      	it	mi
 80026aa:	b2ad      	uxthmi	r5, r5
 80026ac:	2f6f      	cmp	r7, #111	@ 0x6f
 80026ae:	4852      	ldr	r0, [pc, #328]	@ (80027f8 <_printf_i+0x234>)
 80026b0:	6033      	str	r3, [r6, #0]
 80026b2:	bf14      	ite	ne
 80026b4:	230a      	movne	r3, #10
 80026b6:	2308      	moveq	r3, #8
 80026b8:	2100      	movs	r1, #0
 80026ba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80026be:	6866      	ldr	r6, [r4, #4]
 80026c0:	60a6      	str	r6, [r4, #8]
 80026c2:	2e00      	cmp	r6, #0
 80026c4:	db05      	blt.n	80026d2 <_printf_i+0x10e>
 80026c6:	6821      	ldr	r1, [r4, #0]
 80026c8:	432e      	orrs	r6, r5
 80026ca:	f021 0104 	bic.w	r1, r1, #4
 80026ce:	6021      	str	r1, [r4, #0]
 80026d0:	d04b      	beq.n	800276a <_printf_i+0x1a6>
 80026d2:	4616      	mov	r6, r2
 80026d4:	fbb5 f1f3 	udiv	r1, r5, r3
 80026d8:	fb03 5711 	mls	r7, r3, r1, r5
 80026dc:	5dc7      	ldrb	r7, [r0, r7]
 80026de:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80026e2:	462f      	mov	r7, r5
 80026e4:	42bb      	cmp	r3, r7
 80026e6:	460d      	mov	r5, r1
 80026e8:	d9f4      	bls.n	80026d4 <_printf_i+0x110>
 80026ea:	2b08      	cmp	r3, #8
 80026ec:	d10b      	bne.n	8002706 <_printf_i+0x142>
 80026ee:	6823      	ldr	r3, [r4, #0]
 80026f0:	07df      	lsls	r7, r3, #31
 80026f2:	d508      	bpl.n	8002706 <_printf_i+0x142>
 80026f4:	6923      	ldr	r3, [r4, #16]
 80026f6:	6861      	ldr	r1, [r4, #4]
 80026f8:	4299      	cmp	r1, r3
 80026fa:	bfde      	ittt	le
 80026fc:	2330      	movle	r3, #48	@ 0x30
 80026fe:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002702:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002706:	1b92      	subs	r2, r2, r6
 8002708:	6122      	str	r2, [r4, #16]
 800270a:	f8cd a000 	str.w	sl, [sp]
 800270e:	464b      	mov	r3, r9
 8002710:	aa03      	add	r2, sp, #12
 8002712:	4621      	mov	r1, r4
 8002714:	4640      	mov	r0, r8
 8002716:	f7ff fee7 	bl	80024e8 <_printf_common>
 800271a:	3001      	adds	r0, #1
 800271c:	d14a      	bne.n	80027b4 <_printf_i+0x1f0>
 800271e:	f04f 30ff 	mov.w	r0, #4294967295
 8002722:	b004      	add	sp, #16
 8002724:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002728:	6823      	ldr	r3, [r4, #0]
 800272a:	f043 0320 	orr.w	r3, r3, #32
 800272e:	6023      	str	r3, [r4, #0]
 8002730:	4832      	ldr	r0, [pc, #200]	@ (80027fc <_printf_i+0x238>)
 8002732:	2778      	movs	r7, #120	@ 0x78
 8002734:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002738:	6823      	ldr	r3, [r4, #0]
 800273a:	6831      	ldr	r1, [r6, #0]
 800273c:	061f      	lsls	r7, r3, #24
 800273e:	f851 5b04 	ldr.w	r5, [r1], #4
 8002742:	d402      	bmi.n	800274a <_printf_i+0x186>
 8002744:	065f      	lsls	r7, r3, #25
 8002746:	bf48      	it	mi
 8002748:	b2ad      	uxthmi	r5, r5
 800274a:	6031      	str	r1, [r6, #0]
 800274c:	07d9      	lsls	r1, r3, #31
 800274e:	bf44      	itt	mi
 8002750:	f043 0320 	orrmi.w	r3, r3, #32
 8002754:	6023      	strmi	r3, [r4, #0]
 8002756:	b11d      	cbz	r5, 8002760 <_printf_i+0x19c>
 8002758:	2310      	movs	r3, #16
 800275a:	e7ad      	b.n	80026b8 <_printf_i+0xf4>
 800275c:	4826      	ldr	r0, [pc, #152]	@ (80027f8 <_printf_i+0x234>)
 800275e:	e7e9      	b.n	8002734 <_printf_i+0x170>
 8002760:	6823      	ldr	r3, [r4, #0]
 8002762:	f023 0320 	bic.w	r3, r3, #32
 8002766:	6023      	str	r3, [r4, #0]
 8002768:	e7f6      	b.n	8002758 <_printf_i+0x194>
 800276a:	4616      	mov	r6, r2
 800276c:	e7bd      	b.n	80026ea <_printf_i+0x126>
 800276e:	6833      	ldr	r3, [r6, #0]
 8002770:	6825      	ldr	r5, [r4, #0]
 8002772:	6961      	ldr	r1, [r4, #20]
 8002774:	1d18      	adds	r0, r3, #4
 8002776:	6030      	str	r0, [r6, #0]
 8002778:	062e      	lsls	r6, r5, #24
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	d501      	bpl.n	8002782 <_printf_i+0x1be>
 800277e:	6019      	str	r1, [r3, #0]
 8002780:	e002      	b.n	8002788 <_printf_i+0x1c4>
 8002782:	0668      	lsls	r0, r5, #25
 8002784:	d5fb      	bpl.n	800277e <_printf_i+0x1ba>
 8002786:	8019      	strh	r1, [r3, #0]
 8002788:	2300      	movs	r3, #0
 800278a:	6123      	str	r3, [r4, #16]
 800278c:	4616      	mov	r6, r2
 800278e:	e7bc      	b.n	800270a <_printf_i+0x146>
 8002790:	6833      	ldr	r3, [r6, #0]
 8002792:	1d1a      	adds	r2, r3, #4
 8002794:	6032      	str	r2, [r6, #0]
 8002796:	681e      	ldr	r6, [r3, #0]
 8002798:	6862      	ldr	r2, [r4, #4]
 800279a:	2100      	movs	r1, #0
 800279c:	4630      	mov	r0, r6
 800279e:	f7fd fd1f 	bl	80001e0 <memchr>
 80027a2:	b108      	cbz	r0, 80027a8 <_printf_i+0x1e4>
 80027a4:	1b80      	subs	r0, r0, r6
 80027a6:	6060      	str	r0, [r4, #4]
 80027a8:	6863      	ldr	r3, [r4, #4]
 80027aa:	6123      	str	r3, [r4, #16]
 80027ac:	2300      	movs	r3, #0
 80027ae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80027b2:	e7aa      	b.n	800270a <_printf_i+0x146>
 80027b4:	6923      	ldr	r3, [r4, #16]
 80027b6:	4632      	mov	r2, r6
 80027b8:	4649      	mov	r1, r9
 80027ba:	4640      	mov	r0, r8
 80027bc:	47d0      	blx	sl
 80027be:	3001      	adds	r0, #1
 80027c0:	d0ad      	beq.n	800271e <_printf_i+0x15a>
 80027c2:	6823      	ldr	r3, [r4, #0]
 80027c4:	079b      	lsls	r3, r3, #30
 80027c6:	d413      	bmi.n	80027f0 <_printf_i+0x22c>
 80027c8:	68e0      	ldr	r0, [r4, #12]
 80027ca:	9b03      	ldr	r3, [sp, #12]
 80027cc:	4298      	cmp	r0, r3
 80027ce:	bfb8      	it	lt
 80027d0:	4618      	movlt	r0, r3
 80027d2:	e7a6      	b.n	8002722 <_printf_i+0x15e>
 80027d4:	2301      	movs	r3, #1
 80027d6:	4632      	mov	r2, r6
 80027d8:	4649      	mov	r1, r9
 80027da:	4640      	mov	r0, r8
 80027dc:	47d0      	blx	sl
 80027de:	3001      	adds	r0, #1
 80027e0:	d09d      	beq.n	800271e <_printf_i+0x15a>
 80027e2:	3501      	adds	r5, #1
 80027e4:	68e3      	ldr	r3, [r4, #12]
 80027e6:	9903      	ldr	r1, [sp, #12]
 80027e8:	1a5b      	subs	r3, r3, r1
 80027ea:	42ab      	cmp	r3, r5
 80027ec:	dcf2      	bgt.n	80027d4 <_printf_i+0x210>
 80027ee:	e7eb      	b.n	80027c8 <_printf_i+0x204>
 80027f0:	2500      	movs	r5, #0
 80027f2:	f104 0619 	add.w	r6, r4, #25
 80027f6:	e7f5      	b.n	80027e4 <_printf_i+0x220>
 80027f8:	08006b66 	.word	0x08006b66
 80027fc:	08006b77 	.word	0x08006b77

08002800 <_scanf_float>:
 8002800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002804:	b087      	sub	sp, #28
 8002806:	4691      	mov	r9, r2
 8002808:	9303      	str	r3, [sp, #12]
 800280a:	688b      	ldr	r3, [r1, #8]
 800280c:	1e5a      	subs	r2, r3, #1
 800280e:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8002812:	bf81      	itttt	hi
 8002814:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 8002818:	eb03 0b05 	addhi.w	fp, r3, r5
 800281c:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8002820:	608b      	strhi	r3, [r1, #8]
 8002822:	680b      	ldr	r3, [r1, #0]
 8002824:	460a      	mov	r2, r1
 8002826:	f04f 0500 	mov.w	r5, #0
 800282a:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 800282e:	f842 3b1c 	str.w	r3, [r2], #28
 8002832:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002836:	4680      	mov	r8, r0
 8002838:	460c      	mov	r4, r1
 800283a:	bf98      	it	ls
 800283c:	f04f 0b00 	movls.w	fp, #0
 8002840:	9201      	str	r2, [sp, #4]
 8002842:	4616      	mov	r6, r2
 8002844:	46aa      	mov	sl, r5
 8002846:	462f      	mov	r7, r5
 8002848:	9502      	str	r5, [sp, #8]
 800284a:	68a2      	ldr	r2, [r4, #8]
 800284c:	b15a      	cbz	r2, 8002866 <_scanf_float+0x66>
 800284e:	f8d9 3000 	ldr.w	r3, [r9]
 8002852:	781b      	ldrb	r3, [r3, #0]
 8002854:	2b4e      	cmp	r3, #78	@ 0x4e
 8002856:	d863      	bhi.n	8002920 <_scanf_float+0x120>
 8002858:	2b40      	cmp	r3, #64	@ 0x40
 800285a:	d83b      	bhi.n	80028d4 <_scanf_float+0xd4>
 800285c:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002860:	b2c8      	uxtb	r0, r1
 8002862:	280e      	cmp	r0, #14
 8002864:	d939      	bls.n	80028da <_scanf_float+0xda>
 8002866:	b11f      	cbz	r7, 8002870 <_scanf_float+0x70>
 8002868:	6823      	ldr	r3, [r4, #0]
 800286a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800286e:	6023      	str	r3, [r4, #0]
 8002870:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002874:	f1ba 0f01 	cmp.w	sl, #1
 8002878:	f200 8114 	bhi.w	8002aa4 <_scanf_float+0x2a4>
 800287c:	9b01      	ldr	r3, [sp, #4]
 800287e:	429e      	cmp	r6, r3
 8002880:	f200 8105 	bhi.w	8002a8e <_scanf_float+0x28e>
 8002884:	2001      	movs	r0, #1
 8002886:	b007      	add	sp, #28
 8002888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800288c:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002890:	2a0d      	cmp	r2, #13
 8002892:	d8e8      	bhi.n	8002866 <_scanf_float+0x66>
 8002894:	a101      	add	r1, pc, #4	@ (adr r1, 800289c <_scanf_float+0x9c>)
 8002896:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800289a:	bf00      	nop
 800289c:	080029e5 	.word	0x080029e5
 80028a0:	08002867 	.word	0x08002867
 80028a4:	08002867 	.word	0x08002867
 80028a8:	08002867 	.word	0x08002867
 80028ac:	08002a41 	.word	0x08002a41
 80028b0:	08002a1b 	.word	0x08002a1b
 80028b4:	08002867 	.word	0x08002867
 80028b8:	08002867 	.word	0x08002867
 80028bc:	080029f3 	.word	0x080029f3
 80028c0:	08002867 	.word	0x08002867
 80028c4:	08002867 	.word	0x08002867
 80028c8:	08002867 	.word	0x08002867
 80028cc:	08002867 	.word	0x08002867
 80028d0:	080029af 	.word	0x080029af
 80028d4:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 80028d8:	e7da      	b.n	8002890 <_scanf_float+0x90>
 80028da:	290e      	cmp	r1, #14
 80028dc:	d8c3      	bhi.n	8002866 <_scanf_float+0x66>
 80028de:	a001      	add	r0, pc, #4	@ (adr r0, 80028e4 <_scanf_float+0xe4>)
 80028e0:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80028e4:	0800299f 	.word	0x0800299f
 80028e8:	08002867 	.word	0x08002867
 80028ec:	0800299f 	.word	0x0800299f
 80028f0:	08002a2f 	.word	0x08002a2f
 80028f4:	08002867 	.word	0x08002867
 80028f8:	08002941 	.word	0x08002941
 80028fc:	08002985 	.word	0x08002985
 8002900:	08002985 	.word	0x08002985
 8002904:	08002985 	.word	0x08002985
 8002908:	08002985 	.word	0x08002985
 800290c:	08002985 	.word	0x08002985
 8002910:	08002985 	.word	0x08002985
 8002914:	08002985 	.word	0x08002985
 8002918:	08002985 	.word	0x08002985
 800291c:	08002985 	.word	0x08002985
 8002920:	2b6e      	cmp	r3, #110	@ 0x6e
 8002922:	d809      	bhi.n	8002938 <_scanf_float+0x138>
 8002924:	2b60      	cmp	r3, #96	@ 0x60
 8002926:	d8b1      	bhi.n	800288c <_scanf_float+0x8c>
 8002928:	2b54      	cmp	r3, #84	@ 0x54
 800292a:	d07b      	beq.n	8002a24 <_scanf_float+0x224>
 800292c:	2b59      	cmp	r3, #89	@ 0x59
 800292e:	d19a      	bne.n	8002866 <_scanf_float+0x66>
 8002930:	2d07      	cmp	r5, #7
 8002932:	d198      	bne.n	8002866 <_scanf_float+0x66>
 8002934:	2508      	movs	r5, #8
 8002936:	e02f      	b.n	8002998 <_scanf_float+0x198>
 8002938:	2b74      	cmp	r3, #116	@ 0x74
 800293a:	d073      	beq.n	8002a24 <_scanf_float+0x224>
 800293c:	2b79      	cmp	r3, #121	@ 0x79
 800293e:	e7f6      	b.n	800292e <_scanf_float+0x12e>
 8002940:	6821      	ldr	r1, [r4, #0]
 8002942:	05c8      	lsls	r0, r1, #23
 8002944:	d51e      	bpl.n	8002984 <_scanf_float+0x184>
 8002946:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 800294a:	6021      	str	r1, [r4, #0]
 800294c:	3701      	adds	r7, #1
 800294e:	f1bb 0f00 	cmp.w	fp, #0
 8002952:	d003      	beq.n	800295c <_scanf_float+0x15c>
 8002954:	3201      	adds	r2, #1
 8002956:	f10b 3bff 	add.w	fp, fp, #4294967295
 800295a:	60a2      	str	r2, [r4, #8]
 800295c:	68a3      	ldr	r3, [r4, #8]
 800295e:	3b01      	subs	r3, #1
 8002960:	60a3      	str	r3, [r4, #8]
 8002962:	6923      	ldr	r3, [r4, #16]
 8002964:	3301      	adds	r3, #1
 8002966:	6123      	str	r3, [r4, #16]
 8002968:	f8d9 3004 	ldr.w	r3, [r9, #4]
 800296c:	3b01      	subs	r3, #1
 800296e:	2b00      	cmp	r3, #0
 8002970:	f8c9 3004 	str.w	r3, [r9, #4]
 8002974:	f340 8082 	ble.w	8002a7c <_scanf_float+0x27c>
 8002978:	f8d9 3000 	ldr.w	r3, [r9]
 800297c:	3301      	adds	r3, #1
 800297e:	f8c9 3000 	str.w	r3, [r9]
 8002982:	e762      	b.n	800284a <_scanf_float+0x4a>
 8002984:	eb1a 0105 	adds.w	r1, sl, r5
 8002988:	f47f af6d 	bne.w	8002866 <_scanf_float+0x66>
 800298c:	6822      	ldr	r2, [r4, #0]
 800298e:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8002992:	6022      	str	r2, [r4, #0]
 8002994:	460d      	mov	r5, r1
 8002996:	468a      	mov	sl, r1
 8002998:	f806 3b01 	strb.w	r3, [r6], #1
 800299c:	e7de      	b.n	800295c <_scanf_float+0x15c>
 800299e:	6822      	ldr	r2, [r4, #0]
 80029a0:	0610      	lsls	r0, r2, #24
 80029a2:	f57f af60 	bpl.w	8002866 <_scanf_float+0x66>
 80029a6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80029aa:	6022      	str	r2, [r4, #0]
 80029ac:	e7f4      	b.n	8002998 <_scanf_float+0x198>
 80029ae:	f1ba 0f00 	cmp.w	sl, #0
 80029b2:	d10c      	bne.n	80029ce <_scanf_float+0x1ce>
 80029b4:	b977      	cbnz	r7, 80029d4 <_scanf_float+0x1d4>
 80029b6:	6822      	ldr	r2, [r4, #0]
 80029b8:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80029bc:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80029c0:	d108      	bne.n	80029d4 <_scanf_float+0x1d4>
 80029c2:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80029c6:	6022      	str	r2, [r4, #0]
 80029c8:	f04f 0a01 	mov.w	sl, #1
 80029cc:	e7e4      	b.n	8002998 <_scanf_float+0x198>
 80029ce:	f1ba 0f02 	cmp.w	sl, #2
 80029d2:	d050      	beq.n	8002a76 <_scanf_float+0x276>
 80029d4:	2d01      	cmp	r5, #1
 80029d6:	d002      	beq.n	80029de <_scanf_float+0x1de>
 80029d8:	2d04      	cmp	r5, #4
 80029da:	f47f af44 	bne.w	8002866 <_scanf_float+0x66>
 80029de:	3501      	adds	r5, #1
 80029e0:	b2ed      	uxtb	r5, r5
 80029e2:	e7d9      	b.n	8002998 <_scanf_float+0x198>
 80029e4:	f1ba 0f01 	cmp.w	sl, #1
 80029e8:	f47f af3d 	bne.w	8002866 <_scanf_float+0x66>
 80029ec:	f04f 0a02 	mov.w	sl, #2
 80029f0:	e7d2      	b.n	8002998 <_scanf_float+0x198>
 80029f2:	b975      	cbnz	r5, 8002a12 <_scanf_float+0x212>
 80029f4:	2f00      	cmp	r7, #0
 80029f6:	f47f af37 	bne.w	8002868 <_scanf_float+0x68>
 80029fa:	6822      	ldr	r2, [r4, #0]
 80029fc:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002a00:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002a04:	f040 8103 	bne.w	8002c0e <_scanf_float+0x40e>
 8002a08:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002a0c:	6022      	str	r2, [r4, #0]
 8002a0e:	2501      	movs	r5, #1
 8002a10:	e7c2      	b.n	8002998 <_scanf_float+0x198>
 8002a12:	2d03      	cmp	r5, #3
 8002a14:	d0e3      	beq.n	80029de <_scanf_float+0x1de>
 8002a16:	2d05      	cmp	r5, #5
 8002a18:	e7df      	b.n	80029da <_scanf_float+0x1da>
 8002a1a:	2d02      	cmp	r5, #2
 8002a1c:	f47f af23 	bne.w	8002866 <_scanf_float+0x66>
 8002a20:	2503      	movs	r5, #3
 8002a22:	e7b9      	b.n	8002998 <_scanf_float+0x198>
 8002a24:	2d06      	cmp	r5, #6
 8002a26:	f47f af1e 	bne.w	8002866 <_scanf_float+0x66>
 8002a2a:	2507      	movs	r5, #7
 8002a2c:	e7b4      	b.n	8002998 <_scanf_float+0x198>
 8002a2e:	6822      	ldr	r2, [r4, #0]
 8002a30:	0591      	lsls	r1, r2, #22
 8002a32:	f57f af18 	bpl.w	8002866 <_scanf_float+0x66>
 8002a36:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8002a3a:	6022      	str	r2, [r4, #0]
 8002a3c:	9702      	str	r7, [sp, #8]
 8002a3e:	e7ab      	b.n	8002998 <_scanf_float+0x198>
 8002a40:	6822      	ldr	r2, [r4, #0]
 8002a42:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8002a46:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002a4a:	d005      	beq.n	8002a58 <_scanf_float+0x258>
 8002a4c:	0550      	lsls	r0, r2, #21
 8002a4e:	f57f af0a 	bpl.w	8002866 <_scanf_float+0x66>
 8002a52:	2f00      	cmp	r7, #0
 8002a54:	f000 80db 	beq.w	8002c0e <_scanf_float+0x40e>
 8002a58:	0591      	lsls	r1, r2, #22
 8002a5a:	bf58      	it	pl
 8002a5c:	9902      	ldrpl	r1, [sp, #8]
 8002a5e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002a62:	bf58      	it	pl
 8002a64:	1a79      	subpl	r1, r7, r1
 8002a66:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8002a6a:	bf58      	it	pl
 8002a6c:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002a70:	6022      	str	r2, [r4, #0]
 8002a72:	2700      	movs	r7, #0
 8002a74:	e790      	b.n	8002998 <_scanf_float+0x198>
 8002a76:	f04f 0a03 	mov.w	sl, #3
 8002a7a:	e78d      	b.n	8002998 <_scanf_float+0x198>
 8002a7c:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8002a80:	4649      	mov	r1, r9
 8002a82:	4640      	mov	r0, r8
 8002a84:	4798      	blx	r3
 8002a86:	2800      	cmp	r0, #0
 8002a88:	f43f aedf 	beq.w	800284a <_scanf_float+0x4a>
 8002a8c:	e6eb      	b.n	8002866 <_scanf_float+0x66>
 8002a8e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002a92:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a96:	464a      	mov	r2, r9
 8002a98:	4640      	mov	r0, r8
 8002a9a:	4798      	blx	r3
 8002a9c:	6923      	ldr	r3, [r4, #16]
 8002a9e:	3b01      	subs	r3, #1
 8002aa0:	6123      	str	r3, [r4, #16]
 8002aa2:	e6eb      	b.n	800287c <_scanf_float+0x7c>
 8002aa4:	1e6b      	subs	r3, r5, #1
 8002aa6:	2b06      	cmp	r3, #6
 8002aa8:	d824      	bhi.n	8002af4 <_scanf_float+0x2f4>
 8002aaa:	2d02      	cmp	r5, #2
 8002aac:	d836      	bhi.n	8002b1c <_scanf_float+0x31c>
 8002aae:	9b01      	ldr	r3, [sp, #4]
 8002ab0:	429e      	cmp	r6, r3
 8002ab2:	f67f aee7 	bls.w	8002884 <_scanf_float+0x84>
 8002ab6:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002aba:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002abe:	464a      	mov	r2, r9
 8002ac0:	4640      	mov	r0, r8
 8002ac2:	4798      	blx	r3
 8002ac4:	6923      	ldr	r3, [r4, #16]
 8002ac6:	3b01      	subs	r3, #1
 8002ac8:	6123      	str	r3, [r4, #16]
 8002aca:	e7f0      	b.n	8002aae <_scanf_float+0x2ae>
 8002acc:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002ad0:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 8002ad4:	464a      	mov	r2, r9
 8002ad6:	4640      	mov	r0, r8
 8002ad8:	4798      	blx	r3
 8002ada:	6923      	ldr	r3, [r4, #16]
 8002adc:	3b01      	subs	r3, #1
 8002ade:	6123      	str	r3, [r4, #16]
 8002ae0:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002ae4:	fa5f fa8a 	uxtb.w	sl, sl
 8002ae8:	f1ba 0f02 	cmp.w	sl, #2
 8002aec:	d1ee      	bne.n	8002acc <_scanf_float+0x2cc>
 8002aee:	3d03      	subs	r5, #3
 8002af0:	b2ed      	uxtb	r5, r5
 8002af2:	1b76      	subs	r6, r6, r5
 8002af4:	6823      	ldr	r3, [r4, #0]
 8002af6:	05da      	lsls	r2, r3, #23
 8002af8:	d530      	bpl.n	8002b5c <_scanf_float+0x35c>
 8002afa:	055b      	lsls	r3, r3, #21
 8002afc:	d511      	bpl.n	8002b22 <_scanf_float+0x322>
 8002afe:	9b01      	ldr	r3, [sp, #4]
 8002b00:	429e      	cmp	r6, r3
 8002b02:	f67f aebf 	bls.w	8002884 <_scanf_float+0x84>
 8002b06:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002b0a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002b0e:	464a      	mov	r2, r9
 8002b10:	4640      	mov	r0, r8
 8002b12:	4798      	blx	r3
 8002b14:	6923      	ldr	r3, [r4, #16]
 8002b16:	3b01      	subs	r3, #1
 8002b18:	6123      	str	r3, [r4, #16]
 8002b1a:	e7f0      	b.n	8002afe <_scanf_float+0x2fe>
 8002b1c:	46aa      	mov	sl, r5
 8002b1e:	46b3      	mov	fp, r6
 8002b20:	e7de      	b.n	8002ae0 <_scanf_float+0x2e0>
 8002b22:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002b26:	6923      	ldr	r3, [r4, #16]
 8002b28:	2965      	cmp	r1, #101	@ 0x65
 8002b2a:	f103 33ff 	add.w	r3, r3, #4294967295
 8002b2e:	f106 35ff 	add.w	r5, r6, #4294967295
 8002b32:	6123      	str	r3, [r4, #16]
 8002b34:	d00c      	beq.n	8002b50 <_scanf_float+0x350>
 8002b36:	2945      	cmp	r1, #69	@ 0x45
 8002b38:	d00a      	beq.n	8002b50 <_scanf_float+0x350>
 8002b3a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002b3e:	464a      	mov	r2, r9
 8002b40:	4640      	mov	r0, r8
 8002b42:	4798      	blx	r3
 8002b44:	6923      	ldr	r3, [r4, #16]
 8002b46:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002b4a:	3b01      	subs	r3, #1
 8002b4c:	1eb5      	subs	r5, r6, #2
 8002b4e:	6123      	str	r3, [r4, #16]
 8002b50:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002b54:	464a      	mov	r2, r9
 8002b56:	4640      	mov	r0, r8
 8002b58:	4798      	blx	r3
 8002b5a:	462e      	mov	r6, r5
 8002b5c:	6822      	ldr	r2, [r4, #0]
 8002b5e:	f012 0210 	ands.w	r2, r2, #16
 8002b62:	d001      	beq.n	8002b68 <_scanf_float+0x368>
 8002b64:	2000      	movs	r0, #0
 8002b66:	e68e      	b.n	8002886 <_scanf_float+0x86>
 8002b68:	7032      	strb	r2, [r6, #0]
 8002b6a:	6823      	ldr	r3, [r4, #0]
 8002b6c:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002b70:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002b74:	d125      	bne.n	8002bc2 <_scanf_float+0x3c2>
 8002b76:	9b02      	ldr	r3, [sp, #8]
 8002b78:	429f      	cmp	r7, r3
 8002b7a:	d00a      	beq.n	8002b92 <_scanf_float+0x392>
 8002b7c:	1bda      	subs	r2, r3, r7
 8002b7e:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8002b82:	429e      	cmp	r6, r3
 8002b84:	bf28      	it	cs
 8002b86:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002b8a:	4922      	ldr	r1, [pc, #136]	@ (8002c14 <_scanf_float+0x414>)
 8002b8c:	4630      	mov	r0, r6
 8002b8e:	f000 f907 	bl	8002da0 <siprintf>
 8002b92:	9901      	ldr	r1, [sp, #4]
 8002b94:	2200      	movs	r2, #0
 8002b96:	4640      	mov	r0, r8
 8002b98:	f002 fbf2 	bl	8005380 <_strtod_r>
 8002b9c:	9b03      	ldr	r3, [sp, #12]
 8002b9e:	6821      	ldr	r1, [r4, #0]
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	f011 0f02 	tst.w	r1, #2
 8002ba6:	ec57 6b10 	vmov	r6, r7, d0
 8002baa:	f103 0204 	add.w	r2, r3, #4
 8002bae:	d015      	beq.n	8002bdc <_scanf_float+0x3dc>
 8002bb0:	9903      	ldr	r1, [sp, #12]
 8002bb2:	600a      	str	r2, [r1, #0]
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	e9c3 6700 	strd	r6, r7, [r3]
 8002bba:	68e3      	ldr	r3, [r4, #12]
 8002bbc:	3301      	adds	r3, #1
 8002bbe:	60e3      	str	r3, [r4, #12]
 8002bc0:	e7d0      	b.n	8002b64 <_scanf_float+0x364>
 8002bc2:	9b04      	ldr	r3, [sp, #16]
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d0e4      	beq.n	8002b92 <_scanf_float+0x392>
 8002bc8:	9905      	ldr	r1, [sp, #20]
 8002bca:	230a      	movs	r3, #10
 8002bcc:	3101      	adds	r1, #1
 8002bce:	4640      	mov	r0, r8
 8002bd0:	f002 fc56 	bl	8005480 <_strtol_r>
 8002bd4:	9b04      	ldr	r3, [sp, #16]
 8002bd6:	9e05      	ldr	r6, [sp, #20]
 8002bd8:	1ac2      	subs	r2, r0, r3
 8002bda:	e7d0      	b.n	8002b7e <_scanf_float+0x37e>
 8002bdc:	f011 0f04 	tst.w	r1, #4
 8002be0:	9903      	ldr	r1, [sp, #12]
 8002be2:	600a      	str	r2, [r1, #0]
 8002be4:	d1e6      	bne.n	8002bb4 <_scanf_float+0x3b4>
 8002be6:	681d      	ldr	r5, [r3, #0]
 8002be8:	4632      	mov	r2, r6
 8002bea:	463b      	mov	r3, r7
 8002bec:	4630      	mov	r0, r6
 8002bee:	4639      	mov	r1, r7
 8002bf0:	f7fd ffa4 	bl	8000b3c <__aeabi_dcmpun>
 8002bf4:	b128      	cbz	r0, 8002c02 <_scanf_float+0x402>
 8002bf6:	4808      	ldr	r0, [pc, #32]	@ (8002c18 <_scanf_float+0x418>)
 8002bf8:	f000 f9b8 	bl	8002f6c <nanf>
 8002bfc:	ed85 0a00 	vstr	s0, [r5]
 8002c00:	e7db      	b.n	8002bba <_scanf_float+0x3ba>
 8002c02:	4630      	mov	r0, r6
 8002c04:	4639      	mov	r1, r7
 8002c06:	f7fd fff7 	bl	8000bf8 <__aeabi_d2f>
 8002c0a:	6028      	str	r0, [r5, #0]
 8002c0c:	e7d5      	b.n	8002bba <_scanf_float+0x3ba>
 8002c0e:	2700      	movs	r7, #0
 8002c10:	e62e      	b.n	8002870 <_scanf_float+0x70>
 8002c12:	bf00      	nop
 8002c14:	08006b88 	.word	0x08006b88
 8002c18:	08006cc9 	.word	0x08006cc9

08002c1c <std>:
 8002c1c:	2300      	movs	r3, #0
 8002c1e:	b510      	push	{r4, lr}
 8002c20:	4604      	mov	r4, r0
 8002c22:	e9c0 3300 	strd	r3, r3, [r0]
 8002c26:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002c2a:	6083      	str	r3, [r0, #8]
 8002c2c:	8181      	strh	r1, [r0, #12]
 8002c2e:	6643      	str	r3, [r0, #100]	@ 0x64
 8002c30:	81c2      	strh	r2, [r0, #14]
 8002c32:	6183      	str	r3, [r0, #24]
 8002c34:	4619      	mov	r1, r3
 8002c36:	2208      	movs	r2, #8
 8002c38:	305c      	adds	r0, #92	@ 0x5c
 8002c3a:	f000 f916 	bl	8002e6a <memset>
 8002c3e:	4b0d      	ldr	r3, [pc, #52]	@ (8002c74 <std+0x58>)
 8002c40:	6263      	str	r3, [r4, #36]	@ 0x24
 8002c42:	4b0d      	ldr	r3, [pc, #52]	@ (8002c78 <std+0x5c>)
 8002c44:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002c46:	4b0d      	ldr	r3, [pc, #52]	@ (8002c7c <std+0x60>)
 8002c48:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002c4a:	4b0d      	ldr	r3, [pc, #52]	@ (8002c80 <std+0x64>)
 8002c4c:	6323      	str	r3, [r4, #48]	@ 0x30
 8002c4e:	4b0d      	ldr	r3, [pc, #52]	@ (8002c84 <std+0x68>)
 8002c50:	6224      	str	r4, [r4, #32]
 8002c52:	429c      	cmp	r4, r3
 8002c54:	d006      	beq.n	8002c64 <std+0x48>
 8002c56:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002c5a:	4294      	cmp	r4, r2
 8002c5c:	d002      	beq.n	8002c64 <std+0x48>
 8002c5e:	33d0      	adds	r3, #208	@ 0xd0
 8002c60:	429c      	cmp	r4, r3
 8002c62:	d105      	bne.n	8002c70 <std+0x54>
 8002c64:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002c68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c6c:	f000 b97a 	b.w	8002f64 <__retarget_lock_init_recursive>
 8002c70:	bd10      	pop	{r4, pc}
 8002c72:	bf00      	nop
 8002c74:	08002de5 	.word	0x08002de5
 8002c78:	08002e07 	.word	0x08002e07
 8002c7c:	08002e3f 	.word	0x08002e3f
 8002c80:	08002e63 	.word	0x08002e63
 8002c84:	200001f8 	.word	0x200001f8

08002c88 <stdio_exit_handler>:
 8002c88:	4a02      	ldr	r2, [pc, #8]	@ (8002c94 <stdio_exit_handler+0xc>)
 8002c8a:	4903      	ldr	r1, [pc, #12]	@ (8002c98 <stdio_exit_handler+0x10>)
 8002c8c:	4803      	ldr	r0, [pc, #12]	@ (8002c9c <stdio_exit_handler+0x14>)
 8002c8e:	f000 b869 	b.w	8002d64 <_fwalk_sglue>
 8002c92:	bf00      	nop
 8002c94:	20000004 	.word	0x20000004
 8002c98:	0800583d 	.word	0x0800583d
 8002c9c:	20000014 	.word	0x20000014

08002ca0 <cleanup_stdio>:
 8002ca0:	6841      	ldr	r1, [r0, #4]
 8002ca2:	4b0c      	ldr	r3, [pc, #48]	@ (8002cd4 <cleanup_stdio+0x34>)
 8002ca4:	4299      	cmp	r1, r3
 8002ca6:	b510      	push	{r4, lr}
 8002ca8:	4604      	mov	r4, r0
 8002caa:	d001      	beq.n	8002cb0 <cleanup_stdio+0x10>
 8002cac:	f002 fdc6 	bl	800583c <_fflush_r>
 8002cb0:	68a1      	ldr	r1, [r4, #8]
 8002cb2:	4b09      	ldr	r3, [pc, #36]	@ (8002cd8 <cleanup_stdio+0x38>)
 8002cb4:	4299      	cmp	r1, r3
 8002cb6:	d002      	beq.n	8002cbe <cleanup_stdio+0x1e>
 8002cb8:	4620      	mov	r0, r4
 8002cba:	f002 fdbf 	bl	800583c <_fflush_r>
 8002cbe:	68e1      	ldr	r1, [r4, #12]
 8002cc0:	4b06      	ldr	r3, [pc, #24]	@ (8002cdc <cleanup_stdio+0x3c>)
 8002cc2:	4299      	cmp	r1, r3
 8002cc4:	d004      	beq.n	8002cd0 <cleanup_stdio+0x30>
 8002cc6:	4620      	mov	r0, r4
 8002cc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ccc:	f002 bdb6 	b.w	800583c <_fflush_r>
 8002cd0:	bd10      	pop	{r4, pc}
 8002cd2:	bf00      	nop
 8002cd4:	200001f8 	.word	0x200001f8
 8002cd8:	20000260 	.word	0x20000260
 8002cdc:	200002c8 	.word	0x200002c8

08002ce0 <global_stdio_init.part.0>:
 8002ce0:	b510      	push	{r4, lr}
 8002ce2:	4b0b      	ldr	r3, [pc, #44]	@ (8002d10 <global_stdio_init.part.0+0x30>)
 8002ce4:	4c0b      	ldr	r4, [pc, #44]	@ (8002d14 <global_stdio_init.part.0+0x34>)
 8002ce6:	4a0c      	ldr	r2, [pc, #48]	@ (8002d18 <global_stdio_init.part.0+0x38>)
 8002ce8:	601a      	str	r2, [r3, #0]
 8002cea:	4620      	mov	r0, r4
 8002cec:	2200      	movs	r2, #0
 8002cee:	2104      	movs	r1, #4
 8002cf0:	f7ff ff94 	bl	8002c1c <std>
 8002cf4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002cf8:	2201      	movs	r2, #1
 8002cfa:	2109      	movs	r1, #9
 8002cfc:	f7ff ff8e 	bl	8002c1c <std>
 8002d00:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002d04:	2202      	movs	r2, #2
 8002d06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d0a:	2112      	movs	r1, #18
 8002d0c:	f7ff bf86 	b.w	8002c1c <std>
 8002d10:	20000330 	.word	0x20000330
 8002d14:	200001f8 	.word	0x200001f8
 8002d18:	08002c89 	.word	0x08002c89

08002d1c <__sfp_lock_acquire>:
 8002d1c:	4801      	ldr	r0, [pc, #4]	@ (8002d24 <__sfp_lock_acquire+0x8>)
 8002d1e:	f000 b922 	b.w	8002f66 <__retarget_lock_acquire_recursive>
 8002d22:	bf00      	nop
 8002d24:	20000339 	.word	0x20000339

08002d28 <__sfp_lock_release>:
 8002d28:	4801      	ldr	r0, [pc, #4]	@ (8002d30 <__sfp_lock_release+0x8>)
 8002d2a:	f000 b91d 	b.w	8002f68 <__retarget_lock_release_recursive>
 8002d2e:	bf00      	nop
 8002d30:	20000339 	.word	0x20000339

08002d34 <__sinit>:
 8002d34:	b510      	push	{r4, lr}
 8002d36:	4604      	mov	r4, r0
 8002d38:	f7ff fff0 	bl	8002d1c <__sfp_lock_acquire>
 8002d3c:	6a23      	ldr	r3, [r4, #32]
 8002d3e:	b11b      	cbz	r3, 8002d48 <__sinit+0x14>
 8002d40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d44:	f7ff bff0 	b.w	8002d28 <__sfp_lock_release>
 8002d48:	4b04      	ldr	r3, [pc, #16]	@ (8002d5c <__sinit+0x28>)
 8002d4a:	6223      	str	r3, [r4, #32]
 8002d4c:	4b04      	ldr	r3, [pc, #16]	@ (8002d60 <__sinit+0x2c>)
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	2b00      	cmp	r3, #0
 8002d52:	d1f5      	bne.n	8002d40 <__sinit+0xc>
 8002d54:	f7ff ffc4 	bl	8002ce0 <global_stdio_init.part.0>
 8002d58:	e7f2      	b.n	8002d40 <__sinit+0xc>
 8002d5a:	bf00      	nop
 8002d5c:	08002ca1 	.word	0x08002ca1
 8002d60:	20000330 	.word	0x20000330

08002d64 <_fwalk_sglue>:
 8002d64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002d68:	4607      	mov	r7, r0
 8002d6a:	4688      	mov	r8, r1
 8002d6c:	4614      	mov	r4, r2
 8002d6e:	2600      	movs	r6, #0
 8002d70:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002d74:	f1b9 0901 	subs.w	r9, r9, #1
 8002d78:	d505      	bpl.n	8002d86 <_fwalk_sglue+0x22>
 8002d7a:	6824      	ldr	r4, [r4, #0]
 8002d7c:	2c00      	cmp	r4, #0
 8002d7e:	d1f7      	bne.n	8002d70 <_fwalk_sglue+0xc>
 8002d80:	4630      	mov	r0, r6
 8002d82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002d86:	89ab      	ldrh	r3, [r5, #12]
 8002d88:	2b01      	cmp	r3, #1
 8002d8a:	d907      	bls.n	8002d9c <_fwalk_sglue+0x38>
 8002d8c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002d90:	3301      	adds	r3, #1
 8002d92:	d003      	beq.n	8002d9c <_fwalk_sglue+0x38>
 8002d94:	4629      	mov	r1, r5
 8002d96:	4638      	mov	r0, r7
 8002d98:	47c0      	blx	r8
 8002d9a:	4306      	orrs	r6, r0
 8002d9c:	3568      	adds	r5, #104	@ 0x68
 8002d9e:	e7e9      	b.n	8002d74 <_fwalk_sglue+0x10>

08002da0 <siprintf>:
 8002da0:	b40e      	push	{r1, r2, r3}
 8002da2:	b510      	push	{r4, lr}
 8002da4:	b09d      	sub	sp, #116	@ 0x74
 8002da6:	ab1f      	add	r3, sp, #124	@ 0x7c
 8002da8:	9002      	str	r0, [sp, #8]
 8002daa:	9006      	str	r0, [sp, #24]
 8002dac:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002db0:	480a      	ldr	r0, [pc, #40]	@ (8002ddc <siprintf+0x3c>)
 8002db2:	9107      	str	r1, [sp, #28]
 8002db4:	9104      	str	r1, [sp, #16]
 8002db6:	490a      	ldr	r1, [pc, #40]	@ (8002de0 <siprintf+0x40>)
 8002db8:	f853 2b04 	ldr.w	r2, [r3], #4
 8002dbc:	9105      	str	r1, [sp, #20]
 8002dbe:	2400      	movs	r4, #0
 8002dc0:	a902      	add	r1, sp, #8
 8002dc2:	6800      	ldr	r0, [r0, #0]
 8002dc4:	9301      	str	r3, [sp, #4]
 8002dc6:	941b      	str	r4, [sp, #108]	@ 0x6c
 8002dc8:	f002 fbb8 	bl	800553c <_svfiprintf_r>
 8002dcc:	9b02      	ldr	r3, [sp, #8]
 8002dce:	701c      	strb	r4, [r3, #0]
 8002dd0:	b01d      	add	sp, #116	@ 0x74
 8002dd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002dd6:	b003      	add	sp, #12
 8002dd8:	4770      	bx	lr
 8002dda:	bf00      	nop
 8002ddc:	20000010 	.word	0x20000010
 8002de0:	ffff0208 	.word	0xffff0208

08002de4 <__sread>:
 8002de4:	b510      	push	{r4, lr}
 8002de6:	460c      	mov	r4, r1
 8002de8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002dec:	f000 f86c 	bl	8002ec8 <_read_r>
 8002df0:	2800      	cmp	r0, #0
 8002df2:	bfab      	itete	ge
 8002df4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002df6:	89a3      	ldrhlt	r3, [r4, #12]
 8002df8:	181b      	addge	r3, r3, r0
 8002dfa:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002dfe:	bfac      	ite	ge
 8002e00:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002e02:	81a3      	strhlt	r3, [r4, #12]
 8002e04:	bd10      	pop	{r4, pc}

08002e06 <__swrite>:
 8002e06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002e0a:	461f      	mov	r7, r3
 8002e0c:	898b      	ldrh	r3, [r1, #12]
 8002e0e:	05db      	lsls	r3, r3, #23
 8002e10:	4605      	mov	r5, r0
 8002e12:	460c      	mov	r4, r1
 8002e14:	4616      	mov	r6, r2
 8002e16:	d505      	bpl.n	8002e24 <__swrite+0x1e>
 8002e18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002e1c:	2302      	movs	r3, #2
 8002e1e:	2200      	movs	r2, #0
 8002e20:	f000 f840 	bl	8002ea4 <_lseek_r>
 8002e24:	89a3      	ldrh	r3, [r4, #12]
 8002e26:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002e2a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002e2e:	81a3      	strh	r3, [r4, #12]
 8002e30:	4632      	mov	r2, r6
 8002e32:	463b      	mov	r3, r7
 8002e34:	4628      	mov	r0, r5
 8002e36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002e3a:	f000 b857 	b.w	8002eec <_write_r>

08002e3e <__sseek>:
 8002e3e:	b510      	push	{r4, lr}
 8002e40:	460c      	mov	r4, r1
 8002e42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002e46:	f000 f82d 	bl	8002ea4 <_lseek_r>
 8002e4a:	1c43      	adds	r3, r0, #1
 8002e4c:	89a3      	ldrh	r3, [r4, #12]
 8002e4e:	bf15      	itete	ne
 8002e50:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002e52:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002e56:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002e5a:	81a3      	strheq	r3, [r4, #12]
 8002e5c:	bf18      	it	ne
 8002e5e:	81a3      	strhne	r3, [r4, #12]
 8002e60:	bd10      	pop	{r4, pc}

08002e62 <__sclose>:
 8002e62:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002e66:	f000 b80d 	b.w	8002e84 <_close_r>

08002e6a <memset>:
 8002e6a:	4402      	add	r2, r0
 8002e6c:	4603      	mov	r3, r0
 8002e6e:	4293      	cmp	r3, r2
 8002e70:	d100      	bne.n	8002e74 <memset+0xa>
 8002e72:	4770      	bx	lr
 8002e74:	f803 1b01 	strb.w	r1, [r3], #1
 8002e78:	e7f9      	b.n	8002e6e <memset+0x4>
	...

08002e7c <_localeconv_r>:
 8002e7c:	4800      	ldr	r0, [pc, #0]	@ (8002e80 <_localeconv_r+0x4>)
 8002e7e:	4770      	bx	lr
 8002e80:	20000150 	.word	0x20000150

08002e84 <_close_r>:
 8002e84:	b538      	push	{r3, r4, r5, lr}
 8002e86:	4d06      	ldr	r5, [pc, #24]	@ (8002ea0 <_close_r+0x1c>)
 8002e88:	2300      	movs	r3, #0
 8002e8a:	4604      	mov	r4, r0
 8002e8c:	4608      	mov	r0, r1
 8002e8e:	602b      	str	r3, [r5, #0]
 8002e90:	f7fe ff37 	bl	8001d02 <_close>
 8002e94:	1c43      	adds	r3, r0, #1
 8002e96:	d102      	bne.n	8002e9e <_close_r+0x1a>
 8002e98:	682b      	ldr	r3, [r5, #0]
 8002e9a:	b103      	cbz	r3, 8002e9e <_close_r+0x1a>
 8002e9c:	6023      	str	r3, [r4, #0]
 8002e9e:	bd38      	pop	{r3, r4, r5, pc}
 8002ea0:	20000334 	.word	0x20000334

08002ea4 <_lseek_r>:
 8002ea4:	b538      	push	{r3, r4, r5, lr}
 8002ea6:	4d07      	ldr	r5, [pc, #28]	@ (8002ec4 <_lseek_r+0x20>)
 8002ea8:	4604      	mov	r4, r0
 8002eaa:	4608      	mov	r0, r1
 8002eac:	4611      	mov	r1, r2
 8002eae:	2200      	movs	r2, #0
 8002eb0:	602a      	str	r2, [r5, #0]
 8002eb2:	461a      	mov	r2, r3
 8002eb4:	f7fe ff4c 	bl	8001d50 <_lseek>
 8002eb8:	1c43      	adds	r3, r0, #1
 8002eba:	d102      	bne.n	8002ec2 <_lseek_r+0x1e>
 8002ebc:	682b      	ldr	r3, [r5, #0]
 8002ebe:	b103      	cbz	r3, 8002ec2 <_lseek_r+0x1e>
 8002ec0:	6023      	str	r3, [r4, #0]
 8002ec2:	bd38      	pop	{r3, r4, r5, pc}
 8002ec4:	20000334 	.word	0x20000334

08002ec8 <_read_r>:
 8002ec8:	b538      	push	{r3, r4, r5, lr}
 8002eca:	4d07      	ldr	r5, [pc, #28]	@ (8002ee8 <_read_r+0x20>)
 8002ecc:	4604      	mov	r4, r0
 8002ece:	4608      	mov	r0, r1
 8002ed0:	4611      	mov	r1, r2
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	602a      	str	r2, [r5, #0]
 8002ed6:	461a      	mov	r2, r3
 8002ed8:	f7fe feda 	bl	8001c90 <_read>
 8002edc:	1c43      	adds	r3, r0, #1
 8002ede:	d102      	bne.n	8002ee6 <_read_r+0x1e>
 8002ee0:	682b      	ldr	r3, [r5, #0]
 8002ee2:	b103      	cbz	r3, 8002ee6 <_read_r+0x1e>
 8002ee4:	6023      	str	r3, [r4, #0]
 8002ee6:	bd38      	pop	{r3, r4, r5, pc}
 8002ee8:	20000334 	.word	0x20000334

08002eec <_write_r>:
 8002eec:	b538      	push	{r3, r4, r5, lr}
 8002eee:	4d07      	ldr	r5, [pc, #28]	@ (8002f0c <_write_r+0x20>)
 8002ef0:	4604      	mov	r4, r0
 8002ef2:	4608      	mov	r0, r1
 8002ef4:	4611      	mov	r1, r2
 8002ef6:	2200      	movs	r2, #0
 8002ef8:	602a      	str	r2, [r5, #0]
 8002efa:	461a      	mov	r2, r3
 8002efc:	f7fe fee5 	bl	8001cca <_write>
 8002f00:	1c43      	adds	r3, r0, #1
 8002f02:	d102      	bne.n	8002f0a <_write_r+0x1e>
 8002f04:	682b      	ldr	r3, [r5, #0]
 8002f06:	b103      	cbz	r3, 8002f0a <_write_r+0x1e>
 8002f08:	6023      	str	r3, [r4, #0]
 8002f0a:	bd38      	pop	{r3, r4, r5, pc}
 8002f0c:	20000334 	.word	0x20000334

08002f10 <__errno>:
 8002f10:	4b01      	ldr	r3, [pc, #4]	@ (8002f18 <__errno+0x8>)
 8002f12:	6818      	ldr	r0, [r3, #0]
 8002f14:	4770      	bx	lr
 8002f16:	bf00      	nop
 8002f18:	20000010 	.word	0x20000010

08002f1c <__libc_init_array>:
 8002f1c:	b570      	push	{r4, r5, r6, lr}
 8002f1e:	4d0d      	ldr	r5, [pc, #52]	@ (8002f54 <__libc_init_array+0x38>)
 8002f20:	4c0d      	ldr	r4, [pc, #52]	@ (8002f58 <__libc_init_array+0x3c>)
 8002f22:	1b64      	subs	r4, r4, r5
 8002f24:	10a4      	asrs	r4, r4, #2
 8002f26:	2600      	movs	r6, #0
 8002f28:	42a6      	cmp	r6, r4
 8002f2a:	d109      	bne.n	8002f40 <__libc_init_array+0x24>
 8002f2c:	4d0b      	ldr	r5, [pc, #44]	@ (8002f5c <__libc_init_array+0x40>)
 8002f2e:	4c0c      	ldr	r4, [pc, #48]	@ (8002f60 <__libc_init_array+0x44>)
 8002f30:	f003 fcf2 	bl	8006918 <_init>
 8002f34:	1b64      	subs	r4, r4, r5
 8002f36:	10a4      	asrs	r4, r4, #2
 8002f38:	2600      	movs	r6, #0
 8002f3a:	42a6      	cmp	r6, r4
 8002f3c:	d105      	bne.n	8002f4a <__libc_init_array+0x2e>
 8002f3e:	bd70      	pop	{r4, r5, r6, pc}
 8002f40:	f855 3b04 	ldr.w	r3, [r5], #4
 8002f44:	4798      	blx	r3
 8002f46:	3601      	adds	r6, #1
 8002f48:	e7ee      	b.n	8002f28 <__libc_init_array+0xc>
 8002f4a:	f855 3b04 	ldr.w	r3, [r5], #4
 8002f4e:	4798      	blx	r3
 8002f50:	3601      	adds	r6, #1
 8002f52:	e7f2      	b.n	8002f3a <__libc_init_array+0x1e>
 8002f54:	08006fbc 	.word	0x08006fbc
 8002f58:	08006fbc 	.word	0x08006fbc
 8002f5c:	08006fbc 	.word	0x08006fbc
 8002f60:	08006fc0 	.word	0x08006fc0

08002f64 <__retarget_lock_init_recursive>:
 8002f64:	4770      	bx	lr

08002f66 <__retarget_lock_acquire_recursive>:
 8002f66:	4770      	bx	lr

08002f68 <__retarget_lock_release_recursive>:
 8002f68:	4770      	bx	lr
	...

08002f6c <nanf>:
 8002f6c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002f74 <nanf+0x8>
 8002f70:	4770      	bx	lr
 8002f72:	bf00      	nop
 8002f74:	7fc00000 	.word	0x7fc00000

08002f78 <quorem>:
 8002f78:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f7c:	6903      	ldr	r3, [r0, #16]
 8002f7e:	690c      	ldr	r4, [r1, #16]
 8002f80:	42a3      	cmp	r3, r4
 8002f82:	4607      	mov	r7, r0
 8002f84:	db7e      	blt.n	8003084 <quorem+0x10c>
 8002f86:	3c01      	subs	r4, #1
 8002f88:	f101 0814 	add.w	r8, r1, #20
 8002f8c:	00a3      	lsls	r3, r4, #2
 8002f8e:	f100 0514 	add.w	r5, r0, #20
 8002f92:	9300      	str	r3, [sp, #0]
 8002f94:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002f98:	9301      	str	r3, [sp, #4]
 8002f9a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002f9e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002fa2:	3301      	adds	r3, #1
 8002fa4:	429a      	cmp	r2, r3
 8002fa6:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002faa:	fbb2 f6f3 	udiv	r6, r2, r3
 8002fae:	d32e      	bcc.n	800300e <quorem+0x96>
 8002fb0:	f04f 0a00 	mov.w	sl, #0
 8002fb4:	46c4      	mov	ip, r8
 8002fb6:	46ae      	mov	lr, r5
 8002fb8:	46d3      	mov	fp, sl
 8002fba:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002fbe:	b298      	uxth	r0, r3
 8002fc0:	fb06 a000 	mla	r0, r6, r0, sl
 8002fc4:	0c02      	lsrs	r2, r0, #16
 8002fc6:	0c1b      	lsrs	r3, r3, #16
 8002fc8:	fb06 2303 	mla	r3, r6, r3, r2
 8002fcc:	f8de 2000 	ldr.w	r2, [lr]
 8002fd0:	b280      	uxth	r0, r0
 8002fd2:	b292      	uxth	r2, r2
 8002fd4:	1a12      	subs	r2, r2, r0
 8002fd6:	445a      	add	r2, fp
 8002fd8:	f8de 0000 	ldr.w	r0, [lr]
 8002fdc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002fe0:	b29b      	uxth	r3, r3
 8002fe2:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002fe6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002fea:	b292      	uxth	r2, r2
 8002fec:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002ff0:	45e1      	cmp	r9, ip
 8002ff2:	f84e 2b04 	str.w	r2, [lr], #4
 8002ff6:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002ffa:	d2de      	bcs.n	8002fba <quorem+0x42>
 8002ffc:	9b00      	ldr	r3, [sp, #0]
 8002ffe:	58eb      	ldr	r3, [r5, r3]
 8003000:	b92b      	cbnz	r3, 800300e <quorem+0x96>
 8003002:	9b01      	ldr	r3, [sp, #4]
 8003004:	3b04      	subs	r3, #4
 8003006:	429d      	cmp	r5, r3
 8003008:	461a      	mov	r2, r3
 800300a:	d32f      	bcc.n	800306c <quorem+0xf4>
 800300c:	613c      	str	r4, [r7, #16]
 800300e:	4638      	mov	r0, r7
 8003010:	f001 f9c6 	bl	80043a0 <__mcmp>
 8003014:	2800      	cmp	r0, #0
 8003016:	db25      	blt.n	8003064 <quorem+0xec>
 8003018:	4629      	mov	r1, r5
 800301a:	2000      	movs	r0, #0
 800301c:	f858 2b04 	ldr.w	r2, [r8], #4
 8003020:	f8d1 c000 	ldr.w	ip, [r1]
 8003024:	fa1f fe82 	uxth.w	lr, r2
 8003028:	fa1f f38c 	uxth.w	r3, ip
 800302c:	eba3 030e 	sub.w	r3, r3, lr
 8003030:	4403      	add	r3, r0
 8003032:	0c12      	lsrs	r2, r2, #16
 8003034:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8003038:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800303c:	b29b      	uxth	r3, r3
 800303e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003042:	45c1      	cmp	r9, r8
 8003044:	f841 3b04 	str.w	r3, [r1], #4
 8003048:	ea4f 4022 	mov.w	r0, r2, asr #16
 800304c:	d2e6      	bcs.n	800301c <quorem+0xa4>
 800304e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003052:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003056:	b922      	cbnz	r2, 8003062 <quorem+0xea>
 8003058:	3b04      	subs	r3, #4
 800305a:	429d      	cmp	r5, r3
 800305c:	461a      	mov	r2, r3
 800305e:	d30b      	bcc.n	8003078 <quorem+0x100>
 8003060:	613c      	str	r4, [r7, #16]
 8003062:	3601      	adds	r6, #1
 8003064:	4630      	mov	r0, r6
 8003066:	b003      	add	sp, #12
 8003068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800306c:	6812      	ldr	r2, [r2, #0]
 800306e:	3b04      	subs	r3, #4
 8003070:	2a00      	cmp	r2, #0
 8003072:	d1cb      	bne.n	800300c <quorem+0x94>
 8003074:	3c01      	subs	r4, #1
 8003076:	e7c6      	b.n	8003006 <quorem+0x8e>
 8003078:	6812      	ldr	r2, [r2, #0]
 800307a:	3b04      	subs	r3, #4
 800307c:	2a00      	cmp	r2, #0
 800307e:	d1ef      	bne.n	8003060 <quorem+0xe8>
 8003080:	3c01      	subs	r4, #1
 8003082:	e7ea      	b.n	800305a <quorem+0xe2>
 8003084:	2000      	movs	r0, #0
 8003086:	e7ee      	b.n	8003066 <quorem+0xee>

08003088 <_dtoa_r>:
 8003088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800308c:	69c7      	ldr	r7, [r0, #28]
 800308e:	b097      	sub	sp, #92	@ 0x5c
 8003090:	ed8d 0b04 	vstr	d0, [sp, #16]
 8003094:	ec55 4b10 	vmov	r4, r5, d0
 8003098:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800309a:	9107      	str	r1, [sp, #28]
 800309c:	4681      	mov	r9, r0
 800309e:	920c      	str	r2, [sp, #48]	@ 0x30
 80030a0:	9311      	str	r3, [sp, #68]	@ 0x44
 80030a2:	b97f      	cbnz	r7, 80030c4 <_dtoa_r+0x3c>
 80030a4:	2010      	movs	r0, #16
 80030a6:	f000 fe09 	bl	8003cbc <malloc>
 80030aa:	4602      	mov	r2, r0
 80030ac:	f8c9 001c 	str.w	r0, [r9, #28]
 80030b0:	b920      	cbnz	r0, 80030bc <_dtoa_r+0x34>
 80030b2:	4ba9      	ldr	r3, [pc, #676]	@ (8003358 <_dtoa_r+0x2d0>)
 80030b4:	21ef      	movs	r1, #239	@ 0xef
 80030b6:	48a9      	ldr	r0, [pc, #676]	@ (800335c <_dtoa_r+0x2d4>)
 80030b8:	f002 fc3a 	bl	8005930 <__assert_func>
 80030bc:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80030c0:	6007      	str	r7, [r0, #0]
 80030c2:	60c7      	str	r7, [r0, #12]
 80030c4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80030c8:	6819      	ldr	r1, [r3, #0]
 80030ca:	b159      	cbz	r1, 80030e4 <_dtoa_r+0x5c>
 80030cc:	685a      	ldr	r2, [r3, #4]
 80030ce:	604a      	str	r2, [r1, #4]
 80030d0:	2301      	movs	r3, #1
 80030d2:	4093      	lsls	r3, r2
 80030d4:	608b      	str	r3, [r1, #8]
 80030d6:	4648      	mov	r0, r9
 80030d8:	f000 fee6 	bl	8003ea8 <_Bfree>
 80030dc:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80030e0:	2200      	movs	r2, #0
 80030e2:	601a      	str	r2, [r3, #0]
 80030e4:	1e2b      	subs	r3, r5, #0
 80030e6:	bfb9      	ittee	lt
 80030e8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80030ec:	9305      	strlt	r3, [sp, #20]
 80030ee:	2300      	movge	r3, #0
 80030f0:	6033      	strge	r3, [r6, #0]
 80030f2:	9f05      	ldr	r7, [sp, #20]
 80030f4:	4b9a      	ldr	r3, [pc, #616]	@ (8003360 <_dtoa_r+0x2d8>)
 80030f6:	bfbc      	itt	lt
 80030f8:	2201      	movlt	r2, #1
 80030fa:	6032      	strlt	r2, [r6, #0]
 80030fc:	43bb      	bics	r3, r7
 80030fe:	d112      	bne.n	8003126 <_dtoa_r+0x9e>
 8003100:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8003102:	f242 730f 	movw	r3, #9999	@ 0x270f
 8003106:	6013      	str	r3, [r2, #0]
 8003108:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800310c:	4323      	orrs	r3, r4
 800310e:	f000 855a 	beq.w	8003bc6 <_dtoa_r+0xb3e>
 8003112:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003114:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8003374 <_dtoa_r+0x2ec>
 8003118:	2b00      	cmp	r3, #0
 800311a:	f000 855c 	beq.w	8003bd6 <_dtoa_r+0xb4e>
 800311e:	f10a 0303 	add.w	r3, sl, #3
 8003122:	f000 bd56 	b.w	8003bd2 <_dtoa_r+0xb4a>
 8003126:	ed9d 7b04 	vldr	d7, [sp, #16]
 800312a:	2200      	movs	r2, #0
 800312c:	ec51 0b17 	vmov	r0, r1, d7
 8003130:	2300      	movs	r3, #0
 8003132:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8003136:	f7fd fccf 	bl	8000ad8 <__aeabi_dcmpeq>
 800313a:	4680      	mov	r8, r0
 800313c:	b158      	cbz	r0, 8003156 <_dtoa_r+0xce>
 800313e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8003140:	2301      	movs	r3, #1
 8003142:	6013      	str	r3, [r2, #0]
 8003144:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003146:	b113      	cbz	r3, 800314e <_dtoa_r+0xc6>
 8003148:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800314a:	4b86      	ldr	r3, [pc, #536]	@ (8003364 <_dtoa_r+0x2dc>)
 800314c:	6013      	str	r3, [r2, #0]
 800314e:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8003378 <_dtoa_r+0x2f0>
 8003152:	f000 bd40 	b.w	8003bd6 <_dtoa_r+0xb4e>
 8003156:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 800315a:	aa14      	add	r2, sp, #80	@ 0x50
 800315c:	a915      	add	r1, sp, #84	@ 0x54
 800315e:	4648      	mov	r0, r9
 8003160:	f001 fa3e 	bl	80045e0 <__d2b>
 8003164:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8003168:	9002      	str	r0, [sp, #8]
 800316a:	2e00      	cmp	r6, #0
 800316c:	d078      	beq.n	8003260 <_dtoa_r+0x1d8>
 800316e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003170:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8003174:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003178:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800317c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8003180:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8003184:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8003188:	4619      	mov	r1, r3
 800318a:	2200      	movs	r2, #0
 800318c:	4b76      	ldr	r3, [pc, #472]	@ (8003368 <_dtoa_r+0x2e0>)
 800318e:	f7fd f883 	bl	8000298 <__aeabi_dsub>
 8003192:	a36b      	add	r3, pc, #428	@ (adr r3, 8003340 <_dtoa_r+0x2b8>)
 8003194:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003198:	f7fd fa36 	bl	8000608 <__aeabi_dmul>
 800319c:	a36a      	add	r3, pc, #424	@ (adr r3, 8003348 <_dtoa_r+0x2c0>)
 800319e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031a2:	f7fd f87b 	bl	800029c <__adddf3>
 80031a6:	4604      	mov	r4, r0
 80031a8:	4630      	mov	r0, r6
 80031aa:	460d      	mov	r5, r1
 80031ac:	f7fd f9c2 	bl	8000534 <__aeabi_i2d>
 80031b0:	a367      	add	r3, pc, #412	@ (adr r3, 8003350 <_dtoa_r+0x2c8>)
 80031b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031b6:	f7fd fa27 	bl	8000608 <__aeabi_dmul>
 80031ba:	4602      	mov	r2, r0
 80031bc:	460b      	mov	r3, r1
 80031be:	4620      	mov	r0, r4
 80031c0:	4629      	mov	r1, r5
 80031c2:	f7fd f86b 	bl	800029c <__adddf3>
 80031c6:	4604      	mov	r4, r0
 80031c8:	460d      	mov	r5, r1
 80031ca:	f7fd fccd 	bl	8000b68 <__aeabi_d2iz>
 80031ce:	2200      	movs	r2, #0
 80031d0:	4607      	mov	r7, r0
 80031d2:	2300      	movs	r3, #0
 80031d4:	4620      	mov	r0, r4
 80031d6:	4629      	mov	r1, r5
 80031d8:	f7fd fc88 	bl	8000aec <__aeabi_dcmplt>
 80031dc:	b140      	cbz	r0, 80031f0 <_dtoa_r+0x168>
 80031de:	4638      	mov	r0, r7
 80031e0:	f7fd f9a8 	bl	8000534 <__aeabi_i2d>
 80031e4:	4622      	mov	r2, r4
 80031e6:	462b      	mov	r3, r5
 80031e8:	f7fd fc76 	bl	8000ad8 <__aeabi_dcmpeq>
 80031ec:	b900      	cbnz	r0, 80031f0 <_dtoa_r+0x168>
 80031ee:	3f01      	subs	r7, #1
 80031f0:	2f16      	cmp	r7, #22
 80031f2:	d852      	bhi.n	800329a <_dtoa_r+0x212>
 80031f4:	4b5d      	ldr	r3, [pc, #372]	@ (800336c <_dtoa_r+0x2e4>)
 80031f6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80031fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031fe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003202:	f7fd fc73 	bl	8000aec <__aeabi_dcmplt>
 8003206:	2800      	cmp	r0, #0
 8003208:	d049      	beq.n	800329e <_dtoa_r+0x216>
 800320a:	3f01      	subs	r7, #1
 800320c:	2300      	movs	r3, #0
 800320e:	9310      	str	r3, [sp, #64]	@ 0x40
 8003210:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003212:	1b9b      	subs	r3, r3, r6
 8003214:	1e5a      	subs	r2, r3, #1
 8003216:	bf45      	ittet	mi
 8003218:	f1c3 0301 	rsbmi	r3, r3, #1
 800321c:	9300      	strmi	r3, [sp, #0]
 800321e:	2300      	movpl	r3, #0
 8003220:	2300      	movmi	r3, #0
 8003222:	9206      	str	r2, [sp, #24]
 8003224:	bf54      	ite	pl
 8003226:	9300      	strpl	r3, [sp, #0]
 8003228:	9306      	strmi	r3, [sp, #24]
 800322a:	2f00      	cmp	r7, #0
 800322c:	db39      	blt.n	80032a2 <_dtoa_r+0x21a>
 800322e:	9b06      	ldr	r3, [sp, #24]
 8003230:	970d      	str	r7, [sp, #52]	@ 0x34
 8003232:	443b      	add	r3, r7
 8003234:	9306      	str	r3, [sp, #24]
 8003236:	2300      	movs	r3, #0
 8003238:	9308      	str	r3, [sp, #32]
 800323a:	9b07      	ldr	r3, [sp, #28]
 800323c:	2b09      	cmp	r3, #9
 800323e:	d863      	bhi.n	8003308 <_dtoa_r+0x280>
 8003240:	2b05      	cmp	r3, #5
 8003242:	bfc4      	itt	gt
 8003244:	3b04      	subgt	r3, #4
 8003246:	9307      	strgt	r3, [sp, #28]
 8003248:	9b07      	ldr	r3, [sp, #28]
 800324a:	f1a3 0302 	sub.w	r3, r3, #2
 800324e:	bfcc      	ite	gt
 8003250:	2400      	movgt	r4, #0
 8003252:	2401      	movle	r4, #1
 8003254:	2b03      	cmp	r3, #3
 8003256:	d863      	bhi.n	8003320 <_dtoa_r+0x298>
 8003258:	e8df f003 	tbb	[pc, r3]
 800325c:	2b375452 	.word	0x2b375452
 8003260:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8003264:	441e      	add	r6, r3
 8003266:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800326a:	2b20      	cmp	r3, #32
 800326c:	bfc1      	itttt	gt
 800326e:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8003272:	409f      	lslgt	r7, r3
 8003274:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8003278:	fa24 f303 	lsrgt.w	r3, r4, r3
 800327c:	bfd6      	itet	le
 800327e:	f1c3 0320 	rsble	r3, r3, #32
 8003282:	ea47 0003 	orrgt.w	r0, r7, r3
 8003286:	fa04 f003 	lslle.w	r0, r4, r3
 800328a:	f7fd f943 	bl	8000514 <__aeabi_ui2d>
 800328e:	2201      	movs	r2, #1
 8003290:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8003294:	3e01      	subs	r6, #1
 8003296:	9212      	str	r2, [sp, #72]	@ 0x48
 8003298:	e776      	b.n	8003188 <_dtoa_r+0x100>
 800329a:	2301      	movs	r3, #1
 800329c:	e7b7      	b.n	800320e <_dtoa_r+0x186>
 800329e:	9010      	str	r0, [sp, #64]	@ 0x40
 80032a0:	e7b6      	b.n	8003210 <_dtoa_r+0x188>
 80032a2:	9b00      	ldr	r3, [sp, #0]
 80032a4:	1bdb      	subs	r3, r3, r7
 80032a6:	9300      	str	r3, [sp, #0]
 80032a8:	427b      	negs	r3, r7
 80032aa:	9308      	str	r3, [sp, #32]
 80032ac:	2300      	movs	r3, #0
 80032ae:	930d      	str	r3, [sp, #52]	@ 0x34
 80032b0:	e7c3      	b.n	800323a <_dtoa_r+0x1b2>
 80032b2:	2301      	movs	r3, #1
 80032b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80032b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80032b8:	eb07 0b03 	add.w	fp, r7, r3
 80032bc:	f10b 0301 	add.w	r3, fp, #1
 80032c0:	2b01      	cmp	r3, #1
 80032c2:	9303      	str	r3, [sp, #12]
 80032c4:	bfb8      	it	lt
 80032c6:	2301      	movlt	r3, #1
 80032c8:	e006      	b.n	80032d8 <_dtoa_r+0x250>
 80032ca:	2301      	movs	r3, #1
 80032cc:	9309      	str	r3, [sp, #36]	@ 0x24
 80032ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80032d0:	2b00      	cmp	r3, #0
 80032d2:	dd28      	ble.n	8003326 <_dtoa_r+0x29e>
 80032d4:	469b      	mov	fp, r3
 80032d6:	9303      	str	r3, [sp, #12]
 80032d8:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80032dc:	2100      	movs	r1, #0
 80032de:	2204      	movs	r2, #4
 80032e0:	f102 0514 	add.w	r5, r2, #20
 80032e4:	429d      	cmp	r5, r3
 80032e6:	d926      	bls.n	8003336 <_dtoa_r+0x2ae>
 80032e8:	6041      	str	r1, [r0, #4]
 80032ea:	4648      	mov	r0, r9
 80032ec:	f000 fd9c 	bl	8003e28 <_Balloc>
 80032f0:	4682      	mov	sl, r0
 80032f2:	2800      	cmp	r0, #0
 80032f4:	d142      	bne.n	800337c <_dtoa_r+0x2f4>
 80032f6:	4b1e      	ldr	r3, [pc, #120]	@ (8003370 <_dtoa_r+0x2e8>)
 80032f8:	4602      	mov	r2, r0
 80032fa:	f240 11af 	movw	r1, #431	@ 0x1af
 80032fe:	e6da      	b.n	80030b6 <_dtoa_r+0x2e>
 8003300:	2300      	movs	r3, #0
 8003302:	e7e3      	b.n	80032cc <_dtoa_r+0x244>
 8003304:	2300      	movs	r3, #0
 8003306:	e7d5      	b.n	80032b4 <_dtoa_r+0x22c>
 8003308:	2401      	movs	r4, #1
 800330a:	2300      	movs	r3, #0
 800330c:	9307      	str	r3, [sp, #28]
 800330e:	9409      	str	r4, [sp, #36]	@ 0x24
 8003310:	f04f 3bff 	mov.w	fp, #4294967295
 8003314:	2200      	movs	r2, #0
 8003316:	f8cd b00c 	str.w	fp, [sp, #12]
 800331a:	2312      	movs	r3, #18
 800331c:	920c      	str	r2, [sp, #48]	@ 0x30
 800331e:	e7db      	b.n	80032d8 <_dtoa_r+0x250>
 8003320:	2301      	movs	r3, #1
 8003322:	9309      	str	r3, [sp, #36]	@ 0x24
 8003324:	e7f4      	b.n	8003310 <_dtoa_r+0x288>
 8003326:	f04f 0b01 	mov.w	fp, #1
 800332a:	f8cd b00c 	str.w	fp, [sp, #12]
 800332e:	465b      	mov	r3, fp
 8003330:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8003334:	e7d0      	b.n	80032d8 <_dtoa_r+0x250>
 8003336:	3101      	adds	r1, #1
 8003338:	0052      	lsls	r2, r2, #1
 800333a:	e7d1      	b.n	80032e0 <_dtoa_r+0x258>
 800333c:	f3af 8000 	nop.w
 8003340:	636f4361 	.word	0x636f4361
 8003344:	3fd287a7 	.word	0x3fd287a7
 8003348:	8b60c8b3 	.word	0x8b60c8b3
 800334c:	3fc68a28 	.word	0x3fc68a28
 8003350:	509f79fb 	.word	0x509f79fb
 8003354:	3fd34413 	.word	0x3fd34413
 8003358:	08006b9a 	.word	0x08006b9a
 800335c:	08006bb1 	.word	0x08006bb1
 8003360:	7ff00000 	.word	0x7ff00000
 8003364:	08006b65 	.word	0x08006b65
 8003368:	3ff80000 	.word	0x3ff80000
 800336c:	08006d60 	.word	0x08006d60
 8003370:	08006c09 	.word	0x08006c09
 8003374:	08006b96 	.word	0x08006b96
 8003378:	08006b64 	.word	0x08006b64
 800337c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8003380:	6018      	str	r0, [r3, #0]
 8003382:	9b03      	ldr	r3, [sp, #12]
 8003384:	2b0e      	cmp	r3, #14
 8003386:	f200 80a1 	bhi.w	80034cc <_dtoa_r+0x444>
 800338a:	2c00      	cmp	r4, #0
 800338c:	f000 809e 	beq.w	80034cc <_dtoa_r+0x444>
 8003390:	2f00      	cmp	r7, #0
 8003392:	dd33      	ble.n	80033fc <_dtoa_r+0x374>
 8003394:	4b9c      	ldr	r3, [pc, #624]	@ (8003608 <_dtoa_r+0x580>)
 8003396:	f007 020f 	and.w	r2, r7, #15
 800339a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800339e:	ed93 7b00 	vldr	d7, [r3]
 80033a2:	05f8      	lsls	r0, r7, #23
 80033a4:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 80033a8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80033ac:	d516      	bpl.n	80033dc <_dtoa_r+0x354>
 80033ae:	4b97      	ldr	r3, [pc, #604]	@ (800360c <_dtoa_r+0x584>)
 80033b0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80033b4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80033b8:	f7fd fa50 	bl	800085c <__aeabi_ddiv>
 80033bc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80033c0:	f004 040f 	and.w	r4, r4, #15
 80033c4:	2603      	movs	r6, #3
 80033c6:	4d91      	ldr	r5, [pc, #580]	@ (800360c <_dtoa_r+0x584>)
 80033c8:	b954      	cbnz	r4, 80033e0 <_dtoa_r+0x358>
 80033ca:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80033ce:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80033d2:	f7fd fa43 	bl	800085c <__aeabi_ddiv>
 80033d6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80033da:	e028      	b.n	800342e <_dtoa_r+0x3a6>
 80033dc:	2602      	movs	r6, #2
 80033de:	e7f2      	b.n	80033c6 <_dtoa_r+0x33e>
 80033e0:	07e1      	lsls	r1, r4, #31
 80033e2:	d508      	bpl.n	80033f6 <_dtoa_r+0x36e>
 80033e4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80033e8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80033ec:	f7fd f90c 	bl	8000608 <__aeabi_dmul>
 80033f0:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80033f4:	3601      	adds	r6, #1
 80033f6:	1064      	asrs	r4, r4, #1
 80033f8:	3508      	adds	r5, #8
 80033fa:	e7e5      	b.n	80033c8 <_dtoa_r+0x340>
 80033fc:	f000 80af 	beq.w	800355e <_dtoa_r+0x4d6>
 8003400:	427c      	negs	r4, r7
 8003402:	4b81      	ldr	r3, [pc, #516]	@ (8003608 <_dtoa_r+0x580>)
 8003404:	4d81      	ldr	r5, [pc, #516]	@ (800360c <_dtoa_r+0x584>)
 8003406:	f004 020f 	and.w	r2, r4, #15
 800340a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800340e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003412:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8003416:	f7fd f8f7 	bl	8000608 <__aeabi_dmul>
 800341a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800341e:	1124      	asrs	r4, r4, #4
 8003420:	2300      	movs	r3, #0
 8003422:	2602      	movs	r6, #2
 8003424:	2c00      	cmp	r4, #0
 8003426:	f040 808f 	bne.w	8003548 <_dtoa_r+0x4c0>
 800342a:	2b00      	cmp	r3, #0
 800342c:	d1d3      	bne.n	80033d6 <_dtoa_r+0x34e>
 800342e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003430:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8003434:	2b00      	cmp	r3, #0
 8003436:	f000 8094 	beq.w	8003562 <_dtoa_r+0x4da>
 800343a:	4b75      	ldr	r3, [pc, #468]	@ (8003610 <_dtoa_r+0x588>)
 800343c:	2200      	movs	r2, #0
 800343e:	4620      	mov	r0, r4
 8003440:	4629      	mov	r1, r5
 8003442:	f7fd fb53 	bl	8000aec <__aeabi_dcmplt>
 8003446:	2800      	cmp	r0, #0
 8003448:	f000 808b 	beq.w	8003562 <_dtoa_r+0x4da>
 800344c:	9b03      	ldr	r3, [sp, #12]
 800344e:	2b00      	cmp	r3, #0
 8003450:	f000 8087 	beq.w	8003562 <_dtoa_r+0x4da>
 8003454:	f1bb 0f00 	cmp.w	fp, #0
 8003458:	dd34      	ble.n	80034c4 <_dtoa_r+0x43c>
 800345a:	4620      	mov	r0, r4
 800345c:	4b6d      	ldr	r3, [pc, #436]	@ (8003614 <_dtoa_r+0x58c>)
 800345e:	2200      	movs	r2, #0
 8003460:	4629      	mov	r1, r5
 8003462:	f7fd f8d1 	bl	8000608 <__aeabi_dmul>
 8003466:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800346a:	f107 38ff 	add.w	r8, r7, #4294967295
 800346e:	3601      	adds	r6, #1
 8003470:	465c      	mov	r4, fp
 8003472:	4630      	mov	r0, r6
 8003474:	f7fd f85e 	bl	8000534 <__aeabi_i2d>
 8003478:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800347c:	f7fd f8c4 	bl	8000608 <__aeabi_dmul>
 8003480:	4b65      	ldr	r3, [pc, #404]	@ (8003618 <_dtoa_r+0x590>)
 8003482:	2200      	movs	r2, #0
 8003484:	f7fc ff0a 	bl	800029c <__adddf3>
 8003488:	4605      	mov	r5, r0
 800348a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800348e:	2c00      	cmp	r4, #0
 8003490:	d16a      	bne.n	8003568 <_dtoa_r+0x4e0>
 8003492:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003496:	4b61      	ldr	r3, [pc, #388]	@ (800361c <_dtoa_r+0x594>)
 8003498:	2200      	movs	r2, #0
 800349a:	f7fc fefd 	bl	8000298 <__aeabi_dsub>
 800349e:	4602      	mov	r2, r0
 80034a0:	460b      	mov	r3, r1
 80034a2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80034a6:	462a      	mov	r2, r5
 80034a8:	4633      	mov	r3, r6
 80034aa:	f7fd fb3d 	bl	8000b28 <__aeabi_dcmpgt>
 80034ae:	2800      	cmp	r0, #0
 80034b0:	f040 8298 	bne.w	80039e4 <_dtoa_r+0x95c>
 80034b4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80034b8:	462a      	mov	r2, r5
 80034ba:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80034be:	f7fd fb15 	bl	8000aec <__aeabi_dcmplt>
 80034c2:	bb38      	cbnz	r0, 8003514 <_dtoa_r+0x48c>
 80034c4:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 80034c8:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80034cc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80034ce:	2b00      	cmp	r3, #0
 80034d0:	f2c0 8157 	blt.w	8003782 <_dtoa_r+0x6fa>
 80034d4:	2f0e      	cmp	r7, #14
 80034d6:	f300 8154 	bgt.w	8003782 <_dtoa_r+0x6fa>
 80034da:	4b4b      	ldr	r3, [pc, #300]	@ (8003608 <_dtoa_r+0x580>)
 80034dc:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80034e0:	ed93 7b00 	vldr	d7, [r3]
 80034e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	ed8d 7b00 	vstr	d7, [sp]
 80034ec:	f280 80e5 	bge.w	80036ba <_dtoa_r+0x632>
 80034f0:	9b03      	ldr	r3, [sp, #12]
 80034f2:	2b00      	cmp	r3, #0
 80034f4:	f300 80e1 	bgt.w	80036ba <_dtoa_r+0x632>
 80034f8:	d10c      	bne.n	8003514 <_dtoa_r+0x48c>
 80034fa:	4b48      	ldr	r3, [pc, #288]	@ (800361c <_dtoa_r+0x594>)
 80034fc:	2200      	movs	r2, #0
 80034fe:	ec51 0b17 	vmov	r0, r1, d7
 8003502:	f7fd f881 	bl	8000608 <__aeabi_dmul>
 8003506:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800350a:	f7fd fb03 	bl	8000b14 <__aeabi_dcmpge>
 800350e:	2800      	cmp	r0, #0
 8003510:	f000 8266 	beq.w	80039e0 <_dtoa_r+0x958>
 8003514:	2400      	movs	r4, #0
 8003516:	4625      	mov	r5, r4
 8003518:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800351a:	4656      	mov	r6, sl
 800351c:	ea6f 0803 	mvn.w	r8, r3
 8003520:	2700      	movs	r7, #0
 8003522:	4621      	mov	r1, r4
 8003524:	4648      	mov	r0, r9
 8003526:	f000 fcbf 	bl	8003ea8 <_Bfree>
 800352a:	2d00      	cmp	r5, #0
 800352c:	f000 80bd 	beq.w	80036aa <_dtoa_r+0x622>
 8003530:	b12f      	cbz	r7, 800353e <_dtoa_r+0x4b6>
 8003532:	42af      	cmp	r7, r5
 8003534:	d003      	beq.n	800353e <_dtoa_r+0x4b6>
 8003536:	4639      	mov	r1, r7
 8003538:	4648      	mov	r0, r9
 800353a:	f000 fcb5 	bl	8003ea8 <_Bfree>
 800353e:	4629      	mov	r1, r5
 8003540:	4648      	mov	r0, r9
 8003542:	f000 fcb1 	bl	8003ea8 <_Bfree>
 8003546:	e0b0      	b.n	80036aa <_dtoa_r+0x622>
 8003548:	07e2      	lsls	r2, r4, #31
 800354a:	d505      	bpl.n	8003558 <_dtoa_r+0x4d0>
 800354c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003550:	f7fd f85a 	bl	8000608 <__aeabi_dmul>
 8003554:	3601      	adds	r6, #1
 8003556:	2301      	movs	r3, #1
 8003558:	1064      	asrs	r4, r4, #1
 800355a:	3508      	adds	r5, #8
 800355c:	e762      	b.n	8003424 <_dtoa_r+0x39c>
 800355e:	2602      	movs	r6, #2
 8003560:	e765      	b.n	800342e <_dtoa_r+0x3a6>
 8003562:	9c03      	ldr	r4, [sp, #12]
 8003564:	46b8      	mov	r8, r7
 8003566:	e784      	b.n	8003472 <_dtoa_r+0x3ea>
 8003568:	4b27      	ldr	r3, [pc, #156]	@ (8003608 <_dtoa_r+0x580>)
 800356a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800356c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003570:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003574:	4454      	add	r4, sl
 8003576:	2900      	cmp	r1, #0
 8003578:	d054      	beq.n	8003624 <_dtoa_r+0x59c>
 800357a:	4929      	ldr	r1, [pc, #164]	@ (8003620 <_dtoa_r+0x598>)
 800357c:	2000      	movs	r0, #0
 800357e:	f7fd f96d 	bl	800085c <__aeabi_ddiv>
 8003582:	4633      	mov	r3, r6
 8003584:	462a      	mov	r2, r5
 8003586:	f7fc fe87 	bl	8000298 <__aeabi_dsub>
 800358a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800358e:	4656      	mov	r6, sl
 8003590:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003594:	f7fd fae8 	bl	8000b68 <__aeabi_d2iz>
 8003598:	4605      	mov	r5, r0
 800359a:	f7fc ffcb 	bl	8000534 <__aeabi_i2d>
 800359e:	4602      	mov	r2, r0
 80035a0:	460b      	mov	r3, r1
 80035a2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80035a6:	f7fc fe77 	bl	8000298 <__aeabi_dsub>
 80035aa:	3530      	adds	r5, #48	@ 0x30
 80035ac:	4602      	mov	r2, r0
 80035ae:	460b      	mov	r3, r1
 80035b0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80035b4:	f806 5b01 	strb.w	r5, [r6], #1
 80035b8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80035bc:	f7fd fa96 	bl	8000aec <__aeabi_dcmplt>
 80035c0:	2800      	cmp	r0, #0
 80035c2:	d172      	bne.n	80036aa <_dtoa_r+0x622>
 80035c4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80035c8:	4911      	ldr	r1, [pc, #68]	@ (8003610 <_dtoa_r+0x588>)
 80035ca:	2000      	movs	r0, #0
 80035cc:	f7fc fe64 	bl	8000298 <__aeabi_dsub>
 80035d0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80035d4:	f7fd fa8a 	bl	8000aec <__aeabi_dcmplt>
 80035d8:	2800      	cmp	r0, #0
 80035da:	f040 80b4 	bne.w	8003746 <_dtoa_r+0x6be>
 80035de:	42a6      	cmp	r6, r4
 80035e0:	f43f af70 	beq.w	80034c4 <_dtoa_r+0x43c>
 80035e4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80035e8:	4b0a      	ldr	r3, [pc, #40]	@ (8003614 <_dtoa_r+0x58c>)
 80035ea:	2200      	movs	r2, #0
 80035ec:	f7fd f80c 	bl	8000608 <__aeabi_dmul>
 80035f0:	4b08      	ldr	r3, [pc, #32]	@ (8003614 <_dtoa_r+0x58c>)
 80035f2:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80035f6:	2200      	movs	r2, #0
 80035f8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80035fc:	f7fd f804 	bl	8000608 <__aeabi_dmul>
 8003600:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003604:	e7c4      	b.n	8003590 <_dtoa_r+0x508>
 8003606:	bf00      	nop
 8003608:	08006d60 	.word	0x08006d60
 800360c:	08006d38 	.word	0x08006d38
 8003610:	3ff00000 	.word	0x3ff00000
 8003614:	40240000 	.word	0x40240000
 8003618:	401c0000 	.word	0x401c0000
 800361c:	40140000 	.word	0x40140000
 8003620:	3fe00000 	.word	0x3fe00000
 8003624:	4631      	mov	r1, r6
 8003626:	4628      	mov	r0, r5
 8003628:	f7fc ffee 	bl	8000608 <__aeabi_dmul>
 800362c:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8003630:	9413      	str	r4, [sp, #76]	@ 0x4c
 8003632:	4656      	mov	r6, sl
 8003634:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003638:	f7fd fa96 	bl	8000b68 <__aeabi_d2iz>
 800363c:	4605      	mov	r5, r0
 800363e:	f7fc ff79 	bl	8000534 <__aeabi_i2d>
 8003642:	4602      	mov	r2, r0
 8003644:	460b      	mov	r3, r1
 8003646:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800364a:	f7fc fe25 	bl	8000298 <__aeabi_dsub>
 800364e:	3530      	adds	r5, #48	@ 0x30
 8003650:	f806 5b01 	strb.w	r5, [r6], #1
 8003654:	4602      	mov	r2, r0
 8003656:	460b      	mov	r3, r1
 8003658:	42a6      	cmp	r6, r4
 800365a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800365e:	f04f 0200 	mov.w	r2, #0
 8003662:	d124      	bne.n	80036ae <_dtoa_r+0x626>
 8003664:	4baf      	ldr	r3, [pc, #700]	@ (8003924 <_dtoa_r+0x89c>)
 8003666:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800366a:	f7fc fe17 	bl	800029c <__adddf3>
 800366e:	4602      	mov	r2, r0
 8003670:	460b      	mov	r3, r1
 8003672:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003676:	f7fd fa57 	bl	8000b28 <__aeabi_dcmpgt>
 800367a:	2800      	cmp	r0, #0
 800367c:	d163      	bne.n	8003746 <_dtoa_r+0x6be>
 800367e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8003682:	49a8      	ldr	r1, [pc, #672]	@ (8003924 <_dtoa_r+0x89c>)
 8003684:	2000      	movs	r0, #0
 8003686:	f7fc fe07 	bl	8000298 <__aeabi_dsub>
 800368a:	4602      	mov	r2, r0
 800368c:	460b      	mov	r3, r1
 800368e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003692:	f7fd fa2b 	bl	8000aec <__aeabi_dcmplt>
 8003696:	2800      	cmp	r0, #0
 8003698:	f43f af14 	beq.w	80034c4 <_dtoa_r+0x43c>
 800369c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800369e:	1e73      	subs	r3, r6, #1
 80036a0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80036a2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80036a6:	2b30      	cmp	r3, #48	@ 0x30
 80036a8:	d0f8      	beq.n	800369c <_dtoa_r+0x614>
 80036aa:	4647      	mov	r7, r8
 80036ac:	e03b      	b.n	8003726 <_dtoa_r+0x69e>
 80036ae:	4b9e      	ldr	r3, [pc, #632]	@ (8003928 <_dtoa_r+0x8a0>)
 80036b0:	f7fc ffaa 	bl	8000608 <__aeabi_dmul>
 80036b4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80036b8:	e7bc      	b.n	8003634 <_dtoa_r+0x5ac>
 80036ba:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80036be:	4656      	mov	r6, sl
 80036c0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80036c4:	4620      	mov	r0, r4
 80036c6:	4629      	mov	r1, r5
 80036c8:	f7fd f8c8 	bl	800085c <__aeabi_ddiv>
 80036cc:	f7fd fa4c 	bl	8000b68 <__aeabi_d2iz>
 80036d0:	4680      	mov	r8, r0
 80036d2:	f7fc ff2f 	bl	8000534 <__aeabi_i2d>
 80036d6:	e9dd 2300 	ldrd	r2, r3, [sp]
 80036da:	f7fc ff95 	bl	8000608 <__aeabi_dmul>
 80036de:	4602      	mov	r2, r0
 80036e0:	460b      	mov	r3, r1
 80036e2:	4620      	mov	r0, r4
 80036e4:	4629      	mov	r1, r5
 80036e6:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80036ea:	f7fc fdd5 	bl	8000298 <__aeabi_dsub>
 80036ee:	f806 4b01 	strb.w	r4, [r6], #1
 80036f2:	9d03      	ldr	r5, [sp, #12]
 80036f4:	eba6 040a 	sub.w	r4, r6, sl
 80036f8:	42a5      	cmp	r5, r4
 80036fa:	4602      	mov	r2, r0
 80036fc:	460b      	mov	r3, r1
 80036fe:	d133      	bne.n	8003768 <_dtoa_r+0x6e0>
 8003700:	f7fc fdcc 	bl	800029c <__adddf3>
 8003704:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003708:	4604      	mov	r4, r0
 800370a:	460d      	mov	r5, r1
 800370c:	f7fd fa0c 	bl	8000b28 <__aeabi_dcmpgt>
 8003710:	b9c0      	cbnz	r0, 8003744 <_dtoa_r+0x6bc>
 8003712:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003716:	4620      	mov	r0, r4
 8003718:	4629      	mov	r1, r5
 800371a:	f7fd f9dd 	bl	8000ad8 <__aeabi_dcmpeq>
 800371e:	b110      	cbz	r0, 8003726 <_dtoa_r+0x69e>
 8003720:	f018 0f01 	tst.w	r8, #1
 8003724:	d10e      	bne.n	8003744 <_dtoa_r+0x6bc>
 8003726:	9902      	ldr	r1, [sp, #8]
 8003728:	4648      	mov	r0, r9
 800372a:	f000 fbbd 	bl	8003ea8 <_Bfree>
 800372e:	2300      	movs	r3, #0
 8003730:	7033      	strb	r3, [r6, #0]
 8003732:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8003734:	3701      	adds	r7, #1
 8003736:	601f      	str	r7, [r3, #0]
 8003738:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800373a:	2b00      	cmp	r3, #0
 800373c:	f000 824b 	beq.w	8003bd6 <_dtoa_r+0xb4e>
 8003740:	601e      	str	r6, [r3, #0]
 8003742:	e248      	b.n	8003bd6 <_dtoa_r+0xb4e>
 8003744:	46b8      	mov	r8, r7
 8003746:	4633      	mov	r3, r6
 8003748:	461e      	mov	r6, r3
 800374a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800374e:	2a39      	cmp	r2, #57	@ 0x39
 8003750:	d106      	bne.n	8003760 <_dtoa_r+0x6d8>
 8003752:	459a      	cmp	sl, r3
 8003754:	d1f8      	bne.n	8003748 <_dtoa_r+0x6c0>
 8003756:	2230      	movs	r2, #48	@ 0x30
 8003758:	f108 0801 	add.w	r8, r8, #1
 800375c:	f88a 2000 	strb.w	r2, [sl]
 8003760:	781a      	ldrb	r2, [r3, #0]
 8003762:	3201      	adds	r2, #1
 8003764:	701a      	strb	r2, [r3, #0]
 8003766:	e7a0      	b.n	80036aa <_dtoa_r+0x622>
 8003768:	4b6f      	ldr	r3, [pc, #444]	@ (8003928 <_dtoa_r+0x8a0>)
 800376a:	2200      	movs	r2, #0
 800376c:	f7fc ff4c 	bl	8000608 <__aeabi_dmul>
 8003770:	2200      	movs	r2, #0
 8003772:	2300      	movs	r3, #0
 8003774:	4604      	mov	r4, r0
 8003776:	460d      	mov	r5, r1
 8003778:	f7fd f9ae 	bl	8000ad8 <__aeabi_dcmpeq>
 800377c:	2800      	cmp	r0, #0
 800377e:	d09f      	beq.n	80036c0 <_dtoa_r+0x638>
 8003780:	e7d1      	b.n	8003726 <_dtoa_r+0x69e>
 8003782:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003784:	2a00      	cmp	r2, #0
 8003786:	f000 80ea 	beq.w	800395e <_dtoa_r+0x8d6>
 800378a:	9a07      	ldr	r2, [sp, #28]
 800378c:	2a01      	cmp	r2, #1
 800378e:	f300 80cd 	bgt.w	800392c <_dtoa_r+0x8a4>
 8003792:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003794:	2a00      	cmp	r2, #0
 8003796:	f000 80c1 	beq.w	800391c <_dtoa_r+0x894>
 800379a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800379e:	9c08      	ldr	r4, [sp, #32]
 80037a0:	9e00      	ldr	r6, [sp, #0]
 80037a2:	9a00      	ldr	r2, [sp, #0]
 80037a4:	441a      	add	r2, r3
 80037a6:	9200      	str	r2, [sp, #0]
 80037a8:	9a06      	ldr	r2, [sp, #24]
 80037aa:	2101      	movs	r1, #1
 80037ac:	441a      	add	r2, r3
 80037ae:	4648      	mov	r0, r9
 80037b0:	9206      	str	r2, [sp, #24]
 80037b2:	f000 fc77 	bl	80040a4 <__i2b>
 80037b6:	4605      	mov	r5, r0
 80037b8:	b166      	cbz	r6, 80037d4 <_dtoa_r+0x74c>
 80037ba:	9b06      	ldr	r3, [sp, #24]
 80037bc:	2b00      	cmp	r3, #0
 80037be:	dd09      	ble.n	80037d4 <_dtoa_r+0x74c>
 80037c0:	42b3      	cmp	r3, r6
 80037c2:	9a00      	ldr	r2, [sp, #0]
 80037c4:	bfa8      	it	ge
 80037c6:	4633      	movge	r3, r6
 80037c8:	1ad2      	subs	r2, r2, r3
 80037ca:	9200      	str	r2, [sp, #0]
 80037cc:	9a06      	ldr	r2, [sp, #24]
 80037ce:	1af6      	subs	r6, r6, r3
 80037d0:	1ad3      	subs	r3, r2, r3
 80037d2:	9306      	str	r3, [sp, #24]
 80037d4:	9b08      	ldr	r3, [sp, #32]
 80037d6:	b30b      	cbz	r3, 800381c <_dtoa_r+0x794>
 80037d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80037da:	2b00      	cmp	r3, #0
 80037dc:	f000 80c6 	beq.w	800396c <_dtoa_r+0x8e4>
 80037e0:	2c00      	cmp	r4, #0
 80037e2:	f000 80c0 	beq.w	8003966 <_dtoa_r+0x8de>
 80037e6:	4629      	mov	r1, r5
 80037e8:	4622      	mov	r2, r4
 80037ea:	4648      	mov	r0, r9
 80037ec:	f000 fd12 	bl	8004214 <__pow5mult>
 80037f0:	9a02      	ldr	r2, [sp, #8]
 80037f2:	4601      	mov	r1, r0
 80037f4:	4605      	mov	r5, r0
 80037f6:	4648      	mov	r0, r9
 80037f8:	f000 fc6a 	bl	80040d0 <__multiply>
 80037fc:	9902      	ldr	r1, [sp, #8]
 80037fe:	4680      	mov	r8, r0
 8003800:	4648      	mov	r0, r9
 8003802:	f000 fb51 	bl	8003ea8 <_Bfree>
 8003806:	9b08      	ldr	r3, [sp, #32]
 8003808:	1b1b      	subs	r3, r3, r4
 800380a:	9308      	str	r3, [sp, #32]
 800380c:	f000 80b1 	beq.w	8003972 <_dtoa_r+0x8ea>
 8003810:	9a08      	ldr	r2, [sp, #32]
 8003812:	4641      	mov	r1, r8
 8003814:	4648      	mov	r0, r9
 8003816:	f000 fcfd 	bl	8004214 <__pow5mult>
 800381a:	9002      	str	r0, [sp, #8]
 800381c:	2101      	movs	r1, #1
 800381e:	4648      	mov	r0, r9
 8003820:	f000 fc40 	bl	80040a4 <__i2b>
 8003824:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003826:	4604      	mov	r4, r0
 8003828:	2b00      	cmp	r3, #0
 800382a:	f000 81d8 	beq.w	8003bde <_dtoa_r+0xb56>
 800382e:	461a      	mov	r2, r3
 8003830:	4601      	mov	r1, r0
 8003832:	4648      	mov	r0, r9
 8003834:	f000 fcee 	bl	8004214 <__pow5mult>
 8003838:	9b07      	ldr	r3, [sp, #28]
 800383a:	2b01      	cmp	r3, #1
 800383c:	4604      	mov	r4, r0
 800383e:	f300 809f 	bgt.w	8003980 <_dtoa_r+0x8f8>
 8003842:	9b04      	ldr	r3, [sp, #16]
 8003844:	2b00      	cmp	r3, #0
 8003846:	f040 8097 	bne.w	8003978 <_dtoa_r+0x8f0>
 800384a:	9b05      	ldr	r3, [sp, #20]
 800384c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003850:	2b00      	cmp	r3, #0
 8003852:	f040 8093 	bne.w	800397c <_dtoa_r+0x8f4>
 8003856:	9b05      	ldr	r3, [sp, #20]
 8003858:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800385c:	0d1b      	lsrs	r3, r3, #20
 800385e:	051b      	lsls	r3, r3, #20
 8003860:	b133      	cbz	r3, 8003870 <_dtoa_r+0x7e8>
 8003862:	9b00      	ldr	r3, [sp, #0]
 8003864:	3301      	adds	r3, #1
 8003866:	9300      	str	r3, [sp, #0]
 8003868:	9b06      	ldr	r3, [sp, #24]
 800386a:	3301      	adds	r3, #1
 800386c:	9306      	str	r3, [sp, #24]
 800386e:	2301      	movs	r3, #1
 8003870:	9308      	str	r3, [sp, #32]
 8003872:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003874:	2b00      	cmp	r3, #0
 8003876:	f000 81b8 	beq.w	8003bea <_dtoa_r+0xb62>
 800387a:	6923      	ldr	r3, [r4, #16]
 800387c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003880:	6918      	ldr	r0, [r3, #16]
 8003882:	f000 fbc3 	bl	800400c <__hi0bits>
 8003886:	f1c0 0020 	rsb	r0, r0, #32
 800388a:	9b06      	ldr	r3, [sp, #24]
 800388c:	4418      	add	r0, r3
 800388e:	f010 001f 	ands.w	r0, r0, #31
 8003892:	f000 8082 	beq.w	800399a <_dtoa_r+0x912>
 8003896:	f1c0 0320 	rsb	r3, r0, #32
 800389a:	2b04      	cmp	r3, #4
 800389c:	dd73      	ble.n	8003986 <_dtoa_r+0x8fe>
 800389e:	9b00      	ldr	r3, [sp, #0]
 80038a0:	f1c0 001c 	rsb	r0, r0, #28
 80038a4:	4403      	add	r3, r0
 80038a6:	9300      	str	r3, [sp, #0]
 80038a8:	9b06      	ldr	r3, [sp, #24]
 80038aa:	4403      	add	r3, r0
 80038ac:	4406      	add	r6, r0
 80038ae:	9306      	str	r3, [sp, #24]
 80038b0:	9b00      	ldr	r3, [sp, #0]
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	dd05      	ble.n	80038c2 <_dtoa_r+0x83a>
 80038b6:	9902      	ldr	r1, [sp, #8]
 80038b8:	461a      	mov	r2, r3
 80038ba:	4648      	mov	r0, r9
 80038bc:	f000 fd04 	bl	80042c8 <__lshift>
 80038c0:	9002      	str	r0, [sp, #8]
 80038c2:	9b06      	ldr	r3, [sp, #24]
 80038c4:	2b00      	cmp	r3, #0
 80038c6:	dd05      	ble.n	80038d4 <_dtoa_r+0x84c>
 80038c8:	4621      	mov	r1, r4
 80038ca:	461a      	mov	r2, r3
 80038cc:	4648      	mov	r0, r9
 80038ce:	f000 fcfb 	bl	80042c8 <__lshift>
 80038d2:	4604      	mov	r4, r0
 80038d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80038d6:	2b00      	cmp	r3, #0
 80038d8:	d061      	beq.n	800399e <_dtoa_r+0x916>
 80038da:	9802      	ldr	r0, [sp, #8]
 80038dc:	4621      	mov	r1, r4
 80038de:	f000 fd5f 	bl	80043a0 <__mcmp>
 80038e2:	2800      	cmp	r0, #0
 80038e4:	da5b      	bge.n	800399e <_dtoa_r+0x916>
 80038e6:	2300      	movs	r3, #0
 80038e8:	9902      	ldr	r1, [sp, #8]
 80038ea:	220a      	movs	r2, #10
 80038ec:	4648      	mov	r0, r9
 80038ee:	f000 fafd 	bl	8003eec <__multadd>
 80038f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80038f4:	9002      	str	r0, [sp, #8]
 80038f6:	f107 38ff 	add.w	r8, r7, #4294967295
 80038fa:	2b00      	cmp	r3, #0
 80038fc:	f000 8177 	beq.w	8003bee <_dtoa_r+0xb66>
 8003900:	4629      	mov	r1, r5
 8003902:	2300      	movs	r3, #0
 8003904:	220a      	movs	r2, #10
 8003906:	4648      	mov	r0, r9
 8003908:	f000 faf0 	bl	8003eec <__multadd>
 800390c:	f1bb 0f00 	cmp.w	fp, #0
 8003910:	4605      	mov	r5, r0
 8003912:	dc6f      	bgt.n	80039f4 <_dtoa_r+0x96c>
 8003914:	9b07      	ldr	r3, [sp, #28]
 8003916:	2b02      	cmp	r3, #2
 8003918:	dc49      	bgt.n	80039ae <_dtoa_r+0x926>
 800391a:	e06b      	b.n	80039f4 <_dtoa_r+0x96c>
 800391c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800391e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003922:	e73c      	b.n	800379e <_dtoa_r+0x716>
 8003924:	3fe00000 	.word	0x3fe00000
 8003928:	40240000 	.word	0x40240000
 800392c:	9b03      	ldr	r3, [sp, #12]
 800392e:	1e5c      	subs	r4, r3, #1
 8003930:	9b08      	ldr	r3, [sp, #32]
 8003932:	42a3      	cmp	r3, r4
 8003934:	db09      	blt.n	800394a <_dtoa_r+0x8c2>
 8003936:	1b1c      	subs	r4, r3, r4
 8003938:	9b03      	ldr	r3, [sp, #12]
 800393a:	2b00      	cmp	r3, #0
 800393c:	f6bf af30 	bge.w	80037a0 <_dtoa_r+0x718>
 8003940:	9b00      	ldr	r3, [sp, #0]
 8003942:	9a03      	ldr	r2, [sp, #12]
 8003944:	1a9e      	subs	r6, r3, r2
 8003946:	2300      	movs	r3, #0
 8003948:	e72b      	b.n	80037a2 <_dtoa_r+0x71a>
 800394a:	9b08      	ldr	r3, [sp, #32]
 800394c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800394e:	9408      	str	r4, [sp, #32]
 8003950:	1ae3      	subs	r3, r4, r3
 8003952:	441a      	add	r2, r3
 8003954:	9e00      	ldr	r6, [sp, #0]
 8003956:	9b03      	ldr	r3, [sp, #12]
 8003958:	920d      	str	r2, [sp, #52]	@ 0x34
 800395a:	2400      	movs	r4, #0
 800395c:	e721      	b.n	80037a2 <_dtoa_r+0x71a>
 800395e:	9c08      	ldr	r4, [sp, #32]
 8003960:	9e00      	ldr	r6, [sp, #0]
 8003962:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8003964:	e728      	b.n	80037b8 <_dtoa_r+0x730>
 8003966:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800396a:	e751      	b.n	8003810 <_dtoa_r+0x788>
 800396c:	9a08      	ldr	r2, [sp, #32]
 800396e:	9902      	ldr	r1, [sp, #8]
 8003970:	e750      	b.n	8003814 <_dtoa_r+0x78c>
 8003972:	f8cd 8008 	str.w	r8, [sp, #8]
 8003976:	e751      	b.n	800381c <_dtoa_r+0x794>
 8003978:	2300      	movs	r3, #0
 800397a:	e779      	b.n	8003870 <_dtoa_r+0x7e8>
 800397c:	9b04      	ldr	r3, [sp, #16]
 800397e:	e777      	b.n	8003870 <_dtoa_r+0x7e8>
 8003980:	2300      	movs	r3, #0
 8003982:	9308      	str	r3, [sp, #32]
 8003984:	e779      	b.n	800387a <_dtoa_r+0x7f2>
 8003986:	d093      	beq.n	80038b0 <_dtoa_r+0x828>
 8003988:	9a00      	ldr	r2, [sp, #0]
 800398a:	331c      	adds	r3, #28
 800398c:	441a      	add	r2, r3
 800398e:	9200      	str	r2, [sp, #0]
 8003990:	9a06      	ldr	r2, [sp, #24]
 8003992:	441a      	add	r2, r3
 8003994:	441e      	add	r6, r3
 8003996:	9206      	str	r2, [sp, #24]
 8003998:	e78a      	b.n	80038b0 <_dtoa_r+0x828>
 800399a:	4603      	mov	r3, r0
 800399c:	e7f4      	b.n	8003988 <_dtoa_r+0x900>
 800399e:	9b03      	ldr	r3, [sp, #12]
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	46b8      	mov	r8, r7
 80039a4:	dc20      	bgt.n	80039e8 <_dtoa_r+0x960>
 80039a6:	469b      	mov	fp, r3
 80039a8:	9b07      	ldr	r3, [sp, #28]
 80039aa:	2b02      	cmp	r3, #2
 80039ac:	dd1e      	ble.n	80039ec <_dtoa_r+0x964>
 80039ae:	f1bb 0f00 	cmp.w	fp, #0
 80039b2:	f47f adb1 	bne.w	8003518 <_dtoa_r+0x490>
 80039b6:	4621      	mov	r1, r4
 80039b8:	465b      	mov	r3, fp
 80039ba:	2205      	movs	r2, #5
 80039bc:	4648      	mov	r0, r9
 80039be:	f000 fa95 	bl	8003eec <__multadd>
 80039c2:	4601      	mov	r1, r0
 80039c4:	4604      	mov	r4, r0
 80039c6:	9802      	ldr	r0, [sp, #8]
 80039c8:	f000 fcea 	bl	80043a0 <__mcmp>
 80039cc:	2800      	cmp	r0, #0
 80039ce:	f77f ada3 	ble.w	8003518 <_dtoa_r+0x490>
 80039d2:	4656      	mov	r6, sl
 80039d4:	2331      	movs	r3, #49	@ 0x31
 80039d6:	f806 3b01 	strb.w	r3, [r6], #1
 80039da:	f108 0801 	add.w	r8, r8, #1
 80039de:	e59f      	b.n	8003520 <_dtoa_r+0x498>
 80039e0:	9c03      	ldr	r4, [sp, #12]
 80039e2:	46b8      	mov	r8, r7
 80039e4:	4625      	mov	r5, r4
 80039e6:	e7f4      	b.n	80039d2 <_dtoa_r+0x94a>
 80039e8:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80039ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	f000 8101 	beq.w	8003bf6 <_dtoa_r+0xb6e>
 80039f4:	2e00      	cmp	r6, #0
 80039f6:	dd05      	ble.n	8003a04 <_dtoa_r+0x97c>
 80039f8:	4629      	mov	r1, r5
 80039fa:	4632      	mov	r2, r6
 80039fc:	4648      	mov	r0, r9
 80039fe:	f000 fc63 	bl	80042c8 <__lshift>
 8003a02:	4605      	mov	r5, r0
 8003a04:	9b08      	ldr	r3, [sp, #32]
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d05c      	beq.n	8003ac4 <_dtoa_r+0xa3c>
 8003a0a:	6869      	ldr	r1, [r5, #4]
 8003a0c:	4648      	mov	r0, r9
 8003a0e:	f000 fa0b 	bl	8003e28 <_Balloc>
 8003a12:	4606      	mov	r6, r0
 8003a14:	b928      	cbnz	r0, 8003a22 <_dtoa_r+0x99a>
 8003a16:	4b82      	ldr	r3, [pc, #520]	@ (8003c20 <_dtoa_r+0xb98>)
 8003a18:	4602      	mov	r2, r0
 8003a1a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8003a1e:	f7ff bb4a 	b.w	80030b6 <_dtoa_r+0x2e>
 8003a22:	692a      	ldr	r2, [r5, #16]
 8003a24:	3202      	adds	r2, #2
 8003a26:	0092      	lsls	r2, r2, #2
 8003a28:	f105 010c 	add.w	r1, r5, #12
 8003a2c:	300c      	adds	r0, #12
 8003a2e:	f001 ff69 	bl	8005904 <memcpy>
 8003a32:	2201      	movs	r2, #1
 8003a34:	4631      	mov	r1, r6
 8003a36:	4648      	mov	r0, r9
 8003a38:	f000 fc46 	bl	80042c8 <__lshift>
 8003a3c:	f10a 0301 	add.w	r3, sl, #1
 8003a40:	9300      	str	r3, [sp, #0]
 8003a42:	eb0a 030b 	add.w	r3, sl, fp
 8003a46:	9308      	str	r3, [sp, #32]
 8003a48:	9b04      	ldr	r3, [sp, #16]
 8003a4a:	f003 0301 	and.w	r3, r3, #1
 8003a4e:	462f      	mov	r7, r5
 8003a50:	9306      	str	r3, [sp, #24]
 8003a52:	4605      	mov	r5, r0
 8003a54:	9b00      	ldr	r3, [sp, #0]
 8003a56:	9802      	ldr	r0, [sp, #8]
 8003a58:	4621      	mov	r1, r4
 8003a5a:	f103 3bff 	add.w	fp, r3, #4294967295
 8003a5e:	f7ff fa8b 	bl	8002f78 <quorem>
 8003a62:	4603      	mov	r3, r0
 8003a64:	3330      	adds	r3, #48	@ 0x30
 8003a66:	9003      	str	r0, [sp, #12]
 8003a68:	4639      	mov	r1, r7
 8003a6a:	9802      	ldr	r0, [sp, #8]
 8003a6c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003a6e:	f000 fc97 	bl	80043a0 <__mcmp>
 8003a72:	462a      	mov	r2, r5
 8003a74:	9004      	str	r0, [sp, #16]
 8003a76:	4621      	mov	r1, r4
 8003a78:	4648      	mov	r0, r9
 8003a7a:	f000 fcad 	bl	80043d8 <__mdiff>
 8003a7e:	68c2      	ldr	r2, [r0, #12]
 8003a80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a82:	4606      	mov	r6, r0
 8003a84:	bb02      	cbnz	r2, 8003ac8 <_dtoa_r+0xa40>
 8003a86:	4601      	mov	r1, r0
 8003a88:	9802      	ldr	r0, [sp, #8]
 8003a8a:	f000 fc89 	bl	80043a0 <__mcmp>
 8003a8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003a90:	4602      	mov	r2, r0
 8003a92:	4631      	mov	r1, r6
 8003a94:	4648      	mov	r0, r9
 8003a96:	920c      	str	r2, [sp, #48]	@ 0x30
 8003a98:	9309      	str	r3, [sp, #36]	@ 0x24
 8003a9a:	f000 fa05 	bl	8003ea8 <_Bfree>
 8003a9e:	9b07      	ldr	r3, [sp, #28]
 8003aa0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003aa2:	9e00      	ldr	r6, [sp, #0]
 8003aa4:	ea42 0103 	orr.w	r1, r2, r3
 8003aa8:	9b06      	ldr	r3, [sp, #24]
 8003aaa:	4319      	orrs	r1, r3
 8003aac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003aae:	d10d      	bne.n	8003acc <_dtoa_r+0xa44>
 8003ab0:	2b39      	cmp	r3, #57	@ 0x39
 8003ab2:	d027      	beq.n	8003b04 <_dtoa_r+0xa7c>
 8003ab4:	9a04      	ldr	r2, [sp, #16]
 8003ab6:	2a00      	cmp	r2, #0
 8003ab8:	dd01      	ble.n	8003abe <_dtoa_r+0xa36>
 8003aba:	9b03      	ldr	r3, [sp, #12]
 8003abc:	3331      	adds	r3, #49	@ 0x31
 8003abe:	f88b 3000 	strb.w	r3, [fp]
 8003ac2:	e52e      	b.n	8003522 <_dtoa_r+0x49a>
 8003ac4:	4628      	mov	r0, r5
 8003ac6:	e7b9      	b.n	8003a3c <_dtoa_r+0x9b4>
 8003ac8:	2201      	movs	r2, #1
 8003aca:	e7e2      	b.n	8003a92 <_dtoa_r+0xa0a>
 8003acc:	9904      	ldr	r1, [sp, #16]
 8003ace:	2900      	cmp	r1, #0
 8003ad0:	db04      	blt.n	8003adc <_dtoa_r+0xa54>
 8003ad2:	9807      	ldr	r0, [sp, #28]
 8003ad4:	4301      	orrs	r1, r0
 8003ad6:	9806      	ldr	r0, [sp, #24]
 8003ad8:	4301      	orrs	r1, r0
 8003ada:	d120      	bne.n	8003b1e <_dtoa_r+0xa96>
 8003adc:	2a00      	cmp	r2, #0
 8003ade:	ddee      	ble.n	8003abe <_dtoa_r+0xa36>
 8003ae0:	9902      	ldr	r1, [sp, #8]
 8003ae2:	9300      	str	r3, [sp, #0]
 8003ae4:	2201      	movs	r2, #1
 8003ae6:	4648      	mov	r0, r9
 8003ae8:	f000 fbee 	bl	80042c8 <__lshift>
 8003aec:	4621      	mov	r1, r4
 8003aee:	9002      	str	r0, [sp, #8]
 8003af0:	f000 fc56 	bl	80043a0 <__mcmp>
 8003af4:	2800      	cmp	r0, #0
 8003af6:	9b00      	ldr	r3, [sp, #0]
 8003af8:	dc02      	bgt.n	8003b00 <_dtoa_r+0xa78>
 8003afa:	d1e0      	bne.n	8003abe <_dtoa_r+0xa36>
 8003afc:	07da      	lsls	r2, r3, #31
 8003afe:	d5de      	bpl.n	8003abe <_dtoa_r+0xa36>
 8003b00:	2b39      	cmp	r3, #57	@ 0x39
 8003b02:	d1da      	bne.n	8003aba <_dtoa_r+0xa32>
 8003b04:	2339      	movs	r3, #57	@ 0x39
 8003b06:	f88b 3000 	strb.w	r3, [fp]
 8003b0a:	4633      	mov	r3, r6
 8003b0c:	461e      	mov	r6, r3
 8003b0e:	3b01      	subs	r3, #1
 8003b10:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003b14:	2a39      	cmp	r2, #57	@ 0x39
 8003b16:	d04e      	beq.n	8003bb6 <_dtoa_r+0xb2e>
 8003b18:	3201      	adds	r2, #1
 8003b1a:	701a      	strb	r2, [r3, #0]
 8003b1c:	e501      	b.n	8003522 <_dtoa_r+0x49a>
 8003b1e:	2a00      	cmp	r2, #0
 8003b20:	dd03      	ble.n	8003b2a <_dtoa_r+0xaa2>
 8003b22:	2b39      	cmp	r3, #57	@ 0x39
 8003b24:	d0ee      	beq.n	8003b04 <_dtoa_r+0xa7c>
 8003b26:	3301      	adds	r3, #1
 8003b28:	e7c9      	b.n	8003abe <_dtoa_r+0xa36>
 8003b2a:	9a00      	ldr	r2, [sp, #0]
 8003b2c:	9908      	ldr	r1, [sp, #32]
 8003b2e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8003b32:	428a      	cmp	r2, r1
 8003b34:	d028      	beq.n	8003b88 <_dtoa_r+0xb00>
 8003b36:	9902      	ldr	r1, [sp, #8]
 8003b38:	2300      	movs	r3, #0
 8003b3a:	220a      	movs	r2, #10
 8003b3c:	4648      	mov	r0, r9
 8003b3e:	f000 f9d5 	bl	8003eec <__multadd>
 8003b42:	42af      	cmp	r7, r5
 8003b44:	9002      	str	r0, [sp, #8]
 8003b46:	f04f 0300 	mov.w	r3, #0
 8003b4a:	f04f 020a 	mov.w	r2, #10
 8003b4e:	4639      	mov	r1, r7
 8003b50:	4648      	mov	r0, r9
 8003b52:	d107      	bne.n	8003b64 <_dtoa_r+0xadc>
 8003b54:	f000 f9ca 	bl	8003eec <__multadd>
 8003b58:	4607      	mov	r7, r0
 8003b5a:	4605      	mov	r5, r0
 8003b5c:	9b00      	ldr	r3, [sp, #0]
 8003b5e:	3301      	adds	r3, #1
 8003b60:	9300      	str	r3, [sp, #0]
 8003b62:	e777      	b.n	8003a54 <_dtoa_r+0x9cc>
 8003b64:	f000 f9c2 	bl	8003eec <__multadd>
 8003b68:	4629      	mov	r1, r5
 8003b6a:	4607      	mov	r7, r0
 8003b6c:	2300      	movs	r3, #0
 8003b6e:	220a      	movs	r2, #10
 8003b70:	4648      	mov	r0, r9
 8003b72:	f000 f9bb 	bl	8003eec <__multadd>
 8003b76:	4605      	mov	r5, r0
 8003b78:	e7f0      	b.n	8003b5c <_dtoa_r+0xad4>
 8003b7a:	f1bb 0f00 	cmp.w	fp, #0
 8003b7e:	bfcc      	ite	gt
 8003b80:	465e      	movgt	r6, fp
 8003b82:	2601      	movle	r6, #1
 8003b84:	4456      	add	r6, sl
 8003b86:	2700      	movs	r7, #0
 8003b88:	9902      	ldr	r1, [sp, #8]
 8003b8a:	9300      	str	r3, [sp, #0]
 8003b8c:	2201      	movs	r2, #1
 8003b8e:	4648      	mov	r0, r9
 8003b90:	f000 fb9a 	bl	80042c8 <__lshift>
 8003b94:	4621      	mov	r1, r4
 8003b96:	9002      	str	r0, [sp, #8]
 8003b98:	f000 fc02 	bl	80043a0 <__mcmp>
 8003b9c:	2800      	cmp	r0, #0
 8003b9e:	dcb4      	bgt.n	8003b0a <_dtoa_r+0xa82>
 8003ba0:	d102      	bne.n	8003ba8 <_dtoa_r+0xb20>
 8003ba2:	9b00      	ldr	r3, [sp, #0]
 8003ba4:	07db      	lsls	r3, r3, #31
 8003ba6:	d4b0      	bmi.n	8003b0a <_dtoa_r+0xa82>
 8003ba8:	4633      	mov	r3, r6
 8003baa:	461e      	mov	r6, r3
 8003bac:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003bb0:	2a30      	cmp	r2, #48	@ 0x30
 8003bb2:	d0fa      	beq.n	8003baa <_dtoa_r+0xb22>
 8003bb4:	e4b5      	b.n	8003522 <_dtoa_r+0x49a>
 8003bb6:	459a      	cmp	sl, r3
 8003bb8:	d1a8      	bne.n	8003b0c <_dtoa_r+0xa84>
 8003bba:	2331      	movs	r3, #49	@ 0x31
 8003bbc:	f108 0801 	add.w	r8, r8, #1
 8003bc0:	f88a 3000 	strb.w	r3, [sl]
 8003bc4:	e4ad      	b.n	8003522 <_dtoa_r+0x49a>
 8003bc6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003bc8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8003c24 <_dtoa_r+0xb9c>
 8003bcc:	b11b      	cbz	r3, 8003bd6 <_dtoa_r+0xb4e>
 8003bce:	f10a 0308 	add.w	r3, sl, #8
 8003bd2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8003bd4:	6013      	str	r3, [r2, #0]
 8003bd6:	4650      	mov	r0, sl
 8003bd8:	b017      	add	sp, #92	@ 0x5c
 8003bda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bde:	9b07      	ldr	r3, [sp, #28]
 8003be0:	2b01      	cmp	r3, #1
 8003be2:	f77f ae2e 	ble.w	8003842 <_dtoa_r+0x7ba>
 8003be6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003be8:	9308      	str	r3, [sp, #32]
 8003bea:	2001      	movs	r0, #1
 8003bec:	e64d      	b.n	800388a <_dtoa_r+0x802>
 8003bee:	f1bb 0f00 	cmp.w	fp, #0
 8003bf2:	f77f aed9 	ble.w	80039a8 <_dtoa_r+0x920>
 8003bf6:	4656      	mov	r6, sl
 8003bf8:	9802      	ldr	r0, [sp, #8]
 8003bfa:	4621      	mov	r1, r4
 8003bfc:	f7ff f9bc 	bl	8002f78 <quorem>
 8003c00:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8003c04:	f806 3b01 	strb.w	r3, [r6], #1
 8003c08:	eba6 020a 	sub.w	r2, r6, sl
 8003c0c:	4593      	cmp	fp, r2
 8003c0e:	ddb4      	ble.n	8003b7a <_dtoa_r+0xaf2>
 8003c10:	9902      	ldr	r1, [sp, #8]
 8003c12:	2300      	movs	r3, #0
 8003c14:	220a      	movs	r2, #10
 8003c16:	4648      	mov	r0, r9
 8003c18:	f000 f968 	bl	8003eec <__multadd>
 8003c1c:	9002      	str	r0, [sp, #8]
 8003c1e:	e7eb      	b.n	8003bf8 <_dtoa_r+0xb70>
 8003c20:	08006c09 	.word	0x08006c09
 8003c24:	08006b8d 	.word	0x08006b8d

08003c28 <_free_r>:
 8003c28:	b538      	push	{r3, r4, r5, lr}
 8003c2a:	4605      	mov	r5, r0
 8003c2c:	2900      	cmp	r1, #0
 8003c2e:	d041      	beq.n	8003cb4 <_free_r+0x8c>
 8003c30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003c34:	1f0c      	subs	r4, r1, #4
 8003c36:	2b00      	cmp	r3, #0
 8003c38:	bfb8      	it	lt
 8003c3a:	18e4      	addlt	r4, r4, r3
 8003c3c:	f000 f8e8 	bl	8003e10 <__malloc_lock>
 8003c40:	4a1d      	ldr	r2, [pc, #116]	@ (8003cb8 <_free_r+0x90>)
 8003c42:	6813      	ldr	r3, [r2, #0]
 8003c44:	b933      	cbnz	r3, 8003c54 <_free_r+0x2c>
 8003c46:	6063      	str	r3, [r4, #4]
 8003c48:	6014      	str	r4, [r2, #0]
 8003c4a:	4628      	mov	r0, r5
 8003c4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003c50:	f000 b8e4 	b.w	8003e1c <__malloc_unlock>
 8003c54:	42a3      	cmp	r3, r4
 8003c56:	d908      	bls.n	8003c6a <_free_r+0x42>
 8003c58:	6820      	ldr	r0, [r4, #0]
 8003c5a:	1821      	adds	r1, r4, r0
 8003c5c:	428b      	cmp	r3, r1
 8003c5e:	bf01      	itttt	eq
 8003c60:	6819      	ldreq	r1, [r3, #0]
 8003c62:	685b      	ldreq	r3, [r3, #4]
 8003c64:	1809      	addeq	r1, r1, r0
 8003c66:	6021      	streq	r1, [r4, #0]
 8003c68:	e7ed      	b.n	8003c46 <_free_r+0x1e>
 8003c6a:	461a      	mov	r2, r3
 8003c6c:	685b      	ldr	r3, [r3, #4]
 8003c6e:	b10b      	cbz	r3, 8003c74 <_free_r+0x4c>
 8003c70:	42a3      	cmp	r3, r4
 8003c72:	d9fa      	bls.n	8003c6a <_free_r+0x42>
 8003c74:	6811      	ldr	r1, [r2, #0]
 8003c76:	1850      	adds	r0, r2, r1
 8003c78:	42a0      	cmp	r0, r4
 8003c7a:	d10b      	bne.n	8003c94 <_free_r+0x6c>
 8003c7c:	6820      	ldr	r0, [r4, #0]
 8003c7e:	4401      	add	r1, r0
 8003c80:	1850      	adds	r0, r2, r1
 8003c82:	4283      	cmp	r3, r0
 8003c84:	6011      	str	r1, [r2, #0]
 8003c86:	d1e0      	bne.n	8003c4a <_free_r+0x22>
 8003c88:	6818      	ldr	r0, [r3, #0]
 8003c8a:	685b      	ldr	r3, [r3, #4]
 8003c8c:	6053      	str	r3, [r2, #4]
 8003c8e:	4408      	add	r0, r1
 8003c90:	6010      	str	r0, [r2, #0]
 8003c92:	e7da      	b.n	8003c4a <_free_r+0x22>
 8003c94:	d902      	bls.n	8003c9c <_free_r+0x74>
 8003c96:	230c      	movs	r3, #12
 8003c98:	602b      	str	r3, [r5, #0]
 8003c9a:	e7d6      	b.n	8003c4a <_free_r+0x22>
 8003c9c:	6820      	ldr	r0, [r4, #0]
 8003c9e:	1821      	adds	r1, r4, r0
 8003ca0:	428b      	cmp	r3, r1
 8003ca2:	bf04      	itt	eq
 8003ca4:	6819      	ldreq	r1, [r3, #0]
 8003ca6:	685b      	ldreq	r3, [r3, #4]
 8003ca8:	6063      	str	r3, [r4, #4]
 8003caa:	bf04      	itt	eq
 8003cac:	1809      	addeq	r1, r1, r0
 8003cae:	6021      	streq	r1, [r4, #0]
 8003cb0:	6054      	str	r4, [r2, #4]
 8003cb2:	e7ca      	b.n	8003c4a <_free_r+0x22>
 8003cb4:	bd38      	pop	{r3, r4, r5, pc}
 8003cb6:	bf00      	nop
 8003cb8:	20000340 	.word	0x20000340

08003cbc <malloc>:
 8003cbc:	4b02      	ldr	r3, [pc, #8]	@ (8003cc8 <malloc+0xc>)
 8003cbe:	4601      	mov	r1, r0
 8003cc0:	6818      	ldr	r0, [r3, #0]
 8003cc2:	f000 b825 	b.w	8003d10 <_malloc_r>
 8003cc6:	bf00      	nop
 8003cc8:	20000010 	.word	0x20000010

08003ccc <sbrk_aligned>:
 8003ccc:	b570      	push	{r4, r5, r6, lr}
 8003cce:	4e0f      	ldr	r6, [pc, #60]	@ (8003d0c <sbrk_aligned+0x40>)
 8003cd0:	460c      	mov	r4, r1
 8003cd2:	6831      	ldr	r1, [r6, #0]
 8003cd4:	4605      	mov	r5, r0
 8003cd6:	b911      	cbnz	r1, 8003cde <sbrk_aligned+0x12>
 8003cd8:	f001 fe04 	bl	80058e4 <_sbrk_r>
 8003cdc:	6030      	str	r0, [r6, #0]
 8003cde:	4621      	mov	r1, r4
 8003ce0:	4628      	mov	r0, r5
 8003ce2:	f001 fdff 	bl	80058e4 <_sbrk_r>
 8003ce6:	1c43      	adds	r3, r0, #1
 8003ce8:	d103      	bne.n	8003cf2 <sbrk_aligned+0x26>
 8003cea:	f04f 34ff 	mov.w	r4, #4294967295
 8003cee:	4620      	mov	r0, r4
 8003cf0:	bd70      	pop	{r4, r5, r6, pc}
 8003cf2:	1cc4      	adds	r4, r0, #3
 8003cf4:	f024 0403 	bic.w	r4, r4, #3
 8003cf8:	42a0      	cmp	r0, r4
 8003cfa:	d0f8      	beq.n	8003cee <sbrk_aligned+0x22>
 8003cfc:	1a21      	subs	r1, r4, r0
 8003cfe:	4628      	mov	r0, r5
 8003d00:	f001 fdf0 	bl	80058e4 <_sbrk_r>
 8003d04:	3001      	adds	r0, #1
 8003d06:	d1f2      	bne.n	8003cee <sbrk_aligned+0x22>
 8003d08:	e7ef      	b.n	8003cea <sbrk_aligned+0x1e>
 8003d0a:	bf00      	nop
 8003d0c:	2000033c 	.word	0x2000033c

08003d10 <_malloc_r>:
 8003d10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003d14:	1ccd      	adds	r5, r1, #3
 8003d16:	f025 0503 	bic.w	r5, r5, #3
 8003d1a:	3508      	adds	r5, #8
 8003d1c:	2d0c      	cmp	r5, #12
 8003d1e:	bf38      	it	cc
 8003d20:	250c      	movcc	r5, #12
 8003d22:	2d00      	cmp	r5, #0
 8003d24:	4606      	mov	r6, r0
 8003d26:	db01      	blt.n	8003d2c <_malloc_r+0x1c>
 8003d28:	42a9      	cmp	r1, r5
 8003d2a:	d904      	bls.n	8003d36 <_malloc_r+0x26>
 8003d2c:	230c      	movs	r3, #12
 8003d2e:	6033      	str	r3, [r6, #0]
 8003d30:	2000      	movs	r0, #0
 8003d32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003d36:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003e0c <_malloc_r+0xfc>
 8003d3a:	f000 f869 	bl	8003e10 <__malloc_lock>
 8003d3e:	f8d8 3000 	ldr.w	r3, [r8]
 8003d42:	461c      	mov	r4, r3
 8003d44:	bb44      	cbnz	r4, 8003d98 <_malloc_r+0x88>
 8003d46:	4629      	mov	r1, r5
 8003d48:	4630      	mov	r0, r6
 8003d4a:	f7ff ffbf 	bl	8003ccc <sbrk_aligned>
 8003d4e:	1c43      	adds	r3, r0, #1
 8003d50:	4604      	mov	r4, r0
 8003d52:	d158      	bne.n	8003e06 <_malloc_r+0xf6>
 8003d54:	f8d8 4000 	ldr.w	r4, [r8]
 8003d58:	4627      	mov	r7, r4
 8003d5a:	2f00      	cmp	r7, #0
 8003d5c:	d143      	bne.n	8003de6 <_malloc_r+0xd6>
 8003d5e:	2c00      	cmp	r4, #0
 8003d60:	d04b      	beq.n	8003dfa <_malloc_r+0xea>
 8003d62:	6823      	ldr	r3, [r4, #0]
 8003d64:	4639      	mov	r1, r7
 8003d66:	4630      	mov	r0, r6
 8003d68:	eb04 0903 	add.w	r9, r4, r3
 8003d6c:	f001 fdba 	bl	80058e4 <_sbrk_r>
 8003d70:	4581      	cmp	r9, r0
 8003d72:	d142      	bne.n	8003dfa <_malloc_r+0xea>
 8003d74:	6821      	ldr	r1, [r4, #0]
 8003d76:	1a6d      	subs	r5, r5, r1
 8003d78:	4629      	mov	r1, r5
 8003d7a:	4630      	mov	r0, r6
 8003d7c:	f7ff ffa6 	bl	8003ccc <sbrk_aligned>
 8003d80:	3001      	adds	r0, #1
 8003d82:	d03a      	beq.n	8003dfa <_malloc_r+0xea>
 8003d84:	6823      	ldr	r3, [r4, #0]
 8003d86:	442b      	add	r3, r5
 8003d88:	6023      	str	r3, [r4, #0]
 8003d8a:	f8d8 3000 	ldr.w	r3, [r8]
 8003d8e:	685a      	ldr	r2, [r3, #4]
 8003d90:	bb62      	cbnz	r2, 8003dec <_malloc_r+0xdc>
 8003d92:	f8c8 7000 	str.w	r7, [r8]
 8003d96:	e00f      	b.n	8003db8 <_malloc_r+0xa8>
 8003d98:	6822      	ldr	r2, [r4, #0]
 8003d9a:	1b52      	subs	r2, r2, r5
 8003d9c:	d420      	bmi.n	8003de0 <_malloc_r+0xd0>
 8003d9e:	2a0b      	cmp	r2, #11
 8003da0:	d917      	bls.n	8003dd2 <_malloc_r+0xc2>
 8003da2:	1961      	adds	r1, r4, r5
 8003da4:	42a3      	cmp	r3, r4
 8003da6:	6025      	str	r5, [r4, #0]
 8003da8:	bf18      	it	ne
 8003daa:	6059      	strne	r1, [r3, #4]
 8003dac:	6863      	ldr	r3, [r4, #4]
 8003dae:	bf08      	it	eq
 8003db0:	f8c8 1000 	streq.w	r1, [r8]
 8003db4:	5162      	str	r2, [r4, r5]
 8003db6:	604b      	str	r3, [r1, #4]
 8003db8:	4630      	mov	r0, r6
 8003dba:	f000 f82f 	bl	8003e1c <__malloc_unlock>
 8003dbe:	f104 000b 	add.w	r0, r4, #11
 8003dc2:	1d23      	adds	r3, r4, #4
 8003dc4:	f020 0007 	bic.w	r0, r0, #7
 8003dc8:	1ac2      	subs	r2, r0, r3
 8003dca:	bf1c      	itt	ne
 8003dcc:	1a1b      	subne	r3, r3, r0
 8003dce:	50a3      	strne	r3, [r4, r2]
 8003dd0:	e7af      	b.n	8003d32 <_malloc_r+0x22>
 8003dd2:	6862      	ldr	r2, [r4, #4]
 8003dd4:	42a3      	cmp	r3, r4
 8003dd6:	bf0c      	ite	eq
 8003dd8:	f8c8 2000 	streq.w	r2, [r8]
 8003ddc:	605a      	strne	r2, [r3, #4]
 8003dde:	e7eb      	b.n	8003db8 <_malloc_r+0xa8>
 8003de0:	4623      	mov	r3, r4
 8003de2:	6864      	ldr	r4, [r4, #4]
 8003de4:	e7ae      	b.n	8003d44 <_malloc_r+0x34>
 8003de6:	463c      	mov	r4, r7
 8003de8:	687f      	ldr	r7, [r7, #4]
 8003dea:	e7b6      	b.n	8003d5a <_malloc_r+0x4a>
 8003dec:	461a      	mov	r2, r3
 8003dee:	685b      	ldr	r3, [r3, #4]
 8003df0:	42a3      	cmp	r3, r4
 8003df2:	d1fb      	bne.n	8003dec <_malloc_r+0xdc>
 8003df4:	2300      	movs	r3, #0
 8003df6:	6053      	str	r3, [r2, #4]
 8003df8:	e7de      	b.n	8003db8 <_malloc_r+0xa8>
 8003dfa:	230c      	movs	r3, #12
 8003dfc:	6033      	str	r3, [r6, #0]
 8003dfe:	4630      	mov	r0, r6
 8003e00:	f000 f80c 	bl	8003e1c <__malloc_unlock>
 8003e04:	e794      	b.n	8003d30 <_malloc_r+0x20>
 8003e06:	6005      	str	r5, [r0, #0]
 8003e08:	e7d6      	b.n	8003db8 <_malloc_r+0xa8>
 8003e0a:	bf00      	nop
 8003e0c:	20000340 	.word	0x20000340

08003e10 <__malloc_lock>:
 8003e10:	4801      	ldr	r0, [pc, #4]	@ (8003e18 <__malloc_lock+0x8>)
 8003e12:	f7ff b8a8 	b.w	8002f66 <__retarget_lock_acquire_recursive>
 8003e16:	bf00      	nop
 8003e18:	20000338 	.word	0x20000338

08003e1c <__malloc_unlock>:
 8003e1c:	4801      	ldr	r0, [pc, #4]	@ (8003e24 <__malloc_unlock+0x8>)
 8003e1e:	f7ff b8a3 	b.w	8002f68 <__retarget_lock_release_recursive>
 8003e22:	bf00      	nop
 8003e24:	20000338 	.word	0x20000338

08003e28 <_Balloc>:
 8003e28:	b570      	push	{r4, r5, r6, lr}
 8003e2a:	69c6      	ldr	r6, [r0, #28]
 8003e2c:	4604      	mov	r4, r0
 8003e2e:	460d      	mov	r5, r1
 8003e30:	b976      	cbnz	r6, 8003e50 <_Balloc+0x28>
 8003e32:	2010      	movs	r0, #16
 8003e34:	f7ff ff42 	bl	8003cbc <malloc>
 8003e38:	4602      	mov	r2, r0
 8003e3a:	61e0      	str	r0, [r4, #28]
 8003e3c:	b920      	cbnz	r0, 8003e48 <_Balloc+0x20>
 8003e3e:	4b18      	ldr	r3, [pc, #96]	@ (8003ea0 <_Balloc+0x78>)
 8003e40:	4818      	ldr	r0, [pc, #96]	@ (8003ea4 <_Balloc+0x7c>)
 8003e42:	216b      	movs	r1, #107	@ 0x6b
 8003e44:	f001 fd74 	bl	8005930 <__assert_func>
 8003e48:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003e4c:	6006      	str	r6, [r0, #0]
 8003e4e:	60c6      	str	r6, [r0, #12]
 8003e50:	69e6      	ldr	r6, [r4, #28]
 8003e52:	68f3      	ldr	r3, [r6, #12]
 8003e54:	b183      	cbz	r3, 8003e78 <_Balloc+0x50>
 8003e56:	69e3      	ldr	r3, [r4, #28]
 8003e58:	68db      	ldr	r3, [r3, #12]
 8003e5a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003e5e:	b9b8      	cbnz	r0, 8003e90 <_Balloc+0x68>
 8003e60:	2101      	movs	r1, #1
 8003e62:	fa01 f605 	lsl.w	r6, r1, r5
 8003e66:	1d72      	adds	r2, r6, #5
 8003e68:	0092      	lsls	r2, r2, #2
 8003e6a:	4620      	mov	r0, r4
 8003e6c:	f001 fd7e 	bl	800596c <_calloc_r>
 8003e70:	b160      	cbz	r0, 8003e8c <_Balloc+0x64>
 8003e72:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003e76:	e00e      	b.n	8003e96 <_Balloc+0x6e>
 8003e78:	2221      	movs	r2, #33	@ 0x21
 8003e7a:	2104      	movs	r1, #4
 8003e7c:	4620      	mov	r0, r4
 8003e7e:	f001 fd75 	bl	800596c <_calloc_r>
 8003e82:	69e3      	ldr	r3, [r4, #28]
 8003e84:	60f0      	str	r0, [r6, #12]
 8003e86:	68db      	ldr	r3, [r3, #12]
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d1e4      	bne.n	8003e56 <_Balloc+0x2e>
 8003e8c:	2000      	movs	r0, #0
 8003e8e:	bd70      	pop	{r4, r5, r6, pc}
 8003e90:	6802      	ldr	r2, [r0, #0]
 8003e92:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003e96:	2300      	movs	r3, #0
 8003e98:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003e9c:	e7f7      	b.n	8003e8e <_Balloc+0x66>
 8003e9e:	bf00      	nop
 8003ea0:	08006b9a 	.word	0x08006b9a
 8003ea4:	08006c1a 	.word	0x08006c1a

08003ea8 <_Bfree>:
 8003ea8:	b570      	push	{r4, r5, r6, lr}
 8003eaa:	69c6      	ldr	r6, [r0, #28]
 8003eac:	4605      	mov	r5, r0
 8003eae:	460c      	mov	r4, r1
 8003eb0:	b976      	cbnz	r6, 8003ed0 <_Bfree+0x28>
 8003eb2:	2010      	movs	r0, #16
 8003eb4:	f7ff ff02 	bl	8003cbc <malloc>
 8003eb8:	4602      	mov	r2, r0
 8003eba:	61e8      	str	r0, [r5, #28]
 8003ebc:	b920      	cbnz	r0, 8003ec8 <_Bfree+0x20>
 8003ebe:	4b09      	ldr	r3, [pc, #36]	@ (8003ee4 <_Bfree+0x3c>)
 8003ec0:	4809      	ldr	r0, [pc, #36]	@ (8003ee8 <_Bfree+0x40>)
 8003ec2:	218f      	movs	r1, #143	@ 0x8f
 8003ec4:	f001 fd34 	bl	8005930 <__assert_func>
 8003ec8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003ecc:	6006      	str	r6, [r0, #0]
 8003ece:	60c6      	str	r6, [r0, #12]
 8003ed0:	b13c      	cbz	r4, 8003ee2 <_Bfree+0x3a>
 8003ed2:	69eb      	ldr	r3, [r5, #28]
 8003ed4:	6862      	ldr	r2, [r4, #4]
 8003ed6:	68db      	ldr	r3, [r3, #12]
 8003ed8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003edc:	6021      	str	r1, [r4, #0]
 8003ede:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003ee2:	bd70      	pop	{r4, r5, r6, pc}
 8003ee4:	08006b9a 	.word	0x08006b9a
 8003ee8:	08006c1a 	.word	0x08006c1a

08003eec <__multadd>:
 8003eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ef0:	690d      	ldr	r5, [r1, #16]
 8003ef2:	4607      	mov	r7, r0
 8003ef4:	460c      	mov	r4, r1
 8003ef6:	461e      	mov	r6, r3
 8003ef8:	f101 0c14 	add.w	ip, r1, #20
 8003efc:	2000      	movs	r0, #0
 8003efe:	f8dc 3000 	ldr.w	r3, [ip]
 8003f02:	b299      	uxth	r1, r3
 8003f04:	fb02 6101 	mla	r1, r2, r1, r6
 8003f08:	0c1e      	lsrs	r6, r3, #16
 8003f0a:	0c0b      	lsrs	r3, r1, #16
 8003f0c:	fb02 3306 	mla	r3, r2, r6, r3
 8003f10:	b289      	uxth	r1, r1
 8003f12:	3001      	adds	r0, #1
 8003f14:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003f18:	4285      	cmp	r5, r0
 8003f1a:	f84c 1b04 	str.w	r1, [ip], #4
 8003f1e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003f22:	dcec      	bgt.n	8003efe <__multadd+0x12>
 8003f24:	b30e      	cbz	r6, 8003f6a <__multadd+0x7e>
 8003f26:	68a3      	ldr	r3, [r4, #8]
 8003f28:	42ab      	cmp	r3, r5
 8003f2a:	dc19      	bgt.n	8003f60 <__multadd+0x74>
 8003f2c:	6861      	ldr	r1, [r4, #4]
 8003f2e:	4638      	mov	r0, r7
 8003f30:	3101      	adds	r1, #1
 8003f32:	f7ff ff79 	bl	8003e28 <_Balloc>
 8003f36:	4680      	mov	r8, r0
 8003f38:	b928      	cbnz	r0, 8003f46 <__multadd+0x5a>
 8003f3a:	4602      	mov	r2, r0
 8003f3c:	4b0c      	ldr	r3, [pc, #48]	@ (8003f70 <__multadd+0x84>)
 8003f3e:	480d      	ldr	r0, [pc, #52]	@ (8003f74 <__multadd+0x88>)
 8003f40:	21ba      	movs	r1, #186	@ 0xba
 8003f42:	f001 fcf5 	bl	8005930 <__assert_func>
 8003f46:	6922      	ldr	r2, [r4, #16]
 8003f48:	3202      	adds	r2, #2
 8003f4a:	f104 010c 	add.w	r1, r4, #12
 8003f4e:	0092      	lsls	r2, r2, #2
 8003f50:	300c      	adds	r0, #12
 8003f52:	f001 fcd7 	bl	8005904 <memcpy>
 8003f56:	4621      	mov	r1, r4
 8003f58:	4638      	mov	r0, r7
 8003f5a:	f7ff ffa5 	bl	8003ea8 <_Bfree>
 8003f5e:	4644      	mov	r4, r8
 8003f60:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003f64:	3501      	adds	r5, #1
 8003f66:	615e      	str	r6, [r3, #20]
 8003f68:	6125      	str	r5, [r4, #16]
 8003f6a:	4620      	mov	r0, r4
 8003f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f70:	08006c09 	.word	0x08006c09
 8003f74:	08006c1a 	.word	0x08006c1a

08003f78 <__s2b>:
 8003f78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f7c:	460c      	mov	r4, r1
 8003f7e:	4615      	mov	r5, r2
 8003f80:	461f      	mov	r7, r3
 8003f82:	2209      	movs	r2, #9
 8003f84:	3308      	adds	r3, #8
 8003f86:	4606      	mov	r6, r0
 8003f88:	fb93 f3f2 	sdiv	r3, r3, r2
 8003f8c:	2100      	movs	r1, #0
 8003f8e:	2201      	movs	r2, #1
 8003f90:	429a      	cmp	r2, r3
 8003f92:	db09      	blt.n	8003fa8 <__s2b+0x30>
 8003f94:	4630      	mov	r0, r6
 8003f96:	f7ff ff47 	bl	8003e28 <_Balloc>
 8003f9a:	b940      	cbnz	r0, 8003fae <__s2b+0x36>
 8003f9c:	4602      	mov	r2, r0
 8003f9e:	4b19      	ldr	r3, [pc, #100]	@ (8004004 <__s2b+0x8c>)
 8003fa0:	4819      	ldr	r0, [pc, #100]	@ (8004008 <__s2b+0x90>)
 8003fa2:	21d3      	movs	r1, #211	@ 0xd3
 8003fa4:	f001 fcc4 	bl	8005930 <__assert_func>
 8003fa8:	0052      	lsls	r2, r2, #1
 8003faa:	3101      	adds	r1, #1
 8003fac:	e7f0      	b.n	8003f90 <__s2b+0x18>
 8003fae:	9b08      	ldr	r3, [sp, #32]
 8003fb0:	6143      	str	r3, [r0, #20]
 8003fb2:	2d09      	cmp	r5, #9
 8003fb4:	f04f 0301 	mov.w	r3, #1
 8003fb8:	6103      	str	r3, [r0, #16]
 8003fba:	dd16      	ble.n	8003fea <__s2b+0x72>
 8003fbc:	f104 0909 	add.w	r9, r4, #9
 8003fc0:	46c8      	mov	r8, r9
 8003fc2:	442c      	add	r4, r5
 8003fc4:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003fc8:	4601      	mov	r1, r0
 8003fca:	3b30      	subs	r3, #48	@ 0x30
 8003fcc:	220a      	movs	r2, #10
 8003fce:	4630      	mov	r0, r6
 8003fd0:	f7ff ff8c 	bl	8003eec <__multadd>
 8003fd4:	45a0      	cmp	r8, r4
 8003fd6:	d1f5      	bne.n	8003fc4 <__s2b+0x4c>
 8003fd8:	f1a5 0408 	sub.w	r4, r5, #8
 8003fdc:	444c      	add	r4, r9
 8003fde:	1b2d      	subs	r5, r5, r4
 8003fe0:	1963      	adds	r3, r4, r5
 8003fe2:	42bb      	cmp	r3, r7
 8003fe4:	db04      	blt.n	8003ff0 <__s2b+0x78>
 8003fe6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003fea:	340a      	adds	r4, #10
 8003fec:	2509      	movs	r5, #9
 8003fee:	e7f6      	b.n	8003fde <__s2b+0x66>
 8003ff0:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003ff4:	4601      	mov	r1, r0
 8003ff6:	3b30      	subs	r3, #48	@ 0x30
 8003ff8:	220a      	movs	r2, #10
 8003ffa:	4630      	mov	r0, r6
 8003ffc:	f7ff ff76 	bl	8003eec <__multadd>
 8004000:	e7ee      	b.n	8003fe0 <__s2b+0x68>
 8004002:	bf00      	nop
 8004004:	08006c09 	.word	0x08006c09
 8004008:	08006c1a 	.word	0x08006c1a

0800400c <__hi0bits>:
 800400c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8004010:	4603      	mov	r3, r0
 8004012:	bf36      	itet	cc
 8004014:	0403      	lslcc	r3, r0, #16
 8004016:	2000      	movcs	r0, #0
 8004018:	2010      	movcc	r0, #16
 800401a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800401e:	bf3c      	itt	cc
 8004020:	021b      	lslcc	r3, r3, #8
 8004022:	3008      	addcc	r0, #8
 8004024:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004028:	bf3c      	itt	cc
 800402a:	011b      	lslcc	r3, r3, #4
 800402c:	3004      	addcc	r0, #4
 800402e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004032:	bf3c      	itt	cc
 8004034:	009b      	lslcc	r3, r3, #2
 8004036:	3002      	addcc	r0, #2
 8004038:	2b00      	cmp	r3, #0
 800403a:	db05      	blt.n	8004048 <__hi0bits+0x3c>
 800403c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8004040:	f100 0001 	add.w	r0, r0, #1
 8004044:	bf08      	it	eq
 8004046:	2020      	moveq	r0, #32
 8004048:	4770      	bx	lr

0800404a <__lo0bits>:
 800404a:	6803      	ldr	r3, [r0, #0]
 800404c:	4602      	mov	r2, r0
 800404e:	f013 0007 	ands.w	r0, r3, #7
 8004052:	d00b      	beq.n	800406c <__lo0bits+0x22>
 8004054:	07d9      	lsls	r1, r3, #31
 8004056:	d421      	bmi.n	800409c <__lo0bits+0x52>
 8004058:	0798      	lsls	r0, r3, #30
 800405a:	bf49      	itett	mi
 800405c:	085b      	lsrmi	r3, r3, #1
 800405e:	089b      	lsrpl	r3, r3, #2
 8004060:	2001      	movmi	r0, #1
 8004062:	6013      	strmi	r3, [r2, #0]
 8004064:	bf5c      	itt	pl
 8004066:	6013      	strpl	r3, [r2, #0]
 8004068:	2002      	movpl	r0, #2
 800406a:	4770      	bx	lr
 800406c:	b299      	uxth	r1, r3
 800406e:	b909      	cbnz	r1, 8004074 <__lo0bits+0x2a>
 8004070:	0c1b      	lsrs	r3, r3, #16
 8004072:	2010      	movs	r0, #16
 8004074:	b2d9      	uxtb	r1, r3
 8004076:	b909      	cbnz	r1, 800407c <__lo0bits+0x32>
 8004078:	3008      	adds	r0, #8
 800407a:	0a1b      	lsrs	r3, r3, #8
 800407c:	0719      	lsls	r1, r3, #28
 800407e:	bf04      	itt	eq
 8004080:	091b      	lsreq	r3, r3, #4
 8004082:	3004      	addeq	r0, #4
 8004084:	0799      	lsls	r1, r3, #30
 8004086:	bf04      	itt	eq
 8004088:	089b      	lsreq	r3, r3, #2
 800408a:	3002      	addeq	r0, #2
 800408c:	07d9      	lsls	r1, r3, #31
 800408e:	d403      	bmi.n	8004098 <__lo0bits+0x4e>
 8004090:	085b      	lsrs	r3, r3, #1
 8004092:	f100 0001 	add.w	r0, r0, #1
 8004096:	d003      	beq.n	80040a0 <__lo0bits+0x56>
 8004098:	6013      	str	r3, [r2, #0]
 800409a:	4770      	bx	lr
 800409c:	2000      	movs	r0, #0
 800409e:	4770      	bx	lr
 80040a0:	2020      	movs	r0, #32
 80040a2:	4770      	bx	lr

080040a4 <__i2b>:
 80040a4:	b510      	push	{r4, lr}
 80040a6:	460c      	mov	r4, r1
 80040a8:	2101      	movs	r1, #1
 80040aa:	f7ff febd 	bl	8003e28 <_Balloc>
 80040ae:	4602      	mov	r2, r0
 80040b0:	b928      	cbnz	r0, 80040be <__i2b+0x1a>
 80040b2:	4b05      	ldr	r3, [pc, #20]	@ (80040c8 <__i2b+0x24>)
 80040b4:	4805      	ldr	r0, [pc, #20]	@ (80040cc <__i2b+0x28>)
 80040b6:	f240 1145 	movw	r1, #325	@ 0x145
 80040ba:	f001 fc39 	bl	8005930 <__assert_func>
 80040be:	2301      	movs	r3, #1
 80040c0:	6144      	str	r4, [r0, #20]
 80040c2:	6103      	str	r3, [r0, #16]
 80040c4:	bd10      	pop	{r4, pc}
 80040c6:	bf00      	nop
 80040c8:	08006c09 	.word	0x08006c09
 80040cc:	08006c1a 	.word	0x08006c1a

080040d0 <__multiply>:
 80040d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040d4:	4617      	mov	r7, r2
 80040d6:	690a      	ldr	r2, [r1, #16]
 80040d8:	693b      	ldr	r3, [r7, #16]
 80040da:	429a      	cmp	r2, r3
 80040dc:	bfa8      	it	ge
 80040de:	463b      	movge	r3, r7
 80040e0:	4689      	mov	r9, r1
 80040e2:	bfa4      	itt	ge
 80040e4:	460f      	movge	r7, r1
 80040e6:	4699      	movge	r9, r3
 80040e8:	693d      	ldr	r5, [r7, #16]
 80040ea:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80040ee:	68bb      	ldr	r3, [r7, #8]
 80040f0:	6879      	ldr	r1, [r7, #4]
 80040f2:	eb05 060a 	add.w	r6, r5, sl
 80040f6:	42b3      	cmp	r3, r6
 80040f8:	b085      	sub	sp, #20
 80040fa:	bfb8      	it	lt
 80040fc:	3101      	addlt	r1, #1
 80040fe:	f7ff fe93 	bl	8003e28 <_Balloc>
 8004102:	b930      	cbnz	r0, 8004112 <__multiply+0x42>
 8004104:	4602      	mov	r2, r0
 8004106:	4b41      	ldr	r3, [pc, #260]	@ (800420c <__multiply+0x13c>)
 8004108:	4841      	ldr	r0, [pc, #260]	@ (8004210 <__multiply+0x140>)
 800410a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800410e:	f001 fc0f 	bl	8005930 <__assert_func>
 8004112:	f100 0414 	add.w	r4, r0, #20
 8004116:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800411a:	4623      	mov	r3, r4
 800411c:	2200      	movs	r2, #0
 800411e:	4573      	cmp	r3, lr
 8004120:	d320      	bcc.n	8004164 <__multiply+0x94>
 8004122:	f107 0814 	add.w	r8, r7, #20
 8004126:	f109 0114 	add.w	r1, r9, #20
 800412a:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800412e:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8004132:	9302      	str	r3, [sp, #8]
 8004134:	1beb      	subs	r3, r5, r7
 8004136:	3b15      	subs	r3, #21
 8004138:	f023 0303 	bic.w	r3, r3, #3
 800413c:	3304      	adds	r3, #4
 800413e:	3715      	adds	r7, #21
 8004140:	42bd      	cmp	r5, r7
 8004142:	bf38      	it	cc
 8004144:	2304      	movcc	r3, #4
 8004146:	9301      	str	r3, [sp, #4]
 8004148:	9b02      	ldr	r3, [sp, #8]
 800414a:	9103      	str	r1, [sp, #12]
 800414c:	428b      	cmp	r3, r1
 800414e:	d80c      	bhi.n	800416a <__multiply+0x9a>
 8004150:	2e00      	cmp	r6, #0
 8004152:	dd03      	ble.n	800415c <__multiply+0x8c>
 8004154:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8004158:	2b00      	cmp	r3, #0
 800415a:	d055      	beq.n	8004208 <__multiply+0x138>
 800415c:	6106      	str	r6, [r0, #16]
 800415e:	b005      	add	sp, #20
 8004160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004164:	f843 2b04 	str.w	r2, [r3], #4
 8004168:	e7d9      	b.n	800411e <__multiply+0x4e>
 800416a:	f8b1 a000 	ldrh.w	sl, [r1]
 800416e:	f1ba 0f00 	cmp.w	sl, #0
 8004172:	d01f      	beq.n	80041b4 <__multiply+0xe4>
 8004174:	46c4      	mov	ip, r8
 8004176:	46a1      	mov	r9, r4
 8004178:	2700      	movs	r7, #0
 800417a:	f85c 2b04 	ldr.w	r2, [ip], #4
 800417e:	f8d9 3000 	ldr.w	r3, [r9]
 8004182:	fa1f fb82 	uxth.w	fp, r2
 8004186:	b29b      	uxth	r3, r3
 8004188:	fb0a 330b 	mla	r3, sl, fp, r3
 800418c:	443b      	add	r3, r7
 800418e:	f8d9 7000 	ldr.w	r7, [r9]
 8004192:	0c12      	lsrs	r2, r2, #16
 8004194:	0c3f      	lsrs	r7, r7, #16
 8004196:	fb0a 7202 	mla	r2, sl, r2, r7
 800419a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800419e:	b29b      	uxth	r3, r3
 80041a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80041a4:	4565      	cmp	r5, ip
 80041a6:	f849 3b04 	str.w	r3, [r9], #4
 80041aa:	ea4f 4712 	mov.w	r7, r2, lsr #16
 80041ae:	d8e4      	bhi.n	800417a <__multiply+0xaa>
 80041b0:	9b01      	ldr	r3, [sp, #4]
 80041b2:	50e7      	str	r7, [r4, r3]
 80041b4:	9b03      	ldr	r3, [sp, #12]
 80041b6:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80041ba:	3104      	adds	r1, #4
 80041bc:	f1b9 0f00 	cmp.w	r9, #0
 80041c0:	d020      	beq.n	8004204 <__multiply+0x134>
 80041c2:	6823      	ldr	r3, [r4, #0]
 80041c4:	4647      	mov	r7, r8
 80041c6:	46a4      	mov	ip, r4
 80041c8:	f04f 0a00 	mov.w	sl, #0
 80041cc:	f8b7 b000 	ldrh.w	fp, [r7]
 80041d0:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80041d4:	fb09 220b 	mla	r2, r9, fp, r2
 80041d8:	4452      	add	r2, sl
 80041da:	b29b      	uxth	r3, r3
 80041dc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80041e0:	f84c 3b04 	str.w	r3, [ip], #4
 80041e4:	f857 3b04 	ldr.w	r3, [r7], #4
 80041e8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80041ec:	f8bc 3000 	ldrh.w	r3, [ip]
 80041f0:	fb09 330a 	mla	r3, r9, sl, r3
 80041f4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80041f8:	42bd      	cmp	r5, r7
 80041fa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80041fe:	d8e5      	bhi.n	80041cc <__multiply+0xfc>
 8004200:	9a01      	ldr	r2, [sp, #4]
 8004202:	50a3      	str	r3, [r4, r2]
 8004204:	3404      	adds	r4, #4
 8004206:	e79f      	b.n	8004148 <__multiply+0x78>
 8004208:	3e01      	subs	r6, #1
 800420a:	e7a1      	b.n	8004150 <__multiply+0x80>
 800420c:	08006c09 	.word	0x08006c09
 8004210:	08006c1a 	.word	0x08006c1a

08004214 <__pow5mult>:
 8004214:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004218:	4615      	mov	r5, r2
 800421a:	f012 0203 	ands.w	r2, r2, #3
 800421e:	4607      	mov	r7, r0
 8004220:	460e      	mov	r6, r1
 8004222:	d007      	beq.n	8004234 <__pow5mult+0x20>
 8004224:	4c25      	ldr	r4, [pc, #148]	@ (80042bc <__pow5mult+0xa8>)
 8004226:	3a01      	subs	r2, #1
 8004228:	2300      	movs	r3, #0
 800422a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800422e:	f7ff fe5d 	bl	8003eec <__multadd>
 8004232:	4606      	mov	r6, r0
 8004234:	10ad      	asrs	r5, r5, #2
 8004236:	d03d      	beq.n	80042b4 <__pow5mult+0xa0>
 8004238:	69fc      	ldr	r4, [r7, #28]
 800423a:	b97c      	cbnz	r4, 800425c <__pow5mult+0x48>
 800423c:	2010      	movs	r0, #16
 800423e:	f7ff fd3d 	bl	8003cbc <malloc>
 8004242:	4602      	mov	r2, r0
 8004244:	61f8      	str	r0, [r7, #28]
 8004246:	b928      	cbnz	r0, 8004254 <__pow5mult+0x40>
 8004248:	4b1d      	ldr	r3, [pc, #116]	@ (80042c0 <__pow5mult+0xac>)
 800424a:	481e      	ldr	r0, [pc, #120]	@ (80042c4 <__pow5mult+0xb0>)
 800424c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8004250:	f001 fb6e 	bl	8005930 <__assert_func>
 8004254:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004258:	6004      	str	r4, [r0, #0]
 800425a:	60c4      	str	r4, [r0, #12]
 800425c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8004260:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004264:	b94c      	cbnz	r4, 800427a <__pow5mult+0x66>
 8004266:	f240 2171 	movw	r1, #625	@ 0x271
 800426a:	4638      	mov	r0, r7
 800426c:	f7ff ff1a 	bl	80040a4 <__i2b>
 8004270:	2300      	movs	r3, #0
 8004272:	f8c8 0008 	str.w	r0, [r8, #8]
 8004276:	4604      	mov	r4, r0
 8004278:	6003      	str	r3, [r0, #0]
 800427a:	f04f 0900 	mov.w	r9, #0
 800427e:	07eb      	lsls	r3, r5, #31
 8004280:	d50a      	bpl.n	8004298 <__pow5mult+0x84>
 8004282:	4631      	mov	r1, r6
 8004284:	4622      	mov	r2, r4
 8004286:	4638      	mov	r0, r7
 8004288:	f7ff ff22 	bl	80040d0 <__multiply>
 800428c:	4631      	mov	r1, r6
 800428e:	4680      	mov	r8, r0
 8004290:	4638      	mov	r0, r7
 8004292:	f7ff fe09 	bl	8003ea8 <_Bfree>
 8004296:	4646      	mov	r6, r8
 8004298:	106d      	asrs	r5, r5, #1
 800429a:	d00b      	beq.n	80042b4 <__pow5mult+0xa0>
 800429c:	6820      	ldr	r0, [r4, #0]
 800429e:	b938      	cbnz	r0, 80042b0 <__pow5mult+0x9c>
 80042a0:	4622      	mov	r2, r4
 80042a2:	4621      	mov	r1, r4
 80042a4:	4638      	mov	r0, r7
 80042a6:	f7ff ff13 	bl	80040d0 <__multiply>
 80042aa:	6020      	str	r0, [r4, #0]
 80042ac:	f8c0 9000 	str.w	r9, [r0]
 80042b0:	4604      	mov	r4, r0
 80042b2:	e7e4      	b.n	800427e <__pow5mult+0x6a>
 80042b4:	4630      	mov	r0, r6
 80042b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80042ba:	bf00      	nop
 80042bc:	08006d2c 	.word	0x08006d2c
 80042c0:	08006b9a 	.word	0x08006b9a
 80042c4:	08006c1a 	.word	0x08006c1a

080042c8 <__lshift>:
 80042c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80042cc:	460c      	mov	r4, r1
 80042ce:	6849      	ldr	r1, [r1, #4]
 80042d0:	6923      	ldr	r3, [r4, #16]
 80042d2:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80042d6:	68a3      	ldr	r3, [r4, #8]
 80042d8:	4607      	mov	r7, r0
 80042da:	4691      	mov	r9, r2
 80042dc:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80042e0:	f108 0601 	add.w	r6, r8, #1
 80042e4:	42b3      	cmp	r3, r6
 80042e6:	db0b      	blt.n	8004300 <__lshift+0x38>
 80042e8:	4638      	mov	r0, r7
 80042ea:	f7ff fd9d 	bl	8003e28 <_Balloc>
 80042ee:	4605      	mov	r5, r0
 80042f0:	b948      	cbnz	r0, 8004306 <__lshift+0x3e>
 80042f2:	4602      	mov	r2, r0
 80042f4:	4b28      	ldr	r3, [pc, #160]	@ (8004398 <__lshift+0xd0>)
 80042f6:	4829      	ldr	r0, [pc, #164]	@ (800439c <__lshift+0xd4>)
 80042f8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80042fc:	f001 fb18 	bl	8005930 <__assert_func>
 8004300:	3101      	adds	r1, #1
 8004302:	005b      	lsls	r3, r3, #1
 8004304:	e7ee      	b.n	80042e4 <__lshift+0x1c>
 8004306:	2300      	movs	r3, #0
 8004308:	f100 0114 	add.w	r1, r0, #20
 800430c:	f100 0210 	add.w	r2, r0, #16
 8004310:	4618      	mov	r0, r3
 8004312:	4553      	cmp	r3, sl
 8004314:	db33      	blt.n	800437e <__lshift+0xb6>
 8004316:	6920      	ldr	r0, [r4, #16]
 8004318:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800431c:	f104 0314 	add.w	r3, r4, #20
 8004320:	f019 091f 	ands.w	r9, r9, #31
 8004324:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004328:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800432c:	d02b      	beq.n	8004386 <__lshift+0xbe>
 800432e:	f1c9 0e20 	rsb	lr, r9, #32
 8004332:	468a      	mov	sl, r1
 8004334:	2200      	movs	r2, #0
 8004336:	6818      	ldr	r0, [r3, #0]
 8004338:	fa00 f009 	lsl.w	r0, r0, r9
 800433c:	4310      	orrs	r0, r2
 800433e:	f84a 0b04 	str.w	r0, [sl], #4
 8004342:	f853 2b04 	ldr.w	r2, [r3], #4
 8004346:	459c      	cmp	ip, r3
 8004348:	fa22 f20e 	lsr.w	r2, r2, lr
 800434c:	d8f3      	bhi.n	8004336 <__lshift+0x6e>
 800434e:	ebac 0304 	sub.w	r3, ip, r4
 8004352:	3b15      	subs	r3, #21
 8004354:	f023 0303 	bic.w	r3, r3, #3
 8004358:	3304      	adds	r3, #4
 800435a:	f104 0015 	add.w	r0, r4, #21
 800435e:	4560      	cmp	r0, ip
 8004360:	bf88      	it	hi
 8004362:	2304      	movhi	r3, #4
 8004364:	50ca      	str	r2, [r1, r3]
 8004366:	b10a      	cbz	r2, 800436c <__lshift+0xa4>
 8004368:	f108 0602 	add.w	r6, r8, #2
 800436c:	3e01      	subs	r6, #1
 800436e:	4638      	mov	r0, r7
 8004370:	612e      	str	r6, [r5, #16]
 8004372:	4621      	mov	r1, r4
 8004374:	f7ff fd98 	bl	8003ea8 <_Bfree>
 8004378:	4628      	mov	r0, r5
 800437a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800437e:	f842 0f04 	str.w	r0, [r2, #4]!
 8004382:	3301      	adds	r3, #1
 8004384:	e7c5      	b.n	8004312 <__lshift+0x4a>
 8004386:	3904      	subs	r1, #4
 8004388:	f853 2b04 	ldr.w	r2, [r3], #4
 800438c:	f841 2f04 	str.w	r2, [r1, #4]!
 8004390:	459c      	cmp	ip, r3
 8004392:	d8f9      	bhi.n	8004388 <__lshift+0xc0>
 8004394:	e7ea      	b.n	800436c <__lshift+0xa4>
 8004396:	bf00      	nop
 8004398:	08006c09 	.word	0x08006c09
 800439c:	08006c1a 	.word	0x08006c1a

080043a0 <__mcmp>:
 80043a0:	690a      	ldr	r2, [r1, #16]
 80043a2:	4603      	mov	r3, r0
 80043a4:	6900      	ldr	r0, [r0, #16]
 80043a6:	1a80      	subs	r0, r0, r2
 80043a8:	b530      	push	{r4, r5, lr}
 80043aa:	d10e      	bne.n	80043ca <__mcmp+0x2a>
 80043ac:	3314      	adds	r3, #20
 80043ae:	3114      	adds	r1, #20
 80043b0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80043b4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80043b8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80043bc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80043c0:	4295      	cmp	r5, r2
 80043c2:	d003      	beq.n	80043cc <__mcmp+0x2c>
 80043c4:	d205      	bcs.n	80043d2 <__mcmp+0x32>
 80043c6:	f04f 30ff 	mov.w	r0, #4294967295
 80043ca:	bd30      	pop	{r4, r5, pc}
 80043cc:	42a3      	cmp	r3, r4
 80043ce:	d3f3      	bcc.n	80043b8 <__mcmp+0x18>
 80043d0:	e7fb      	b.n	80043ca <__mcmp+0x2a>
 80043d2:	2001      	movs	r0, #1
 80043d4:	e7f9      	b.n	80043ca <__mcmp+0x2a>
	...

080043d8 <__mdiff>:
 80043d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043dc:	4689      	mov	r9, r1
 80043de:	4606      	mov	r6, r0
 80043e0:	4611      	mov	r1, r2
 80043e2:	4648      	mov	r0, r9
 80043e4:	4614      	mov	r4, r2
 80043e6:	f7ff ffdb 	bl	80043a0 <__mcmp>
 80043ea:	1e05      	subs	r5, r0, #0
 80043ec:	d112      	bne.n	8004414 <__mdiff+0x3c>
 80043ee:	4629      	mov	r1, r5
 80043f0:	4630      	mov	r0, r6
 80043f2:	f7ff fd19 	bl	8003e28 <_Balloc>
 80043f6:	4602      	mov	r2, r0
 80043f8:	b928      	cbnz	r0, 8004406 <__mdiff+0x2e>
 80043fa:	4b3f      	ldr	r3, [pc, #252]	@ (80044f8 <__mdiff+0x120>)
 80043fc:	f240 2137 	movw	r1, #567	@ 0x237
 8004400:	483e      	ldr	r0, [pc, #248]	@ (80044fc <__mdiff+0x124>)
 8004402:	f001 fa95 	bl	8005930 <__assert_func>
 8004406:	2301      	movs	r3, #1
 8004408:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800440c:	4610      	mov	r0, r2
 800440e:	b003      	add	sp, #12
 8004410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004414:	bfbc      	itt	lt
 8004416:	464b      	movlt	r3, r9
 8004418:	46a1      	movlt	r9, r4
 800441a:	4630      	mov	r0, r6
 800441c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004420:	bfba      	itte	lt
 8004422:	461c      	movlt	r4, r3
 8004424:	2501      	movlt	r5, #1
 8004426:	2500      	movge	r5, #0
 8004428:	f7ff fcfe 	bl	8003e28 <_Balloc>
 800442c:	4602      	mov	r2, r0
 800442e:	b918      	cbnz	r0, 8004438 <__mdiff+0x60>
 8004430:	4b31      	ldr	r3, [pc, #196]	@ (80044f8 <__mdiff+0x120>)
 8004432:	f240 2145 	movw	r1, #581	@ 0x245
 8004436:	e7e3      	b.n	8004400 <__mdiff+0x28>
 8004438:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800443c:	6926      	ldr	r6, [r4, #16]
 800443e:	60c5      	str	r5, [r0, #12]
 8004440:	f109 0310 	add.w	r3, r9, #16
 8004444:	f109 0514 	add.w	r5, r9, #20
 8004448:	f104 0e14 	add.w	lr, r4, #20
 800444c:	f100 0b14 	add.w	fp, r0, #20
 8004450:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8004454:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8004458:	9301      	str	r3, [sp, #4]
 800445a:	46d9      	mov	r9, fp
 800445c:	f04f 0c00 	mov.w	ip, #0
 8004460:	9b01      	ldr	r3, [sp, #4]
 8004462:	f85e 0b04 	ldr.w	r0, [lr], #4
 8004466:	f853 af04 	ldr.w	sl, [r3, #4]!
 800446a:	9301      	str	r3, [sp, #4]
 800446c:	fa1f f38a 	uxth.w	r3, sl
 8004470:	4619      	mov	r1, r3
 8004472:	b283      	uxth	r3, r0
 8004474:	1acb      	subs	r3, r1, r3
 8004476:	0c00      	lsrs	r0, r0, #16
 8004478:	4463      	add	r3, ip
 800447a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800447e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004482:	b29b      	uxth	r3, r3
 8004484:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004488:	4576      	cmp	r6, lr
 800448a:	f849 3b04 	str.w	r3, [r9], #4
 800448e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004492:	d8e5      	bhi.n	8004460 <__mdiff+0x88>
 8004494:	1b33      	subs	r3, r6, r4
 8004496:	3b15      	subs	r3, #21
 8004498:	f023 0303 	bic.w	r3, r3, #3
 800449c:	3415      	adds	r4, #21
 800449e:	3304      	adds	r3, #4
 80044a0:	42a6      	cmp	r6, r4
 80044a2:	bf38      	it	cc
 80044a4:	2304      	movcc	r3, #4
 80044a6:	441d      	add	r5, r3
 80044a8:	445b      	add	r3, fp
 80044aa:	461e      	mov	r6, r3
 80044ac:	462c      	mov	r4, r5
 80044ae:	4544      	cmp	r4, r8
 80044b0:	d30e      	bcc.n	80044d0 <__mdiff+0xf8>
 80044b2:	f108 0103 	add.w	r1, r8, #3
 80044b6:	1b49      	subs	r1, r1, r5
 80044b8:	f021 0103 	bic.w	r1, r1, #3
 80044bc:	3d03      	subs	r5, #3
 80044be:	45a8      	cmp	r8, r5
 80044c0:	bf38      	it	cc
 80044c2:	2100      	movcc	r1, #0
 80044c4:	440b      	add	r3, r1
 80044c6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80044ca:	b191      	cbz	r1, 80044f2 <__mdiff+0x11a>
 80044cc:	6117      	str	r7, [r2, #16]
 80044ce:	e79d      	b.n	800440c <__mdiff+0x34>
 80044d0:	f854 1b04 	ldr.w	r1, [r4], #4
 80044d4:	46e6      	mov	lr, ip
 80044d6:	0c08      	lsrs	r0, r1, #16
 80044d8:	fa1c fc81 	uxtah	ip, ip, r1
 80044dc:	4471      	add	r1, lr
 80044de:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80044e2:	b289      	uxth	r1, r1
 80044e4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80044e8:	f846 1b04 	str.w	r1, [r6], #4
 80044ec:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80044f0:	e7dd      	b.n	80044ae <__mdiff+0xd6>
 80044f2:	3f01      	subs	r7, #1
 80044f4:	e7e7      	b.n	80044c6 <__mdiff+0xee>
 80044f6:	bf00      	nop
 80044f8:	08006c09 	.word	0x08006c09
 80044fc:	08006c1a 	.word	0x08006c1a

08004500 <__ulp>:
 8004500:	b082      	sub	sp, #8
 8004502:	ed8d 0b00 	vstr	d0, [sp]
 8004506:	9a01      	ldr	r2, [sp, #4]
 8004508:	4b0f      	ldr	r3, [pc, #60]	@ (8004548 <__ulp+0x48>)
 800450a:	4013      	ands	r3, r2
 800450c:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8004510:	2b00      	cmp	r3, #0
 8004512:	dc08      	bgt.n	8004526 <__ulp+0x26>
 8004514:	425b      	negs	r3, r3
 8004516:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800451a:	ea4f 5223 	mov.w	r2, r3, asr #20
 800451e:	da04      	bge.n	800452a <__ulp+0x2a>
 8004520:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8004524:	4113      	asrs	r3, r2
 8004526:	2200      	movs	r2, #0
 8004528:	e008      	b.n	800453c <__ulp+0x3c>
 800452a:	f1a2 0314 	sub.w	r3, r2, #20
 800452e:	2b1e      	cmp	r3, #30
 8004530:	bfda      	itte	le
 8004532:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004536:	40da      	lsrle	r2, r3
 8004538:	2201      	movgt	r2, #1
 800453a:	2300      	movs	r3, #0
 800453c:	4619      	mov	r1, r3
 800453e:	4610      	mov	r0, r2
 8004540:	ec41 0b10 	vmov	d0, r0, r1
 8004544:	b002      	add	sp, #8
 8004546:	4770      	bx	lr
 8004548:	7ff00000 	.word	0x7ff00000

0800454c <__b2d>:
 800454c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004550:	6906      	ldr	r6, [r0, #16]
 8004552:	f100 0814 	add.w	r8, r0, #20
 8004556:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800455a:	1f37      	subs	r7, r6, #4
 800455c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004560:	4610      	mov	r0, r2
 8004562:	f7ff fd53 	bl	800400c <__hi0bits>
 8004566:	f1c0 0320 	rsb	r3, r0, #32
 800456a:	280a      	cmp	r0, #10
 800456c:	600b      	str	r3, [r1, #0]
 800456e:	491b      	ldr	r1, [pc, #108]	@ (80045dc <__b2d+0x90>)
 8004570:	dc15      	bgt.n	800459e <__b2d+0x52>
 8004572:	f1c0 0c0b 	rsb	ip, r0, #11
 8004576:	fa22 f30c 	lsr.w	r3, r2, ip
 800457a:	45b8      	cmp	r8, r7
 800457c:	ea43 0501 	orr.w	r5, r3, r1
 8004580:	bf34      	ite	cc
 8004582:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004586:	2300      	movcs	r3, #0
 8004588:	3015      	adds	r0, #21
 800458a:	fa02 f000 	lsl.w	r0, r2, r0
 800458e:	fa23 f30c 	lsr.w	r3, r3, ip
 8004592:	4303      	orrs	r3, r0
 8004594:	461c      	mov	r4, r3
 8004596:	ec45 4b10 	vmov	d0, r4, r5
 800459a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800459e:	45b8      	cmp	r8, r7
 80045a0:	bf3a      	itte	cc
 80045a2:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 80045a6:	f1a6 0708 	subcc.w	r7, r6, #8
 80045aa:	2300      	movcs	r3, #0
 80045ac:	380b      	subs	r0, #11
 80045ae:	d012      	beq.n	80045d6 <__b2d+0x8a>
 80045b0:	f1c0 0120 	rsb	r1, r0, #32
 80045b4:	fa23 f401 	lsr.w	r4, r3, r1
 80045b8:	4082      	lsls	r2, r0
 80045ba:	4322      	orrs	r2, r4
 80045bc:	4547      	cmp	r7, r8
 80045be:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 80045c2:	bf8c      	ite	hi
 80045c4:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 80045c8:	2200      	movls	r2, #0
 80045ca:	4083      	lsls	r3, r0
 80045cc:	40ca      	lsrs	r2, r1
 80045ce:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 80045d2:	4313      	orrs	r3, r2
 80045d4:	e7de      	b.n	8004594 <__b2d+0x48>
 80045d6:	ea42 0501 	orr.w	r5, r2, r1
 80045da:	e7db      	b.n	8004594 <__b2d+0x48>
 80045dc:	3ff00000 	.word	0x3ff00000

080045e0 <__d2b>:
 80045e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80045e4:	460f      	mov	r7, r1
 80045e6:	2101      	movs	r1, #1
 80045e8:	ec59 8b10 	vmov	r8, r9, d0
 80045ec:	4616      	mov	r6, r2
 80045ee:	f7ff fc1b 	bl	8003e28 <_Balloc>
 80045f2:	4604      	mov	r4, r0
 80045f4:	b930      	cbnz	r0, 8004604 <__d2b+0x24>
 80045f6:	4602      	mov	r2, r0
 80045f8:	4b23      	ldr	r3, [pc, #140]	@ (8004688 <__d2b+0xa8>)
 80045fa:	4824      	ldr	r0, [pc, #144]	@ (800468c <__d2b+0xac>)
 80045fc:	f240 310f 	movw	r1, #783	@ 0x30f
 8004600:	f001 f996 	bl	8005930 <__assert_func>
 8004604:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004608:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800460c:	b10d      	cbz	r5, 8004612 <__d2b+0x32>
 800460e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004612:	9301      	str	r3, [sp, #4]
 8004614:	f1b8 0300 	subs.w	r3, r8, #0
 8004618:	d023      	beq.n	8004662 <__d2b+0x82>
 800461a:	4668      	mov	r0, sp
 800461c:	9300      	str	r3, [sp, #0]
 800461e:	f7ff fd14 	bl	800404a <__lo0bits>
 8004622:	e9dd 1200 	ldrd	r1, r2, [sp]
 8004626:	b1d0      	cbz	r0, 800465e <__d2b+0x7e>
 8004628:	f1c0 0320 	rsb	r3, r0, #32
 800462c:	fa02 f303 	lsl.w	r3, r2, r3
 8004630:	430b      	orrs	r3, r1
 8004632:	40c2      	lsrs	r2, r0
 8004634:	6163      	str	r3, [r4, #20]
 8004636:	9201      	str	r2, [sp, #4]
 8004638:	9b01      	ldr	r3, [sp, #4]
 800463a:	61a3      	str	r3, [r4, #24]
 800463c:	2b00      	cmp	r3, #0
 800463e:	bf0c      	ite	eq
 8004640:	2201      	moveq	r2, #1
 8004642:	2202      	movne	r2, #2
 8004644:	6122      	str	r2, [r4, #16]
 8004646:	b1a5      	cbz	r5, 8004672 <__d2b+0x92>
 8004648:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800464c:	4405      	add	r5, r0
 800464e:	603d      	str	r5, [r7, #0]
 8004650:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8004654:	6030      	str	r0, [r6, #0]
 8004656:	4620      	mov	r0, r4
 8004658:	b003      	add	sp, #12
 800465a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800465e:	6161      	str	r1, [r4, #20]
 8004660:	e7ea      	b.n	8004638 <__d2b+0x58>
 8004662:	a801      	add	r0, sp, #4
 8004664:	f7ff fcf1 	bl	800404a <__lo0bits>
 8004668:	9b01      	ldr	r3, [sp, #4]
 800466a:	6163      	str	r3, [r4, #20]
 800466c:	3020      	adds	r0, #32
 800466e:	2201      	movs	r2, #1
 8004670:	e7e8      	b.n	8004644 <__d2b+0x64>
 8004672:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004676:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800467a:	6038      	str	r0, [r7, #0]
 800467c:	6918      	ldr	r0, [r3, #16]
 800467e:	f7ff fcc5 	bl	800400c <__hi0bits>
 8004682:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004686:	e7e5      	b.n	8004654 <__d2b+0x74>
 8004688:	08006c09 	.word	0x08006c09
 800468c:	08006c1a 	.word	0x08006c1a

08004690 <__ratio>:
 8004690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004694:	b085      	sub	sp, #20
 8004696:	e9cd 1000 	strd	r1, r0, [sp]
 800469a:	a902      	add	r1, sp, #8
 800469c:	f7ff ff56 	bl	800454c <__b2d>
 80046a0:	9800      	ldr	r0, [sp, #0]
 80046a2:	a903      	add	r1, sp, #12
 80046a4:	ec55 4b10 	vmov	r4, r5, d0
 80046a8:	f7ff ff50 	bl	800454c <__b2d>
 80046ac:	9b01      	ldr	r3, [sp, #4]
 80046ae:	6919      	ldr	r1, [r3, #16]
 80046b0:	9b00      	ldr	r3, [sp, #0]
 80046b2:	691b      	ldr	r3, [r3, #16]
 80046b4:	1ac9      	subs	r1, r1, r3
 80046b6:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 80046ba:	1a9b      	subs	r3, r3, r2
 80046bc:	ec5b ab10 	vmov	sl, fp, d0
 80046c0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	bfce      	itee	gt
 80046c8:	462a      	movgt	r2, r5
 80046ca:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80046ce:	465a      	movle	r2, fp
 80046d0:	462f      	mov	r7, r5
 80046d2:	46d9      	mov	r9, fp
 80046d4:	bfcc      	ite	gt
 80046d6:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80046da:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 80046de:	464b      	mov	r3, r9
 80046e0:	4652      	mov	r2, sl
 80046e2:	4620      	mov	r0, r4
 80046e4:	4639      	mov	r1, r7
 80046e6:	f7fc f8b9 	bl	800085c <__aeabi_ddiv>
 80046ea:	ec41 0b10 	vmov	d0, r0, r1
 80046ee:	b005      	add	sp, #20
 80046f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080046f4 <__copybits>:
 80046f4:	3901      	subs	r1, #1
 80046f6:	b570      	push	{r4, r5, r6, lr}
 80046f8:	1149      	asrs	r1, r1, #5
 80046fa:	6914      	ldr	r4, [r2, #16]
 80046fc:	3101      	adds	r1, #1
 80046fe:	f102 0314 	add.w	r3, r2, #20
 8004702:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004706:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800470a:	1f05      	subs	r5, r0, #4
 800470c:	42a3      	cmp	r3, r4
 800470e:	d30c      	bcc.n	800472a <__copybits+0x36>
 8004710:	1aa3      	subs	r3, r4, r2
 8004712:	3b11      	subs	r3, #17
 8004714:	f023 0303 	bic.w	r3, r3, #3
 8004718:	3211      	adds	r2, #17
 800471a:	42a2      	cmp	r2, r4
 800471c:	bf88      	it	hi
 800471e:	2300      	movhi	r3, #0
 8004720:	4418      	add	r0, r3
 8004722:	2300      	movs	r3, #0
 8004724:	4288      	cmp	r0, r1
 8004726:	d305      	bcc.n	8004734 <__copybits+0x40>
 8004728:	bd70      	pop	{r4, r5, r6, pc}
 800472a:	f853 6b04 	ldr.w	r6, [r3], #4
 800472e:	f845 6f04 	str.w	r6, [r5, #4]!
 8004732:	e7eb      	b.n	800470c <__copybits+0x18>
 8004734:	f840 3b04 	str.w	r3, [r0], #4
 8004738:	e7f4      	b.n	8004724 <__copybits+0x30>

0800473a <__any_on>:
 800473a:	f100 0214 	add.w	r2, r0, #20
 800473e:	6900      	ldr	r0, [r0, #16]
 8004740:	114b      	asrs	r3, r1, #5
 8004742:	4298      	cmp	r0, r3
 8004744:	b510      	push	{r4, lr}
 8004746:	db11      	blt.n	800476c <__any_on+0x32>
 8004748:	dd0a      	ble.n	8004760 <__any_on+0x26>
 800474a:	f011 011f 	ands.w	r1, r1, #31
 800474e:	d007      	beq.n	8004760 <__any_on+0x26>
 8004750:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004754:	fa24 f001 	lsr.w	r0, r4, r1
 8004758:	fa00 f101 	lsl.w	r1, r0, r1
 800475c:	428c      	cmp	r4, r1
 800475e:	d10b      	bne.n	8004778 <__any_on+0x3e>
 8004760:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004764:	4293      	cmp	r3, r2
 8004766:	d803      	bhi.n	8004770 <__any_on+0x36>
 8004768:	2000      	movs	r0, #0
 800476a:	bd10      	pop	{r4, pc}
 800476c:	4603      	mov	r3, r0
 800476e:	e7f7      	b.n	8004760 <__any_on+0x26>
 8004770:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004774:	2900      	cmp	r1, #0
 8004776:	d0f5      	beq.n	8004764 <__any_on+0x2a>
 8004778:	2001      	movs	r0, #1
 800477a:	e7f6      	b.n	800476a <__any_on+0x30>

0800477c <sulp>:
 800477c:	b570      	push	{r4, r5, r6, lr}
 800477e:	4604      	mov	r4, r0
 8004780:	460d      	mov	r5, r1
 8004782:	ec45 4b10 	vmov	d0, r4, r5
 8004786:	4616      	mov	r6, r2
 8004788:	f7ff feba 	bl	8004500 <__ulp>
 800478c:	ec51 0b10 	vmov	r0, r1, d0
 8004790:	b17e      	cbz	r6, 80047b2 <sulp+0x36>
 8004792:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004796:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800479a:	2b00      	cmp	r3, #0
 800479c:	dd09      	ble.n	80047b2 <sulp+0x36>
 800479e:	051b      	lsls	r3, r3, #20
 80047a0:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 80047a4:	2400      	movs	r4, #0
 80047a6:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 80047aa:	4622      	mov	r2, r4
 80047ac:	462b      	mov	r3, r5
 80047ae:	f7fb ff2b 	bl	8000608 <__aeabi_dmul>
 80047b2:	ec41 0b10 	vmov	d0, r0, r1
 80047b6:	bd70      	pop	{r4, r5, r6, pc}

080047b8 <_strtod_l>:
 80047b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047bc:	b09f      	sub	sp, #124	@ 0x7c
 80047be:	460c      	mov	r4, r1
 80047c0:	9217      	str	r2, [sp, #92]	@ 0x5c
 80047c2:	2200      	movs	r2, #0
 80047c4:	921a      	str	r2, [sp, #104]	@ 0x68
 80047c6:	9005      	str	r0, [sp, #20]
 80047c8:	f04f 0a00 	mov.w	sl, #0
 80047cc:	f04f 0b00 	mov.w	fp, #0
 80047d0:	460a      	mov	r2, r1
 80047d2:	9219      	str	r2, [sp, #100]	@ 0x64
 80047d4:	7811      	ldrb	r1, [r2, #0]
 80047d6:	292b      	cmp	r1, #43	@ 0x2b
 80047d8:	d04a      	beq.n	8004870 <_strtod_l+0xb8>
 80047da:	d838      	bhi.n	800484e <_strtod_l+0x96>
 80047dc:	290d      	cmp	r1, #13
 80047de:	d832      	bhi.n	8004846 <_strtod_l+0x8e>
 80047e0:	2908      	cmp	r1, #8
 80047e2:	d832      	bhi.n	800484a <_strtod_l+0x92>
 80047e4:	2900      	cmp	r1, #0
 80047e6:	d03b      	beq.n	8004860 <_strtod_l+0xa8>
 80047e8:	2200      	movs	r2, #0
 80047ea:	920e      	str	r2, [sp, #56]	@ 0x38
 80047ec:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 80047ee:	782a      	ldrb	r2, [r5, #0]
 80047f0:	2a30      	cmp	r2, #48	@ 0x30
 80047f2:	f040 80b2 	bne.w	800495a <_strtod_l+0x1a2>
 80047f6:	786a      	ldrb	r2, [r5, #1]
 80047f8:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80047fc:	2a58      	cmp	r2, #88	@ 0x58
 80047fe:	d16e      	bne.n	80048de <_strtod_l+0x126>
 8004800:	9302      	str	r3, [sp, #8]
 8004802:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004804:	9301      	str	r3, [sp, #4]
 8004806:	ab1a      	add	r3, sp, #104	@ 0x68
 8004808:	9300      	str	r3, [sp, #0]
 800480a:	4a8f      	ldr	r2, [pc, #572]	@ (8004a48 <_strtod_l+0x290>)
 800480c:	9805      	ldr	r0, [sp, #20]
 800480e:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004810:	a919      	add	r1, sp, #100	@ 0x64
 8004812:	f001 f927 	bl	8005a64 <__gethex>
 8004816:	f010 060f 	ands.w	r6, r0, #15
 800481a:	4604      	mov	r4, r0
 800481c:	d005      	beq.n	800482a <_strtod_l+0x72>
 800481e:	2e06      	cmp	r6, #6
 8004820:	d128      	bne.n	8004874 <_strtod_l+0xbc>
 8004822:	3501      	adds	r5, #1
 8004824:	2300      	movs	r3, #0
 8004826:	9519      	str	r5, [sp, #100]	@ 0x64
 8004828:	930e      	str	r3, [sp, #56]	@ 0x38
 800482a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800482c:	2b00      	cmp	r3, #0
 800482e:	f040 858e 	bne.w	800534e <_strtod_l+0xb96>
 8004832:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004834:	b1cb      	cbz	r3, 800486a <_strtod_l+0xb2>
 8004836:	4652      	mov	r2, sl
 8004838:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 800483c:	ec43 2b10 	vmov	d0, r2, r3
 8004840:	b01f      	add	sp, #124	@ 0x7c
 8004842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004846:	2920      	cmp	r1, #32
 8004848:	d1ce      	bne.n	80047e8 <_strtod_l+0x30>
 800484a:	3201      	adds	r2, #1
 800484c:	e7c1      	b.n	80047d2 <_strtod_l+0x1a>
 800484e:	292d      	cmp	r1, #45	@ 0x2d
 8004850:	d1ca      	bne.n	80047e8 <_strtod_l+0x30>
 8004852:	2101      	movs	r1, #1
 8004854:	910e      	str	r1, [sp, #56]	@ 0x38
 8004856:	1c51      	adds	r1, r2, #1
 8004858:	9119      	str	r1, [sp, #100]	@ 0x64
 800485a:	7852      	ldrb	r2, [r2, #1]
 800485c:	2a00      	cmp	r2, #0
 800485e:	d1c5      	bne.n	80047ec <_strtod_l+0x34>
 8004860:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004862:	9419      	str	r4, [sp, #100]	@ 0x64
 8004864:	2b00      	cmp	r3, #0
 8004866:	f040 8570 	bne.w	800534a <_strtod_l+0xb92>
 800486a:	4652      	mov	r2, sl
 800486c:	465b      	mov	r3, fp
 800486e:	e7e5      	b.n	800483c <_strtod_l+0x84>
 8004870:	2100      	movs	r1, #0
 8004872:	e7ef      	b.n	8004854 <_strtod_l+0x9c>
 8004874:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004876:	b13a      	cbz	r2, 8004888 <_strtod_l+0xd0>
 8004878:	2135      	movs	r1, #53	@ 0x35
 800487a:	a81c      	add	r0, sp, #112	@ 0x70
 800487c:	f7ff ff3a 	bl	80046f4 <__copybits>
 8004880:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004882:	9805      	ldr	r0, [sp, #20]
 8004884:	f7ff fb10 	bl	8003ea8 <_Bfree>
 8004888:	3e01      	subs	r6, #1
 800488a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800488c:	2e04      	cmp	r6, #4
 800488e:	d806      	bhi.n	800489e <_strtod_l+0xe6>
 8004890:	e8df f006 	tbb	[pc, r6]
 8004894:	201d0314 	.word	0x201d0314
 8004898:	14          	.byte	0x14
 8004899:	00          	.byte	0x00
 800489a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800489e:	05e1      	lsls	r1, r4, #23
 80048a0:	bf48      	it	mi
 80048a2:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 80048a6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 80048aa:	0d1b      	lsrs	r3, r3, #20
 80048ac:	051b      	lsls	r3, r3, #20
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	d1bb      	bne.n	800482a <_strtod_l+0x72>
 80048b2:	f7fe fb2d 	bl	8002f10 <__errno>
 80048b6:	2322      	movs	r3, #34	@ 0x22
 80048b8:	6003      	str	r3, [r0, #0]
 80048ba:	e7b6      	b.n	800482a <_strtod_l+0x72>
 80048bc:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 80048c0:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 80048c4:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80048c8:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80048cc:	e7e7      	b.n	800489e <_strtod_l+0xe6>
 80048ce:	f8df b180 	ldr.w	fp, [pc, #384]	@ 8004a50 <_strtod_l+0x298>
 80048d2:	e7e4      	b.n	800489e <_strtod_l+0xe6>
 80048d4:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 80048d8:	f04f 3aff 	mov.w	sl, #4294967295
 80048dc:	e7df      	b.n	800489e <_strtod_l+0xe6>
 80048de:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80048e0:	1c5a      	adds	r2, r3, #1
 80048e2:	9219      	str	r2, [sp, #100]	@ 0x64
 80048e4:	785b      	ldrb	r3, [r3, #1]
 80048e6:	2b30      	cmp	r3, #48	@ 0x30
 80048e8:	d0f9      	beq.n	80048de <_strtod_l+0x126>
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d09d      	beq.n	800482a <_strtod_l+0x72>
 80048ee:	2301      	movs	r3, #1
 80048f0:	2700      	movs	r7, #0
 80048f2:	9308      	str	r3, [sp, #32]
 80048f4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80048f6:	930c      	str	r3, [sp, #48]	@ 0x30
 80048f8:	970b      	str	r7, [sp, #44]	@ 0x2c
 80048fa:	46b9      	mov	r9, r7
 80048fc:	220a      	movs	r2, #10
 80048fe:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8004900:	7805      	ldrb	r5, [r0, #0]
 8004902:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8004906:	b2d9      	uxtb	r1, r3
 8004908:	2909      	cmp	r1, #9
 800490a:	d928      	bls.n	800495e <_strtod_l+0x1a6>
 800490c:	494f      	ldr	r1, [pc, #316]	@ (8004a4c <_strtod_l+0x294>)
 800490e:	2201      	movs	r2, #1
 8004910:	f000 ffd6 	bl	80058c0 <strncmp>
 8004914:	2800      	cmp	r0, #0
 8004916:	d032      	beq.n	800497e <_strtod_l+0x1c6>
 8004918:	2000      	movs	r0, #0
 800491a:	462a      	mov	r2, r5
 800491c:	900a      	str	r0, [sp, #40]	@ 0x28
 800491e:	464d      	mov	r5, r9
 8004920:	4603      	mov	r3, r0
 8004922:	2a65      	cmp	r2, #101	@ 0x65
 8004924:	d001      	beq.n	800492a <_strtod_l+0x172>
 8004926:	2a45      	cmp	r2, #69	@ 0x45
 8004928:	d114      	bne.n	8004954 <_strtod_l+0x19c>
 800492a:	b91d      	cbnz	r5, 8004934 <_strtod_l+0x17c>
 800492c:	9a08      	ldr	r2, [sp, #32]
 800492e:	4302      	orrs	r2, r0
 8004930:	d096      	beq.n	8004860 <_strtod_l+0xa8>
 8004932:	2500      	movs	r5, #0
 8004934:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8004936:	1c62      	adds	r2, r4, #1
 8004938:	9219      	str	r2, [sp, #100]	@ 0x64
 800493a:	7862      	ldrb	r2, [r4, #1]
 800493c:	2a2b      	cmp	r2, #43	@ 0x2b
 800493e:	d07a      	beq.n	8004a36 <_strtod_l+0x27e>
 8004940:	2a2d      	cmp	r2, #45	@ 0x2d
 8004942:	d07e      	beq.n	8004a42 <_strtod_l+0x28a>
 8004944:	f04f 0c00 	mov.w	ip, #0
 8004948:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800494c:	2909      	cmp	r1, #9
 800494e:	f240 8085 	bls.w	8004a5c <_strtod_l+0x2a4>
 8004952:	9419      	str	r4, [sp, #100]	@ 0x64
 8004954:	f04f 0800 	mov.w	r8, #0
 8004958:	e0a5      	b.n	8004aa6 <_strtod_l+0x2ee>
 800495a:	2300      	movs	r3, #0
 800495c:	e7c8      	b.n	80048f0 <_strtod_l+0x138>
 800495e:	f1b9 0f08 	cmp.w	r9, #8
 8004962:	bfd8      	it	le
 8004964:	990b      	ldrle	r1, [sp, #44]	@ 0x2c
 8004966:	f100 0001 	add.w	r0, r0, #1
 800496a:	bfda      	itte	le
 800496c:	fb02 3301 	mlale	r3, r2, r1, r3
 8004970:	930b      	strle	r3, [sp, #44]	@ 0x2c
 8004972:	fb02 3707 	mlagt	r7, r2, r7, r3
 8004976:	f109 0901 	add.w	r9, r9, #1
 800497a:	9019      	str	r0, [sp, #100]	@ 0x64
 800497c:	e7bf      	b.n	80048fe <_strtod_l+0x146>
 800497e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004980:	1c5a      	adds	r2, r3, #1
 8004982:	9219      	str	r2, [sp, #100]	@ 0x64
 8004984:	785a      	ldrb	r2, [r3, #1]
 8004986:	f1b9 0f00 	cmp.w	r9, #0
 800498a:	d03b      	beq.n	8004a04 <_strtod_l+0x24c>
 800498c:	900a      	str	r0, [sp, #40]	@ 0x28
 800498e:	464d      	mov	r5, r9
 8004990:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 8004994:	2b09      	cmp	r3, #9
 8004996:	d912      	bls.n	80049be <_strtod_l+0x206>
 8004998:	2301      	movs	r3, #1
 800499a:	e7c2      	b.n	8004922 <_strtod_l+0x16a>
 800499c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800499e:	1c5a      	adds	r2, r3, #1
 80049a0:	9219      	str	r2, [sp, #100]	@ 0x64
 80049a2:	785a      	ldrb	r2, [r3, #1]
 80049a4:	3001      	adds	r0, #1
 80049a6:	2a30      	cmp	r2, #48	@ 0x30
 80049a8:	d0f8      	beq.n	800499c <_strtod_l+0x1e4>
 80049aa:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 80049ae:	2b08      	cmp	r3, #8
 80049b0:	f200 84d2 	bhi.w	8005358 <_strtod_l+0xba0>
 80049b4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80049b6:	900a      	str	r0, [sp, #40]	@ 0x28
 80049b8:	2000      	movs	r0, #0
 80049ba:	930c      	str	r3, [sp, #48]	@ 0x30
 80049bc:	4605      	mov	r5, r0
 80049be:	3a30      	subs	r2, #48	@ 0x30
 80049c0:	f100 0301 	add.w	r3, r0, #1
 80049c4:	d018      	beq.n	80049f8 <_strtod_l+0x240>
 80049c6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80049c8:	4419      	add	r1, r3
 80049ca:	910a      	str	r1, [sp, #40]	@ 0x28
 80049cc:	462e      	mov	r6, r5
 80049ce:	f04f 0e0a 	mov.w	lr, #10
 80049d2:	1c71      	adds	r1, r6, #1
 80049d4:	eba1 0c05 	sub.w	ip, r1, r5
 80049d8:	4563      	cmp	r3, ip
 80049da:	dc15      	bgt.n	8004a08 <_strtod_l+0x250>
 80049dc:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 80049e0:	182b      	adds	r3, r5, r0
 80049e2:	2b08      	cmp	r3, #8
 80049e4:	f105 0501 	add.w	r5, r5, #1
 80049e8:	4405      	add	r5, r0
 80049ea:	dc1a      	bgt.n	8004a22 <_strtod_l+0x26a>
 80049ec:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80049ee:	230a      	movs	r3, #10
 80049f0:	fb03 2301 	mla	r3, r3, r1, r2
 80049f4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80049f6:	2300      	movs	r3, #0
 80049f8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80049fa:	1c51      	adds	r1, r2, #1
 80049fc:	9119      	str	r1, [sp, #100]	@ 0x64
 80049fe:	7852      	ldrb	r2, [r2, #1]
 8004a00:	4618      	mov	r0, r3
 8004a02:	e7c5      	b.n	8004990 <_strtod_l+0x1d8>
 8004a04:	4648      	mov	r0, r9
 8004a06:	e7ce      	b.n	80049a6 <_strtod_l+0x1ee>
 8004a08:	2e08      	cmp	r6, #8
 8004a0a:	dc05      	bgt.n	8004a18 <_strtod_l+0x260>
 8004a0c:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8004a0e:	fb0e f606 	mul.w	r6, lr, r6
 8004a12:	960b      	str	r6, [sp, #44]	@ 0x2c
 8004a14:	460e      	mov	r6, r1
 8004a16:	e7dc      	b.n	80049d2 <_strtod_l+0x21a>
 8004a18:	2910      	cmp	r1, #16
 8004a1a:	bfd8      	it	le
 8004a1c:	fb0e f707 	mulle.w	r7, lr, r7
 8004a20:	e7f8      	b.n	8004a14 <_strtod_l+0x25c>
 8004a22:	2b0f      	cmp	r3, #15
 8004a24:	bfdc      	itt	le
 8004a26:	230a      	movle	r3, #10
 8004a28:	fb03 2707 	mlale	r7, r3, r7, r2
 8004a2c:	e7e3      	b.n	80049f6 <_strtod_l+0x23e>
 8004a2e:	2300      	movs	r3, #0
 8004a30:	930a      	str	r3, [sp, #40]	@ 0x28
 8004a32:	2301      	movs	r3, #1
 8004a34:	e77a      	b.n	800492c <_strtod_l+0x174>
 8004a36:	f04f 0c00 	mov.w	ip, #0
 8004a3a:	1ca2      	adds	r2, r4, #2
 8004a3c:	9219      	str	r2, [sp, #100]	@ 0x64
 8004a3e:	78a2      	ldrb	r2, [r4, #2]
 8004a40:	e782      	b.n	8004948 <_strtod_l+0x190>
 8004a42:	f04f 0c01 	mov.w	ip, #1
 8004a46:	e7f8      	b.n	8004a3a <_strtod_l+0x282>
 8004a48:	08006e3c 	.word	0x08006e3c
 8004a4c:	08006c73 	.word	0x08006c73
 8004a50:	7ff00000 	.word	0x7ff00000
 8004a54:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004a56:	1c51      	adds	r1, r2, #1
 8004a58:	9119      	str	r1, [sp, #100]	@ 0x64
 8004a5a:	7852      	ldrb	r2, [r2, #1]
 8004a5c:	2a30      	cmp	r2, #48	@ 0x30
 8004a5e:	d0f9      	beq.n	8004a54 <_strtod_l+0x29c>
 8004a60:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 8004a64:	2908      	cmp	r1, #8
 8004a66:	f63f af75 	bhi.w	8004954 <_strtod_l+0x19c>
 8004a6a:	3a30      	subs	r2, #48	@ 0x30
 8004a6c:	9209      	str	r2, [sp, #36]	@ 0x24
 8004a6e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004a70:	920f      	str	r2, [sp, #60]	@ 0x3c
 8004a72:	f04f 080a 	mov.w	r8, #10
 8004a76:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004a78:	1c56      	adds	r6, r2, #1
 8004a7a:	9619      	str	r6, [sp, #100]	@ 0x64
 8004a7c:	7852      	ldrb	r2, [r2, #1]
 8004a7e:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 8004a82:	f1be 0f09 	cmp.w	lr, #9
 8004a86:	d939      	bls.n	8004afc <_strtod_l+0x344>
 8004a88:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004a8a:	1a76      	subs	r6, r6, r1
 8004a8c:	2e08      	cmp	r6, #8
 8004a8e:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8004a92:	dc03      	bgt.n	8004a9c <_strtod_l+0x2e4>
 8004a94:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004a96:	4588      	cmp	r8, r1
 8004a98:	bfa8      	it	ge
 8004a9a:	4688      	movge	r8, r1
 8004a9c:	f1bc 0f00 	cmp.w	ip, #0
 8004aa0:	d001      	beq.n	8004aa6 <_strtod_l+0x2ee>
 8004aa2:	f1c8 0800 	rsb	r8, r8, #0
 8004aa6:	2d00      	cmp	r5, #0
 8004aa8:	d14e      	bne.n	8004b48 <_strtod_l+0x390>
 8004aaa:	9908      	ldr	r1, [sp, #32]
 8004aac:	4308      	orrs	r0, r1
 8004aae:	f47f aebc 	bne.w	800482a <_strtod_l+0x72>
 8004ab2:	2b00      	cmp	r3, #0
 8004ab4:	f47f aed4 	bne.w	8004860 <_strtod_l+0xa8>
 8004ab8:	2a69      	cmp	r2, #105	@ 0x69
 8004aba:	d028      	beq.n	8004b0e <_strtod_l+0x356>
 8004abc:	dc25      	bgt.n	8004b0a <_strtod_l+0x352>
 8004abe:	2a49      	cmp	r2, #73	@ 0x49
 8004ac0:	d025      	beq.n	8004b0e <_strtod_l+0x356>
 8004ac2:	2a4e      	cmp	r2, #78	@ 0x4e
 8004ac4:	f47f aecc 	bne.w	8004860 <_strtod_l+0xa8>
 8004ac8:	499a      	ldr	r1, [pc, #616]	@ (8004d34 <_strtod_l+0x57c>)
 8004aca:	a819      	add	r0, sp, #100	@ 0x64
 8004acc:	f001 f9ec 	bl	8005ea8 <__match>
 8004ad0:	2800      	cmp	r0, #0
 8004ad2:	f43f aec5 	beq.w	8004860 <_strtod_l+0xa8>
 8004ad6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004ad8:	781b      	ldrb	r3, [r3, #0]
 8004ada:	2b28      	cmp	r3, #40	@ 0x28
 8004adc:	d12e      	bne.n	8004b3c <_strtod_l+0x384>
 8004ade:	4996      	ldr	r1, [pc, #600]	@ (8004d38 <_strtod_l+0x580>)
 8004ae0:	aa1c      	add	r2, sp, #112	@ 0x70
 8004ae2:	a819      	add	r0, sp, #100	@ 0x64
 8004ae4:	f001 f9f4 	bl	8005ed0 <__hexnan>
 8004ae8:	2805      	cmp	r0, #5
 8004aea:	d127      	bne.n	8004b3c <_strtod_l+0x384>
 8004aec:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004aee:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8004af2:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8004af6:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8004afa:	e696      	b.n	800482a <_strtod_l+0x72>
 8004afc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004afe:	fb08 2101 	mla	r1, r8, r1, r2
 8004b02:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8004b06:	9209      	str	r2, [sp, #36]	@ 0x24
 8004b08:	e7b5      	b.n	8004a76 <_strtod_l+0x2be>
 8004b0a:	2a6e      	cmp	r2, #110	@ 0x6e
 8004b0c:	e7da      	b.n	8004ac4 <_strtod_l+0x30c>
 8004b0e:	498b      	ldr	r1, [pc, #556]	@ (8004d3c <_strtod_l+0x584>)
 8004b10:	a819      	add	r0, sp, #100	@ 0x64
 8004b12:	f001 f9c9 	bl	8005ea8 <__match>
 8004b16:	2800      	cmp	r0, #0
 8004b18:	f43f aea2 	beq.w	8004860 <_strtod_l+0xa8>
 8004b1c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004b1e:	4988      	ldr	r1, [pc, #544]	@ (8004d40 <_strtod_l+0x588>)
 8004b20:	3b01      	subs	r3, #1
 8004b22:	a819      	add	r0, sp, #100	@ 0x64
 8004b24:	9319      	str	r3, [sp, #100]	@ 0x64
 8004b26:	f001 f9bf 	bl	8005ea8 <__match>
 8004b2a:	b910      	cbnz	r0, 8004b32 <_strtod_l+0x37a>
 8004b2c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004b2e:	3301      	adds	r3, #1
 8004b30:	9319      	str	r3, [sp, #100]	@ 0x64
 8004b32:	f8df b21c 	ldr.w	fp, [pc, #540]	@ 8004d50 <_strtod_l+0x598>
 8004b36:	f04f 0a00 	mov.w	sl, #0
 8004b3a:	e676      	b.n	800482a <_strtod_l+0x72>
 8004b3c:	4881      	ldr	r0, [pc, #516]	@ (8004d44 <_strtod_l+0x58c>)
 8004b3e:	f000 feef 	bl	8005920 <nan>
 8004b42:	ec5b ab10 	vmov	sl, fp, d0
 8004b46:	e670      	b.n	800482a <_strtod_l+0x72>
 8004b48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004b4a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8004b4c:	eba8 0303 	sub.w	r3, r8, r3
 8004b50:	f1b9 0f00 	cmp.w	r9, #0
 8004b54:	bf08      	it	eq
 8004b56:	46a9      	moveq	r9, r5
 8004b58:	2d10      	cmp	r5, #16
 8004b5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8004b5c:	462c      	mov	r4, r5
 8004b5e:	bfa8      	it	ge
 8004b60:	2410      	movge	r4, #16
 8004b62:	f7fb fcd7 	bl	8000514 <__aeabi_ui2d>
 8004b66:	2d09      	cmp	r5, #9
 8004b68:	4682      	mov	sl, r0
 8004b6a:	468b      	mov	fp, r1
 8004b6c:	dc13      	bgt.n	8004b96 <_strtod_l+0x3de>
 8004b6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	f43f ae5a 	beq.w	800482a <_strtod_l+0x72>
 8004b76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b78:	dd78      	ble.n	8004c6c <_strtod_l+0x4b4>
 8004b7a:	2b16      	cmp	r3, #22
 8004b7c:	dc5f      	bgt.n	8004c3e <_strtod_l+0x486>
 8004b7e:	4972      	ldr	r1, [pc, #456]	@ (8004d48 <_strtod_l+0x590>)
 8004b80:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004b84:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b88:	4652      	mov	r2, sl
 8004b8a:	465b      	mov	r3, fp
 8004b8c:	f7fb fd3c 	bl	8000608 <__aeabi_dmul>
 8004b90:	4682      	mov	sl, r0
 8004b92:	468b      	mov	fp, r1
 8004b94:	e649      	b.n	800482a <_strtod_l+0x72>
 8004b96:	4b6c      	ldr	r3, [pc, #432]	@ (8004d48 <_strtod_l+0x590>)
 8004b98:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004b9c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004ba0:	f7fb fd32 	bl	8000608 <__aeabi_dmul>
 8004ba4:	4682      	mov	sl, r0
 8004ba6:	4638      	mov	r0, r7
 8004ba8:	468b      	mov	fp, r1
 8004baa:	f7fb fcb3 	bl	8000514 <__aeabi_ui2d>
 8004bae:	4602      	mov	r2, r0
 8004bb0:	460b      	mov	r3, r1
 8004bb2:	4650      	mov	r0, sl
 8004bb4:	4659      	mov	r1, fp
 8004bb6:	f7fb fb71 	bl	800029c <__adddf3>
 8004bba:	2d0f      	cmp	r5, #15
 8004bbc:	4682      	mov	sl, r0
 8004bbe:	468b      	mov	fp, r1
 8004bc0:	ddd5      	ble.n	8004b6e <_strtod_l+0x3b6>
 8004bc2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004bc4:	1b2c      	subs	r4, r5, r4
 8004bc6:	441c      	add	r4, r3
 8004bc8:	2c00      	cmp	r4, #0
 8004bca:	f340 8093 	ble.w	8004cf4 <_strtod_l+0x53c>
 8004bce:	f014 030f 	ands.w	r3, r4, #15
 8004bd2:	d00a      	beq.n	8004bea <_strtod_l+0x432>
 8004bd4:	495c      	ldr	r1, [pc, #368]	@ (8004d48 <_strtod_l+0x590>)
 8004bd6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004bda:	4652      	mov	r2, sl
 8004bdc:	465b      	mov	r3, fp
 8004bde:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004be2:	f7fb fd11 	bl	8000608 <__aeabi_dmul>
 8004be6:	4682      	mov	sl, r0
 8004be8:	468b      	mov	fp, r1
 8004bea:	f034 040f 	bics.w	r4, r4, #15
 8004bee:	d073      	beq.n	8004cd8 <_strtod_l+0x520>
 8004bf0:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8004bf4:	dd49      	ble.n	8004c8a <_strtod_l+0x4d2>
 8004bf6:	2400      	movs	r4, #0
 8004bf8:	46a0      	mov	r8, r4
 8004bfa:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004bfc:	46a1      	mov	r9, r4
 8004bfe:	9a05      	ldr	r2, [sp, #20]
 8004c00:	f8df b14c 	ldr.w	fp, [pc, #332]	@ 8004d50 <_strtod_l+0x598>
 8004c04:	2322      	movs	r3, #34	@ 0x22
 8004c06:	6013      	str	r3, [r2, #0]
 8004c08:	f04f 0a00 	mov.w	sl, #0
 8004c0c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	f43f ae0b 	beq.w	800482a <_strtod_l+0x72>
 8004c14:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004c16:	9805      	ldr	r0, [sp, #20]
 8004c18:	f7ff f946 	bl	8003ea8 <_Bfree>
 8004c1c:	9805      	ldr	r0, [sp, #20]
 8004c1e:	4649      	mov	r1, r9
 8004c20:	f7ff f942 	bl	8003ea8 <_Bfree>
 8004c24:	9805      	ldr	r0, [sp, #20]
 8004c26:	4641      	mov	r1, r8
 8004c28:	f7ff f93e 	bl	8003ea8 <_Bfree>
 8004c2c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8004c2e:	9805      	ldr	r0, [sp, #20]
 8004c30:	f7ff f93a 	bl	8003ea8 <_Bfree>
 8004c34:	9805      	ldr	r0, [sp, #20]
 8004c36:	4621      	mov	r1, r4
 8004c38:	f7ff f936 	bl	8003ea8 <_Bfree>
 8004c3c:	e5f5      	b.n	800482a <_strtod_l+0x72>
 8004c3e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004c40:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8004c44:	4293      	cmp	r3, r2
 8004c46:	dbbc      	blt.n	8004bc2 <_strtod_l+0x40a>
 8004c48:	4c3f      	ldr	r4, [pc, #252]	@ (8004d48 <_strtod_l+0x590>)
 8004c4a:	f1c5 050f 	rsb	r5, r5, #15
 8004c4e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004c52:	4652      	mov	r2, sl
 8004c54:	465b      	mov	r3, fp
 8004c56:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004c5a:	f7fb fcd5 	bl	8000608 <__aeabi_dmul>
 8004c5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004c60:	1b5d      	subs	r5, r3, r5
 8004c62:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004c66:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004c6a:	e78f      	b.n	8004b8c <_strtod_l+0x3d4>
 8004c6c:	3316      	adds	r3, #22
 8004c6e:	dba8      	blt.n	8004bc2 <_strtod_l+0x40a>
 8004c70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004c72:	eba3 0808 	sub.w	r8, r3, r8
 8004c76:	4b34      	ldr	r3, [pc, #208]	@ (8004d48 <_strtod_l+0x590>)
 8004c78:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8004c7c:	e9d8 2300 	ldrd	r2, r3, [r8]
 8004c80:	4650      	mov	r0, sl
 8004c82:	4659      	mov	r1, fp
 8004c84:	f7fb fdea 	bl	800085c <__aeabi_ddiv>
 8004c88:	e782      	b.n	8004b90 <_strtod_l+0x3d8>
 8004c8a:	2300      	movs	r3, #0
 8004c8c:	4f2f      	ldr	r7, [pc, #188]	@ (8004d4c <_strtod_l+0x594>)
 8004c8e:	1124      	asrs	r4, r4, #4
 8004c90:	4650      	mov	r0, sl
 8004c92:	4659      	mov	r1, fp
 8004c94:	461e      	mov	r6, r3
 8004c96:	2c01      	cmp	r4, #1
 8004c98:	dc21      	bgt.n	8004cde <_strtod_l+0x526>
 8004c9a:	b10b      	cbz	r3, 8004ca0 <_strtod_l+0x4e8>
 8004c9c:	4682      	mov	sl, r0
 8004c9e:	468b      	mov	fp, r1
 8004ca0:	492a      	ldr	r1, [pc, #168]	@ (8004d4c <_strtod_l+0x594>)
 8004ca2:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8004ca6:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004caa:	4652      	mov	r2, sl
 8004cac:	465b      	mov	r3, fp
 8004cae:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004cb2:	f7fb fca9 	bl	8000608 <__aeabi_dmul>
 8004cb6:	4b26      	ldr	r3, [pc, #152]	@ (8004d50 <_strtod_l+0x598>)
 8004cb8:	460a      	mov	r2, r1
 8004cba:	400b      	ands	r3, r1
 8004cbc:	4925      	ldr	r1, [pc, #148]	@ (8004d54 <_strtod_l+0x59c>)
 8004cbe:	428b      	cmp	r3, r1
 8004cc0:	4682      	mov	sl, r0
 8004cc2:	d898      	bhi.n	8004bf6 <_strtod_l+0x43e>
 8004cc4:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004cc8:	428b      	cmp	r3, r1
 8004cca:	bf86      	itte	hi
 8004ccc:	f8df b088 	ldrhi.w	fp, [pc, #136]	@ 8004d58 <_strtod_l+0x5a0>
 8004cd0:	f04f 3aff 	movhi.w	sl, #4294967295
 8004cd4:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8004cd8:	2300      	movs	r3, #0
 8004cda:	9308      	str	r3, [sp, #32]
 8004cdc:	e076      	b.n	8004dcc <_strtod_l+0x614>
 8004cde:	07e2      	lsls	r2, r4, #31
 8004ce0:	d504      	bpl.n	8004cec <_strtod_l+0x534>
 8004ce2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004ce6:	f7fb fc8f 	bl	8000608 <__aeabi_dmul>
 8004cea:	2301      	movs	r3, #1
 8004cec:	3601      	adds	r6, #1
 8004cee:	1064      	asrs	r4, r4, #1
 8004cf0:	3708      	adds	r7, #8
 8004cf2:	e7d0      	b.n	8004c96 <_strtod_l+0x4de>
 8004cf4:	d0f0      	beq.n	8004cd8 <_strtod_l+0x520>
 8004cf6:	4264      	negs	r4, r4
 8004cf8:	f014 020f 	ands.w	r2, r4, #15
 8004cfc:	d00a      	beq.n	8004d14 <_strtod_l+0x55c>
 8004cfe:	4b12      	ldr	r3, [pc, #72]	@ (8004d48 <_strtod_l+0x590>)
 8004d00:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004d04:	4650      	mov	r0, sl
 8004d06:	4659      	mov	r1, fp
 8004d08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d0c:	f7fb fda6 	bl	800085c <__aeabi_ddiv>
 8004d10:	4682      	mov	sl, r0
 8004d12:	468b      	mov	fp, r1
 8004d14:	1124      	asrs	r4, r4, #4
 8004d16:	d0df      	beq.n	8004cd8 <_strtod_l+0x520>
 8004d18:	2c1f      	cmp	r4, #31
 8004d1a:	dd1f      	ble.n	8004d5c <_strtod_l+0x5a4>
 8004d1c:	2400      	movs	r4, #0
 8004d1e:	46a0      	mov	r8, r4
 8004d20:	940b      	str	r4, [sp, #44]	@ 0x2c
 8004d22:	46a1      	mov	r9, r4
 8004d24:	9a05      	ldr	r2, [sp, #20]
 8004d26:	2322      	movs	r3, #34	@ 0x22
 8004d28:	f04f 0a00 	mov.w	sl, #0
 8004d2c:	f04f 0b00 	mov.w	fp, #0
 8004d30:	6013      	str	r3, [r2, #0]
 8004d32:	e76b      	b.n	8004c0c <_strtod_l+0x454>
 8004d34:	08006b61 	.word	0x08006b61
 8004d38:	08006e28 	.word	0x08006e28
 8004d3c:	08006b59 	.word	0x08006b59
 8004d40:	08006b90 	.word	0x08006b90
 8004d44:	08006cc9 	.word	0x08006cc9
 8004d48:	08006d60 	.word	0x08006d60
 8004d4c:	08006d38 	.word	0x08006d38
 8004d50:	7ff00000 	.word	0x7ff00000
 8004d54:	7ca00000 	.word	0x7ca00000
 8004d58:	7fefffff 	.word	0x7fefffff
 8004d5c:	f014 0310 	ands.w	r3, r4, #16
 8004d60:	bf18      	it	ne
 8004d62:	236a      	movne	r3, #106	@ 0x6a
 8004d64:	4ea9      	ldr	r6, [pc, #676]	@ (800500c <_strtod_l+0x854>)
 8004d66:	9308      	str	r3, [sp, #32]
 8004d68:	4650      	mov	r0, sl
 8004d6a:	4659      	mov	r1, fp
 8004d6c:	2300      	movs	r3, #0
 8004d6e:	07e7      	lsls	r7, r4, #31
 8004d70:	d504      	bpl.n	8004d7c <_strtod_l+0x5c4>
 8004d72:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004d76:	f7fb fc47 	bl	8000608 <__aeabi_dmul>
 8004d7a:	2301      	movs	r3, #1
 8004d7c:	1064      	asrs	r4, r4, #1
 8004d7e:	f106 0608 	add.w	r6, r6, #8
 8004d82:	d1f4      	bne.n	8004d6e <_strtod_l+0x5b6>
 8004d84:	b10b      	cbz	r3, 8004d8a <_strtod_l+0x5d2>
 8004d86:	4682      	mov	sl, r0
 8004d88:	468b      	mov	fp, r1
 8004d8a:	9b08      	ldr	r3, [sp, #32]
 8004d8c:	b1b3      	cbz	r3, 8004dbc <_strtod_l+0x604>
 8004d8e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004d92:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	4659      	mov	r1, fp
 8004d9a:	dd0f      	ble.n	8004dbc <_strtod_l+0x604>
 8004d9c:	2b1f      	cmp	r3, #31
 8004d9e:	dd56      	ble.n	8004e4e <_strtod_l+0x696>
 8004da0:	2b34      	cmp	r3, #52	@ 0x34
 8004da2:	bfde      	ittt	le
 8004da4:	f04f 33ff 	movle.w	r3, #4294967295
 8004da8:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8004dac:	4093      	lslle	r3, r2
 8004dae:	f04f 0a00 	mov.w	sl, #0
 8004db2:	bfcc      	ite	gt
 8004db4:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004db8:	ea03 0b01 	andle.w	fp, r3, r1
 8004dbc:	2200      	movs	r2, #0
 8004dbe:	2300      	movs	r3, #0
 8004dc0:	4650      	mov	r0, sl
 8004dc2:	4659      	mov	r1, fp
 8004dc4:	f7fb fe88 	bl	8000ad8 <__aeabi_dcmpeq>
 8004dc8:	2800      	cmp	r0, #0
 8004dca:	d1a7      	bne.n	8004d1c <_strtod_l+0x564>
 8004dcc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004dce:	9300      	str	r3, [sp, #0]
 8004dd0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004dd2:	9805      	ldr	r0, [sp, #20]
 8004dd4:	462b      	mov	r3, r5
 8004dd6:	464a      	mov	r2, r9
 8004dd8:	f7ff f8ce 	bl	8003f78 <__s2b>
 8004ddc:	900b      	str	r0, [sp, #44]	@ 0x2c
 8004dde:	2800      	cmp	r0, #0
 8004de0:	f43f af09 	beq.w	8004bf6 <_strtod_l+0x43e>
 8004de4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004de6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004de8:	2a00      	cmp	r2, #0
 8004dea:	eba3 0308 	sub.w	r3, r3, r8
 8004dee:	bfa8      	it	ge
 8004df0:	2300      	movge	r3, #0
 8004df2:	9312      	str	r3, [sp, #72]	@ 0x48
 8004df4:	2400      	movs	r4, #0
 8004df6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8004dfa:	9316      	str	r3, [sp, #88]	@ 0x58
 8004dfc:	46a0      	mov	r8, r4
 8004dfe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004e00:	9805      	ldr	r0, [sp, #20]
 8004e02:	6859      	ldr	r1, [r3, #4]
 8004e04:	f7ff f810 	bl	8003e28 <_Balloc>
 8004e08:	4681      	mov	r9, r0
 8004e0a:	2800      	cmp	r0, #0
 8004e0c:	f43f aef7 	beq.w	8004bfe <_strtod_l+0x446>
 8004e10:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004e12:	691a      	ldr	r2, [r3, #16]
 8004e14:	3202      	adds	r2, #2
 8004e16:	f103 010c 	add.w	r1, r3, #12
 8004e1a:	0092      	lsls	r2, r2, #2
 8004e1c:	300c      	adds	r0, #12
 8004e1e:	f000 fd71 	bl	8005904 <memcpy>
 8004e22:	ec4b ab10 	vmov	d0, sl, fp
 8004e26:	9805      	ldr	r0, [sp, #20]
 8004e28:	aa1c      	add	r2, sp, #112	@ 0x70
 8004e2a:	a91b      	add	r1, sp, #108	@ 0x6c
 8004e2c:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8004e30:	f7ff fbd6 	bl	80045e0 <__d2b>
 8004e34:	901a      	str	r0, [sp, #104]	@ 0x68
 8004e36:	2800      	cmp	r0, #0
 8004e38:	f43f aee1 	beq.w	8004bfe <_strtod_l+0x446>
 8004e3c:	9805      	ldr	r0, [sp, #20]
 8004e3e:	2101      	movs	r1, #1
 8004e40:	f7ff f930 	bl	80040a4 <__i2b>
 8004e44:	4680      	mov	r8, r0
 8004e46:	b948      	cbnz	r0, 8004e5c <_strtod_l+0x6a4>
 8004e48:	f04f 0800 	mov.w	r8, #0
 8004e4c:	e6d7      	b.n	8004bfe <_strtod_l+0x446>
 8004e4e:	f04f 32ff 	mov.w	r2, #4294967295
 8004e52:	fa02 f303 	lsl.w	r3, r2, r3
 8004e56:	ea03 0a0a 	and.w	sl, r3, sl
 8004e5a:	e7af      	b.n	8004dbc <_strtod_l+0x604>
 8004e5c:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8004e5e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8004e60:	2d00      	cmp	r5, #0
 8004e62:	bfab      	itete	ge
 8004e64:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8004e66:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8004e68:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8004e6a:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8004e6c:	bfac      	ite	ge
 8004e6e:	18ef      	addge	r7, r5, r3
 8004e70:	1b5e      	sublt	r6, r3, r5
 8004e72:	9b08      	ldr	r3, [sp, #32]
 8004e74:	1aed      	subs	r5, r5, r3
 8004e76:	4415      	add	r5, r2
 8004e78:	4b65      	ldr	r3, [pc, #404]	@ (8005010 <_strtod_l+0x858>)
 8004e7a:	3d01      	subs	r5, #1
 8004e7c:	429d      	cmp	r5, r3
 8004e7e:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8004e82:	da50      	bge.n	8004f26 <_strtod_l+0x76e>
 8004e84:	1b5b      	subs	r3, r3, r5
 8004e86:	2b1f      	cmp	r3, #31
 8004e88:	eba2 0203 	sub.w	r2, r2, r3
 8004e8c:	f04f 0101 	mov.w	r1, #1
 8004e90:	dc3d      	bgt.n	8004f0e <_strtod_l+0x756>
 8004e92:	fa01 f303 	lsl.w	r3, r1, r3
 8004e96:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004e98:	2300      	movs	r3, #0
 8004e9a:	9310      	str	r3, [sp, #64]	@ 0x40
 8004e9c:	18bd      	adds	r5, r7, r2
 8004e9e:	9b08      	ldr	r3, [sp, #32]
 8004ea0:	42af      	cmp	r7, r5
 8004ea2:	4416      	add	r6, r2
 8004ea4:	441e      	add	r6, r3
 8004ea6:	463b      	mov	r3, r7
 8004ea8:	bfa8      	it	ge
 8004eaa:	462b      	movge	r3, r5
 8004eac:	42b3      	cmp	r3, r6
 8004eae:	bfa8      	it	ge
 8004eb0:	4633      	movge	r3, r6
 8004eb2:	2b00      	cmp	r3, #0
 8004eb4:	bfc2      	ittt	gt
 8004eb6:	1aed      	subgt	r5, r5, r3
 8004eb8:	1af6      	subgt	r6, r6, r3
 8004eba:	1aff      	subgt	r7, r7, r3
 8004ebc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	dd16      	ble.n	8004ef0 <_strtod_l+0x738>
 8004ec2:	4641      	mov	r1, r8
 8004ec4:	9805      	ldr	r0, [sp, #20]
 8004ec6:	461a      	mov	r2, r3
 8004ec8:	f7ff f9a4 	bl	8004214 <__pow5mult>
 8004ecc:	4680      	mov	r8, r0
 8004ece:	2800      	cmp	r0, #0
 8004ed0:	d0ba      	beq.n	8004e48 <_strtod_l+0x690>
 8004ed2:	4601      	mov	r1, r0
 8004ed4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004ed6:	9805      	ldr	r0, [sp, #20]
 8004ed8:	f7ff f8fa 	bl	80040d0 <__multiply>
 8004edc:	900a      	str	r0, [sp, #40]	@ 0x28
 8004ede:	2800      	cmp	r0, #0
 8004ee0:	f43f ae8d 	beq.w	8004bfe <_strtod_l+0x446>
 8004ee4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004ee6:	9805      	ldr	r0, [sp, #20]
 8004ee8:	f7fe ffde 	bl	8003ea8 <_Bfree>
 8004eec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004eee:	931a      	str	r3, [sp, #104]	@ 0x68
 8004ef0:	2d00      	cmp	r5, #0
 8004ef2:	dc1d      	bgt.n	8004f30 <_strtod_l+0x778>
 8004ef4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	dd23      	ble.n	8004f42 <_strtod_l+0x78a>
 8004efa:	4649      	mov	r1, r9
 8004efc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8004efe:	9805      	ldr	r0, [sp, #20]
 8004f00:	f7ff f988 	bl	8004214 <__pow5mult>
 8004f04:	4681      	mov	r9, r0
 8004f06:	b9e0      	cbnz	r0, 8004f42 <_strtod_l+0x78a>
 8004f08:	f04f 0900 	mov.w	r9, #0
 8004f0c:	e677      	b.n	8004bfe <_strtod_l+0x446>
 8004f0e:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8004f12:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8004f16:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8004f1a:	35e2      	adds	r5, #226	@ 0xe2
 8004f1c:	fa01 f305 	lsl.w	r3, r1, r5
 8004f20:	9310      	str	r3, [sp, #64]	@ 0x40
 8004f22:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004f24:	e7ba      	b.n	8004e9c <_strtod_l+0x6e4>
 8004f26:	2300      	movs	r3, #0
 8004f28:	9310      	str	r3, [sp, #64]	@ 0x40
 8004f2a:	2301      	movs	r3, #1
 8004f2c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004f2e:	e7b5      	b.n	8004e9c <_strtod_l+0x6e4>
 8004f30:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004f32:	9805      	ldr	r0, [sp, #20]
 8004f34:	462a      	mov	r2, r5
 8004f36:	f7ff f9c7 	bl	80042c8 <__lshift>
 8004f3a:	901a      	str	r0, [sp, #104]	@ 0x68
 8004f3c:	2800      	cmp	r0, #0
 8004f3e:	d1d9      	bne.n	8004ef4 <_strtod_l+0x73c>
 8004f40:	e65d      	b.n	8004bfe <_strtod_l+0x446>
 8004f42:	2e00      	cmp	r6, #0
 8004f44:	dd07      	ble.n	8004f56 <_strtod_l+0x79e>
 8004f46:	4649      	mov	r1, r9
 8004f48:	9805      	ldr	r0, [sp, #20]
 8004f4a:	4632      	mov	r2, r6
 8004f4c:	f7ff f9bc 	bl	80042c8 <__lshift>
 8004f50:	4681      	mov	r9, r0
 8004f52:	2800      	cmp	r0, #0
 8004f54:	d0d8      	beq.n	8004f08 <_strtod_l+0x750>
 8004f56:	2f00      	cmp	r7, #0
 8004f58:	dd08      	ble.n	8004f6c <_strtod_l+0x7b4>
 8004f5a:	4641      	mov	r1, r8
 8004f5c:	9805      	ldr	r0, [sp, #20]
 8004f5e:	463a      	mov	r2, r7
 8004f60:	f7ff f9b2 	bl	80042c8 <__lshift>
 8004f64:	4680      	mov	r8, r0
 8004f66:	2800      	cmp	r0, #0
 8004f68:	f43f ae49 	beq.w	8004bfe <_strtod_l+0x446>
 8004f6c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004f6e:	9805      	ldr	r0, [sp, #20]
 8004f70:	464a      	mov	r2, r9
 8004f72:	f7ff fa31 	bl	80043d8 <__mdiff>
 8004f76:	4604      	mov	r4, r0
 8004f78:	2800      	cmp	r0, #0
 8004f7a:	f43f ae40 	beq.w	8004bfe <_strtod_l+0x446>
 8004f7e:	68c3      	ldr	r3, [r0, #12]
 8004f80:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004f82:	2300      	movs	r3, #0
 8004f84:	60c3      	str	r3, [r0, #12]
 8004f86:	4641      	mov	r1, r8
 8004f88:	f7ff fa0a 	bl	80043a0 <__mcmp>
 8004f8c:	2800      	cmp	r0, #0
 8004f8e:	da45      	bge.n	800501c <_strtod_l+0x864>
 8004f90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004f92:	ea53 030a 	orrs.w	r3, r3, sl
 8004f96:	d16b      	bne.n	8005070 <_strtod_l+0x8b8>
 8004f98:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	d167      	bne.n	8005070 <_strtod_l+0x8b8>
 8004fa0:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004fa4:	0d1b      	lsrs	r3, r3, #20
 8004fa6:	051b      	lsls	r3, r3, #20
 8004fa8:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004fac:	d960      	bls.n	8005070 <_strtod_l+0x8b8>
 8004fae:	6963      	ldr	r3, [r4, #20]
 8004fb0:	b913      	cbnz	r3, 8004fb8 <_strtod_l+0x800>
 8004fb2:	6923      	ldr	r3, [r4, #16]
 8004fb4:	2b01      	cmp	r3, #1
 8004fb6:	dd5b      	ble.n	8005070 <_strtod_l+0x8b8>
 8004fb8:	4621      	mov	r1, r4
 8004fba:	2201      	movs	r2, #1
 8004fbc:	9805      	ldr	r0, [sp, #20]
 8004fbe:	f7ff f983 	bl	80042c8 <__lshift>
 8004fc2:	4641      	mov	r1, r8
 8004fc4:	4604      	mov	r4, r0
 8004fc6:	f7ff f9eb 	bl	80043a0 <__mcmp>
 8004fca:	2800      	cmp	r0, #0
 8004fcc:	dd50      	ble.n	8005070 <_strtod_l+0x8b8>
 8004fce:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004fd2:	9a08      	ldr	r2, [sp, #32]
 8004fd4:	0d1b      	lsrs	r3, r3, #20
 8004fd6:	051b      	lsls	r3, r3, #20
 8004fd8:	2a00      	cmp	r2, #0
 8004fda:	d06a      	beq.n	80050b2 <_strtod_l+0x8fa>
 8004fdc:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004fe0:	d867      	bhi.n	80050b2 <_strtod_l+0x8fa>
 8004fe2:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8004fe6:	f67f ae9d 	bls.w	8004d24 <_strtod_l+0x56c>
 8004fea:	4b0a      	ldr	r3, [pc, #40]	@ (8005014 <_strtod_l+0x85c>)
 8004fec:	4650      	mov	r0, sl
 8004fee:	4659      	mov	r1, fp
 8004ff0:	2200      	movs	r2, #0
 8004ff2:	f7fb fb09 	bl	8000608 <__aeabi_dmul>
 8004ff6:	4b08      	ldr	r3, [pc, #32]	@ (8005018 <_strtod_l+0x860>)
 8004ff8:	400b      	ands	r3, r1
 8004ffa:	4682      	mov	sl, r0
 8004ffc:	468b      	mov	fp, r1
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	f47f ae08 	bne.w	8004c14 <_strtod_l+0x45c>
 8005004:	9a05      	ldr	r2, [sp, #20]
 8005006:	2322      	movs	r3, #34	@ 0x22
 8005008:	6013      	str	r3, [r2, #0]
 800500a:	e603      	b.n	8004c14 <_strtod_l+0x45c>
 800500c:	08006e50 	.word	0x08006e50
 8005010:	fffffc02 	.word	0xfffffc02
 8005014:	39500000 	.word	0x39500000
 8005018:	7ff00000 	.word	0x7ff00000
 800501c:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8005020:	d165      	bne.n	80050ee <_strtod_l+0x936>
 8005022:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8005024:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005028:	b35a      	cbz	r2, 8005082 <_strtod_l+0x8ca>
 800502a:	4a9f      	ldr	r2, [pc, #636]	@ (80052a8 <_strtod_l+0xaf0>)
 800502c:	4293      	cmp	r3, r2
 800502e:	d12b      	bne.n	8005088 <_strtod_l+0x8d0>
 8005030:	9b08      	ldr	r3, [sp, #32]
 8005032:	4651      	mov	r1, sl
 8005034:	b303      	cbz	r3, 8005078 <_strtod_l+0x8c0>
 8005036:	4b9d      	ldr	r3, [pc, #628]	@ (80052ac <_strtod_l+0xaf4>)
 8005038:	465a      	mov	r2, fp
 800503a:	4013      	ands	r3, r2
 800503c:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8005040:	f04f 32ff 	mov.w	r2, #4294967295
 8005044:	d81b      	bhi.n	800507e <_strtod_l+0x8c6>
 8005046:	0d1b      	lsrs	r3, r3, #20
 8005048:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800504c:	fa02 f303 	lsl.w	r3, r2, r3
 8005050:	4299      	cmp	r1, r3
 8005052:	d119      	bne.n	8005088 <_strtod_l+0x8d0>
 8005054:	4b96      	ldr	r3, [pc, #600]	@ (80052b0 <_strtod_l+0xaf8>)
 8005056:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005058:	429a      	cmp	r2, r3
 800505a:	d102      	bne.n	8005062 <_strtod_l+0x8aa>
 800505c:	3101      	adds	r1, #1
 800505e:	f43f adce 	beq.w	8004bfe <_strtod_l+0x446>
 8005062:	4b92      	ldr	r3, [pc, #584]	@ (80052ac <_strtod_l+0xaf4>)
 8005064:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005066:	401a      	ands	r2, r3
 8005068:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800506c:	f04f 0a00 	mov.w	sl, #0
 8005070:	9b08      	ldr	r3, [sp, #32]
 8005072:	2b00      	cmp	r3, #0
 8005074:	d1b9      	bne.n	8004fea <_strtod_l+0x832>
 8005076:	e5cd      	b.n	8004c14 <_strtod_l+0x45c>
 8005078:	f04f 33ff 	mov.w	r3, #4294967295
 800507c:	e7e8      	b.n	8005050 <_strtod_l+0x898>
 800507e:	4613      	mov	r3, r2
 8005080:	e7e6      	b.n	8005050 <_strtod_l+0x898>
 8005082:	ea53 030a 	orrs.w	r3, r3, sl
 8005086:	d0a2      	beq.n	8004fce <_strtod_l+0x816>
 8005088:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800508a:	b1db      	cbz	r3, 80050c4 <_strtod_l+0x90c>
 800508c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800508e:	4213      	tst	r3, r2
 8005090:	d0ee      	beq.n	8005070 <_strtod_l+0x8b8>
 8005092:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005094:	9a08      	ldr	r2, [sp, #32]
 8005096:	4650      	mov	r0, sl
 8005098:	4659      	mov	r1, fp
 800509a:	b1bb      	cbz	r3, 80050cc <_strtod_l+0x914>
 800509c:	f7ff fb6e 	bl	800477c <sulp>
 80050a0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80050a4:	ec53 2b10 	vmov	r2, r3, d0
 80050a8:	f7fb f8f8 	bl	800029c <__adddf3>
 80050ac:	4682      	mov	sl, r0
 80050ae:	468b      	mov	fp, r1
 80050b0:	e7de      	b.n	8005070 <_strtod_l+0x8b8>
 80050b2:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 80050b6:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80050ba:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80050be:	f04f 3aff 	mov.w	sl, #4294967295
 80050c2:	e7d5      	b.n	8005070 <_strtod_l+0x8b8>
 80050c4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80050c6:	ea13 0f0a 	tst.w	r3, sl
 80050ca:	e7e1      	b.n	8005090 <_strtod_l+0x8d8>
 80050cc:	f7ff fb56 	bl	800477c <sulp>
 80050d0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80050d4:	ec53 2b10 	vmov	r2, r3, d0
 80050d8:	f7fb f8de 	bl	8000298 <__aeabi_dsub>
 80050dc:	2200      	movs	r2, #0
 80050de:	2300      	movs	r3, #0
 80050e0:	4682      	mov	sl, r0
 80050e2:	468b      	mov	fp, r1
 80050e4:	f7fb fcf8 	bl	8000ad8 <__aeabi_dcmpeq>
 80050e8:	2800      	cmp	r0, #0
 80050ea:	d0c1      	beq.n	8005070 <_strtod_l+0x8b8>
 80050ec:	e61a      	b.n	8004d24 <_strtod_l+0x56c>
 80050ee:	4641      	mov	r1, r8
 80050f0:	4620      	mov	r0, r4
 80050f2:	f7ff facd 	bl	8004690 <__ratio>
 80050f6:	ec57 6b10 	vmov	r6, r7, d0
 80050fa:	2200      	movs	r2, #0
 80050fc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8005100:	4630      	mov	r0, r6
 8005102:	4639      	mov	r1, r7
 8005104:	f7fb fcfc 	bl	8000b00 <__aeabi_dcmple>
 8005108:	2800      	cmp	r0, #0
 800510a:	d06f      	beq.n	80051ec <_strtod_l+0xa34>
 800510c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800510e:	2b00      	cmp	r3, #0
 8005110:	d17a      	bne.n	8005208 <_strtod_l+0xa50>
 8005112:	f1ba 0f00 	cmp.w	sl, #0
 8005116:	d158      	bne.n	80051ca <_strtod_l+0xa12>
 8005118:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800511a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800511e:	2b00      	cmp	r3, #0
 8005120:	d15a      	bne.n	80051d8 <_strtod_l+0xa20>
 8005122:	4b64      	ldr	r3, [pc, #400]	@ (80052b4 <_strtod_l+0xafc>)
 8005124:	2200      	movs	r2, #0
 8005126:	4630      	mov	r0, r6
 8005128:	4639      	mov	r1, r7
 800512a:	f7fb fcdf 	bl	8000aec <__aeabi_dcmplt>
 800512e:	2800      	cmp	r0, #0
 8005130:	d159      	bne.n	80051e6 <_strtod_l+0xa2e>
 8005132:	4630      	mov	r0, r6
 8005134:	4639      	mov	r1, r7
 8005136:	4b60      	ldr	r3, [pc, #384]	@ (80052b8 <_strtod_l+0xb00>)
 8005138:	2200      	movs	r2, #0
 800513a:	f7fb fa65 	bl	8000608 <__aeabi_dmul>
 800513e:	4606      	mov	r6, r0
 8005140:	460f      	mov	r7, r1
 8005142:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8005146:	9606      	str	r6, [sp, #24]
 8005148:	9307      	str	r3, [sp, #28]
 800514a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800514e:	4d57      	ldr	r5, [pc, #348]	@ (80052ac <_strtod_l+0xaf4>)
 8005150:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005154:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005156:	401d      	ands	r5, r3
 8005158:	4b58      	ldr	r3, [pc, #352]	@ (80052bc <_strtod_l+0xb04>)
 800515a:	429d      	cmp	r5, r3
 800515c:	f040 80b2 	bne.w	80052c4 <_strtod_l+0xb0c>
 8005160:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005162:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8005166:	ec4b ab10 	vmov	d0, sl, fp
 800516a:	f7ff f9c9 	bl	8004500 <__ulp>
 800516e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005172:	ec51 0b10 	vmov	r0, r1, d0
 8005176:	f7fb fa47 	bl	8000608 <__aeabi_dmul>
 800517a:	4652      	mov	r2, sl
 800517c:	465b      	mov	r3, fp
 800517e:	f7fb f88d 	bl	800029c <__adddf3>
 8005182:	460b      	mov	r3, r1
 8005184:	4949      	ldr	r1, [pc, #292]	@ (80052ac <_strtod_l+0xaf4>)
 8005186:	4a4e      	ldr	r2, [pc, #312]	@ (80052c0 <_strtod_l+0xb08>)
 8005188:	4019      	ands	r1, r3
 800518a:	4291      	cmp	r1, r2
 800518c:	4682      	mov	sl, r0
 800518e:	d942      	bls.n	8005216 <_strtod_l+0xa5e>
 8005190:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005192:	4b47      	ldr	r3, [pc, #284]	@ (80052b0 <_strtod_l+0xaf8>)
 8005194:	429a      	cmp	r2, r3
 8005196:	d103      	bne.n	80051a0 <_strtod_l+0x9e8>
 8005198:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800519a:	3301      	adds	r3, #1
 800519c:	f43f ad2f 	beq.w	8004bfe <_strtod_l+0x446>
 80051a0:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 80052b0 <_strtod_l+0xaf8>
 80051a4:	f04f 3aff 	mov.w	sl, #4294967295
 80051a8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80051aa:	9805      	ldr	r0, [sp, #20]
 80051ac:	f7fe fe7c 	bl	8003ea8 <_Bfree>
 80051b0:	9805      	ldr	r0, [sp, #20]
 80051b2:	4649      	mov	r1, r9
 80051b4:	f7fe fe78 	bl	8003ea8 <_Bfree>
 80051b8:	9805      	ldr	r0, [sp, #20]
 80051ba:	4641      	mov	r1, r8
 80051bc:	f7fe fe74 	bl	8003ea8 <_Bfree>
 80051c0:	9805      	ldr	r0, [sp, #20]
 80051c2:	4621      	mov	r1, r4
 80051c4:	f7fe fe70 	bl	8003ea8 <_Bfree>
 80051c8:	e619      	b.n	8004dfe <_strtod_l+0x646>
 80051ca:	f1ba 0f01 	cmp.w	sl, #1
 80051ce:	d103      	bne.n	80051d8 <_strtod_l+0xa20>
 80051d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80051d2:	2b00      	cmp	r3, #0
 80051d4:	f43f ada6 	beq.w	8004d24 <_strtod_l+0x56c>
 80051d8:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 8005288 <_strtod_l+0xad0>
 80051dc:	4f35      	ldr	r7, [pc, #212]	@ (80052b4 <_strtod_l+0xafc>)
 80051de:	ed8d 7b06 	vstr	d7, [sp, #24]
 80051e2:	2600      	movs	r6, #0
 80051e4:	e7b1      	b.n	800514a <_strtod_l+0x992>
 80051e6:	4f34      	ldr	r7, [pc, #208]	@ (80052b8 <_strtod_l+0xb00>)
 80051e8:	2600      	movs	r6, #0
 80051ea:	e7aa      	b.n	8005142 <_strtod_l+0x98a>
 80051ec:	4b32      	ldr	r3, [pc, #200]	@ (80052b8 <_strtod_l+0xb00>)
 80051ee:	4630      	mov	r0, r6
 80051f0:	4639      	mov	r1, r7
 80051f2:	2200      	movs	r2, #0
 80051f4:	f7fb fa08 	bl	8000608 <__aeabi_dmul>
 80051f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80051fa:	4606      	mov	r6, r0
 80051fc:	460f      	mov	r7, r1
 80051fe:	2b00      	cmp	r3, #0
 8005200:	d09f      	beq.n	8005142 <_strtod_l+0x98a>
 8005202:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8005206:	e7a0      	b.n	800514a <_strtod_l+0x992>
 8005208:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 8005290 <_strtod_l+0xad8>
 800520c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8005210:	ec57 6b17 	vmov	r6, r7, d7
 8005214:	e799      	b.n	800514a <_strtod_l+0x992>
 8005216:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800521a:	9b08      	ldr	r3, [sp, #32]
 800521c:	f8cd b028 	str.w	fp, [sp, #40]	@ 0x28
 8005220:	2b00      	cmp	r3, #0
 8005222:	d1c1      	bne.n	80051a8 <_strtod_l+0x9f0>
 8005224:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005228:	0d1b      	lsrs	r3, r3, #20
 800522a:	051b      	lsls	r3, r3, #20
 800522c:	429d      	cmp	r5, r3
 800522e:	d1bb      	bne.n	80051a8 <_strtod_l+0x9f0>
 8005230:	4630      	mov	r0, r6
 8005232:	4639      	mov	r1, r7
 8005234:	f7fb fd30 	bl	8000c98 <__aeabi_d2lz>
 8005238:	f7fb f9b8 	bl	80005ac <__aeabi_l2d>
 800523c:	4602      	mov	r2, r0
 800523e:	460b      	mov	r3, r1
 8005240:	4630      	mov	r0, r6
 8005242:	4639      	mov	r1, r7
 8005244:	f7fb f828 	bl	8000298 <__aeabi_dsub>
 8005248:	460b      	mov	r3, r1
 800524a:	4602      	mov	r2, r0
 800524c:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8005250:	f3cb 0613 	ubfx	r6, fp, #0, #20
 8005254:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005256:	ea46 060a 	orr.w	r6, r6, sl
 800525a:	431e      	orrs	r6, r3
 800525c:	d06f      	beq.n	800533e <_strtod_l+0xb86>
 800525e:	a30e      	add	r3, pc, #56	@ (adr r3, 8005298 <_strtod_l+0xae0>)
 8005260:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005264:	f7fb fc42 	bl	8000aec <__aeabi_dcmplt>
 8005268:	2800      	cmp	r0, #0
 800526a:	f47f acd3 	bne.w	8004c14 <_strtod_l+0x45c>
 800526e:	a30c      	add	r3, pc, #48	@ (adr r3, 80052a0 <_strtod_l+0xae8>)
 8005270:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005274:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005278:	f7fb fc56 	bl	8000b28 <__aeabi_dcmpgt>
 800527c:	2800      	cmp	r0, #0
 800527e:	d093      	beq.n	80051a8 <_strtod_l+0x9f0>
 8005280:	e4c8      	b.n	8004c14 <_strtod_l+0x45c>
 8005282:	bf00      	nop
 8005284:	f3af 8000 	nop.w
 8005288:	00000000 	.word	0x00000000
 800528c:	bff00000 	.word	0xbff00000
 8005290:	00000000 	.word	0x00000000
 8005294:	3ff00000 	.word	0x3ff00000
 8005298:	94a03595 	.word	0x94a03595
 800529c:	3fdfffff 	.word	0x3fdfffff
 80052a0:	35afe535 	.word	0x35afe535
 80052a4:	3fe00000 	.word	0x3fe00000
 80052a8:	000fffff 	.word	0x000fffff
 80052ac:	7ff00000 	.word	0x7ff00000
 80052b0:	7fefffff 	.word	0x7fefffff
 80052b4:	3ff00000 	.word	0x3ff00000
 80052b8:	3fe00000 	.word	0x3fe00000
 80052bc:	7fe00000 	.word	0x7fe00000
 80052c0:	7c9fffff 	.word	0x7c9fffff
 80052c4:	9b08      	ldr	r3, [sp, #32]
 80052c6:	b323      	cbz	r3, 8005312 <_strtod_l+0xb5a>
 80052c8:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 80052cc:	d821      	bhi.n	8005312 <_strtod_l+0xb5a>
 80052ce:	a328      	add	r3, pc, #160	@ (adr r3, 8005370 <_strtod_l+0xbb8>)
 80052d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052d4:	4630      	mov	r0, r6
 80052d6:	4639      	mov	r1, r7
 80052d8:	f7fb fc12 	bl	8000b00 <__aeabi_dcmple>
 80052dc:	b1a0      	cbz	r0, 8005308 <_strtod_l+0xb50>
 80052de:	4639      	mov	r1, r7
 80052e0:	4630      	mov	r0, r6
 80052e2:	f7fb fc69 	bl	8000bb8 <__aeabi_d2uiz>
 80052e6:	2801      	cmp	r0, #1
 80052e8:	bf38      	it	cc
 80052ea:	2001      	movcc	r0, #1
 80052ec:	f7fb f912 	bl	8000514 <__aeabi_ui2d>
 80052f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80052f2:	4606      	mov	r6, r0
 80052f4:	460f      	mov	r7, r1
 80052f6:	b9fb      	cbnz	r3, 8005338 <_strtod_l+0xb80>
 80052f8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80052fc:	9014      	str	r0, [sp, #80]	@ 0x50
 80052fe:	9315      	str	r3, [sp, #84]	@ 0x54
 8005300:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 8005304:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005308:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800530a:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800530e:	1b5b      	subs	r3, r3, r5
 8005310:	9311      	str	r3, [sp, #68]	@ 0x44
 8005312:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8005316:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800531a:	f7ff f8f1 	bl	8004500 <__ulp>
 800531e:	4650      	mov	r0, sl
 8005320:	ec53 2b10 	vmov	r2, r3, d0
 8005324:	4659      	mov	r1, fp
 8005326:	f7fb f96f 	bl	8000608 <__aeabi_dmul>
 800532a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800532e:	f7fa ffb5 	bl	800029c <__adddf3>
 8005332:	4682      	mov	sl, r0
 8005334:	468b      	mov	fp, r1
 8005336:	e770      	b.n	800521a <_strtod_l+0xa62>
 8005338:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800533c:	e7e0      	b.n	8005300 <_strtod_l+0xb48>
 800533e:	a30e      	add	r3, pc, #56	@ (adr r3, 8005378 <_strtod_l+0xbc0>)
 8005340:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005344:	f7fb fbd2 	bl	8000aec <__aeabi_dcmplt>
 8005348:	e798      	b.n	800527c <_strtod_l+0xac4>
 800534a:	2300      	movs	r3, #0
 800534c:	930e      	str	r3, [sp, #56]	@ 0x38
 800534e:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 8005350:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8005352:	6013      	str	r3, [r2, #0]
 8005354:	f7ff ba6d 	b.w	8004832 <_strtod_l+0x7a>
 8005358:	2a65      	cmp	r2, #101	@ 0x65
 800535a:	f43f ab68 	beq.w	8004a2e <_strtod_l+0x276>
 800535e:	2a45      	cmp	r2, #69	@ 0x45
 8005360:	f43f ab65 	beq.w	8004a2e <_strtod_l+0x276>
 8005364:	2301      	movs	r3, #1
 8005366:	f7ff bba0 	b.w	8004aaa <_strtod_l+0x2f2>
 800536a:	bf00      	nop
 800536c:	f3af 8000 	nop.w
 8005370:	ffc00000 	.word	0xffc00000
 8005374:	41dfffff 	.word	0x41dfffff
 8005378:	94a03595 	.word	0x94a03595
 800537c:	3fcfffff 	.word	0x3fcfffff

08005380 <_strtod_r>:
 8005380:	4b01      	ldr	r3, [pc, #4]	@ (8005388 <_strtod_r+0x8>)
 8005382:	f7ff ba19 	b.w	80047b8 <_strtod_l>
 8005386:	bf00      	nop
 8005388:	20000060 	.word	0x20000060

0800538c <_strtol_l.isra.0>:
 800538c:	2b24      	cmp	r3, #36	@ 0x24
 800538e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005392:	4686      	mov	lr, r0
 8005394:	4690      	mov	r8, r2
 8005396:	d801      	bhi.n	800539c <_strtol_l.isra.0+0x10>
 8005398:	2b01      	cmp	r3, #1
 800539a:	d106      	bne.n	80053aa <_strtol_l.isra.0+0x1e>
 800539c:	f7fd fdb8 	bl	8002f10 <__errno>
 80053a0:	2316      	movs	r3, #22
 80053a2:	6003      	str	r3, [r0, #0]
 80053a4:	2000      	movs	r0, #0
 80053a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053aa:	4834      	ldr	r0, [pc, #208]	@ (800547c <_strtol_l.isra.0+0xf0>)
 80053ac:	460d      	mov	r5, r1
 80053ae:	462a      	mov	r2, r5
 80053b0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80053b4:	5d06      	ldrb	r6, [r0, r4]
 80053b6:	f016 0608 	ands.w	r6, r6, #8
 80053ba:	d1f8      	bne.n	80053ae <_strtol_l.isra.0+0x22>
 80053bc:	2c2d      	cmp	r4, #45	@ 0x2d
 80053be:	d110      	bne.n	80053e2 <_strtol_l.isra.0+0x56>
 80053c0:	782c      	ldrb	r4, [r5, #0]
 80053c2:	2601      	movs	r6, #1
 80053c4:	1c95      	adds	r5, r2, #2
 80053c6:	f033 0210 	bics.w	r2, r3, #16
 80053ca:	d115      	bne.n	80053f8 <_strtol_l.isra.0+0x6c>
 80053cc:	2c30      	cmp	r4, #48	@ 0x30
 80053ce:	d10d      	bne.n	80053ec <_strtol_l.isra.0+0x60>
 80053d0:	782a      	ldrb	r2, [r5, #0]
 80053d2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80053d6:	2a58      	cmp	r2, #88	@ 0x58
 80053d8:	d108      	bne.n	80053ec <_strtol_l.isra.0+0x60>
 80053da:	786c      	ldrb	r4, [r5, #1]
 80053dc:	3502      	adds	r5, #2
 80053de:	2310      	movs	r3, #16
 80053e0:	e00a      	b.n	80053f8 <_strtol_l.isra.0+0x6c>
 80053e2:	2c2b      	cmp	r4, #43	@ 0x2b
 80053e4:	bf04      	itt	eq
 80053e6:	782c      	ldrbeq	r4, [r5, #0]
 80053e8:	1c95      	addeq	r5, r2, #2
 80053ea:	e7ec      	b.n	80053c6 <_strtol_l.isra.0+0x3a>
 80053ec:	2b00      	cmp	r3, #0
 80053ee:	d1f6      	bne.n	80053de <_strtol_l.isra.0+0x52>
 80053f0:	2c30      	cmp	r4, #48	@ 0x30
 80053f2:	bf14      	ite	ne
 80053f4:	230a      	movne	r3, #10
 80053f6:	2308      	moveq	r3, #8
 80053f8:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 80053fc:	f10c 3cff 	add.w	ip, ip, #4294967295
 8005400:	2200      	movs	r2, #0
 8005402:	fbbc f9f3 	udiv	r9, ip, r3
 8005406:	4610      	mov	r0, r2
 8005408:	fb03 ca19 	mls	sl, r3, r9, ip
 800540c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005410:	2f09      	cmp	r7, #9
 8005412:	d80f      	bhi.n	8005434 <_strtol_l.isra.0+0xa8>
 8005414:	463c      	mov	r4, r7
 8005416:	42a3      	cmp	r3, r4
 8005418:	dd1b      	ble.n	8005452 <_strtol_l.isra.0+0xc6>
 800541a:	1c57      	adds	r7, r2, #1
 800541c:	d007      	beq.n	800542e <_strtol_l.isra.0+0xa2>
 800541e:	4581      	cmp	r9, r0
 8005420:	d314      	bcc.n	800544c <_strtol_l.isra.0+0xc0>
 8005422:	d101      	bne.n	8005428 <_strtol_l.isra.0+0x9c>
 8005424:	45a2      	cmp	sl, r4
 8005426:	db11      	blt.n	800544c <_strtol_l.isra.0+0xc0>
 8005428:	fb00 4003 	mla	r0, r0, r3, r4
 800542c:	2201      	movs	r2, #1
 800542e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005432:	e7eb      	b.n	800540c <_strtol_l.isra.0+0x80>
 8005434:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005438:	2f19      	cmp	r7, #25
 800543a:	d801      	bhi.n	8005440 <_strtol_l.isra.0+0xb4>
 800543c:	3c37      	subs	r4, #55	@ 0x37
 800543e:	e7ea      	b.n	8005416 <_strtol_l.isra.0+0x8a>
 8005440:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 8005444:	2f19      	cmp	r7, #25
 8005446:	d804      	bhi.n	8005452 <_strtol_l.isra.0+0xc6>
 8005448:	3c57      	subs	r4, #87	@ 0x57
 800544a:	e7e4      	b.n	8005416 <_strtol_l.isra.0+0x8a>
 800544c:	f04f 32ff 	mov.w	r2, #4294967295
 8005450:	e7ed      	b.n	800542e <_strtol_l.isra.0+0xa2>
 8005452:	1c53      	adds	r3, r2, #1
 8005454:	d108      	bne.n	8005468 <_strtol_l.isra.0+0xdc>
 8005456:	2322      	movs	r3, #34	@ 0x22
 8005458:	f8ce 3000 	str.w	r3, [lr]
 800545c:	4660      	mov	r0, ip
 800545e:	f1b8 0f00 	cmp.w	r8, #0
 8005462:	d0a0      	beq.n	80053a6 <_strtol_l.isra.0+0x1a>
 8005464:	1e69      	subs	r1, r5, #1
 8005466:	e006      	b.n	8005476 <_strtol_l.isra.0+0xea>
 8005468:	b106      	cbz	r6, 800546c <_strtol_l.isra.0+0xe0>
 800546a:	4240      	negs	r0, r0
 800546c:	f1b8 0f00 	cmp.w	r8, #0
 8005470:	d099      	beq.n	80053a6 <_strtol_l.isra.0+0x1a>
 8005472:	2a00      	cmp	r2, #0
 8005474:	d1f6      	bne.n	8005464 <_strtol_l.isra.0+0xd8>
 8005476:	f8c8 1000 	str.w	r1, [r8]
 800547a:	e794      	b.n	80053a6 <_strtol_l.isra.0+0x1a>
 800547c:	08006e79 	.word	0x08006e79

08005480 <_strtol_r>:
 8005480:	f7ff bf84 	b.w	800538c <_strtol_l.isra.0>

08005484 <__ssputs_r>:
 8005484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005488:	688e      	ldr	r6, [r1, #8]
 800548a:	461f      	mov	r7, r3
 800548c:	42be      	cmp	r6, r7
 800548e:	680b      	ldr	r3, [r1, #0]
 8005490:	4682      	mov	sl, r0
 8005492:	460c      	mov	r4, r1
 8005494:	4690      	mov	r8, r2
 8005496:	d82d      	bhi.n	80054f4 <__ssputs_r+0x70>
 8005498:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800549c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80054a0:	d026      	beq.n	80054f0 <__ssputs_r+0x6c>
 80054a2:	6965      	ldr	r5, [r4, #20]
 80054a4:	6909      	ldr	r1, [r1, #16]
 80054a6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80054aa:	eba3 0901 	sub.w	r9, r3, r1
 80054ae:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80054b2:	1c7b      	adds	r3, r7, #1
 80054b4:	444b      	add	r3, r9
 80054b6:	106d      	asrs	r5, r5, #1
 80054b8:	429d      	cmp	r5, r3
 80054ba:	bf38      	it	cc
 80054bc:	461d      	movcc	r5, r3
 80054be:	0553      	lsls	r3, r2, #21
 80054c0:	d527      	bpl.n	8005512 <__ssputs_r+0x8e>
 80054c2:	4629      	mov	r1, r5
 80054c4:	f7fe fc24 	bl	8003d10 <_malloc_r>
 80054c8:	4606      	mov	r6, r0
 80054ca:	b360      	cbz	r0, 8005526 <__ssputs_r+0xa2>
 80054cc:	6921      	ldr	r1, [r4, #16]
 80054ce:	464a      	mov	r2, r9
 80054d0:	f000 fa18 	bl	8005904 <memcpy>
 80054d4:	89a3      	ldrh	r3, [r4, #12]
 80054d6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80054da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80054de:	81a3      	strh	r3, [r4, #12]
 80054e0:	6126      	str	r6, [r4, #16]
 80054e2:	6165      	str	r5, [r4, #20]
 80054e4:	444e      	add	r6, r9
 80054e6:	eba5 0509 	sub.w	r5, r5, r9
 80054ea:	6026      	str	r6, [r4, #0]
 80054ec:	60a5      	str	r5, [r4, #8]
 80054ee:	463e      	mov	r6, r7
 80054f0:	42be      	cmp	r6, r7
 80054f2:	d900      	bls.n	80054f6 <__ssputs_r+0x72>
 80054f4:	463e      	mov	r6, r7
 80054f6:	6820      	ldr	r0, [r4, #0]
 80054f8:	4632      	mov	r2, r6
 80054fa:	4641      	mov	r1, r8
 80054fc:	f000 f9c6 	bl	800588c <memmove>
 8005500:	68a3      	ldr	r3, [r4, #8]
 8005502:	1b9b      	subs	r3, r3, r6
 8005504:	60a3      	str	r3, [r4, #8]
 8005506:	6823      	ldr	r3, [r4, #0]
 8005508:	4433      	add	r3, r6
 800550a:	6023      	str	r3, [r4, #0]
 800550c:	2000      	movs	r0, #0
 800550e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005512:	462a      	mov	r2, r5
 8005514:	f000 fd89 	bl	800602a <_realloc_r>
 8005518:	4606      	mov	r6, r0
 800551a:	2800      	cmp	r0, #0
 800551c:	d1e0      	bne.n	80054e0 <__ssputs_r+0x5c>
 800551e:	6921      	ldr	r1, [r4, #16]
 8005520:	4650      	mov	r0, sl
 8005522:	f7fe fb81 	bl	8003c28 <_free_r>
 8005526:	230c      	movs	r3, #12
 8005528:	f8ca 3000 	str.w	r3, [sl]
 800552c:	89a3      	ldrh	r3, [r4, #12]
 800552e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005532:	81a3      	strh	r3, [r4, #12]
 8005534:	f04f 30ff 	mov.w	r0, #4294967295
 8005538:	e7e9      	b.n	800550e <__ssputs_r+0x8a>
	...

0800553c <_svfiprintf_r>:
 800553c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005540:	4698      	mov	r8, r3
 8005542:	898b      	ldrh	r3, [r1, #12]
 8005544:	061b      	lsls	r3, r3, #24
 8005546:	b09d      	sub	sp, #116	@ 0x74
 8005548:	4607      	mov	r7, r0
 800554a:	460d      	mov	r5, r1
 800554c:	4614      	mov	r4, r2
 800554e:	d510      	bpl.n	8005572 <_svfiprintf_r+0x36>
 8005550:	690b      	ldr	r3, [r1, #16]
 8005552:	b973      	cbnz	r3, 8005572 <_svfiprintf_r+0x36>
 8005554:	2140      	movs	r1, #64	@ 0x40
 8005556:	f7fe fbdb 	bl	8003d10 <_malloc_r>
 800555a:	6028      	str	r0, [r5, #0]
 800555c:	6128      	str	r0, [r5, #16]
 800555e:	b930      	cbnz	r0, 800556e <_svfiprintf_r+0x32>
 8005560:	230c      	movs	r3, #12
 8005562:	603b      	str	r3, [r7, #0]
 8005564:	f04f 30ff 	mov.w	r0, #4294967295
 8005568:	b01d      	add	sp, #116	@ 0x74
 800556a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800556e:	2340      	movs	r3, #64	@ 0x40
 8005570:	616b      	str	r3, [r5, #20]
 8005572:	2300      	movs	r3, #0
 8005574:	9309      	str	r3, [sp, #36]	@ 0x24
 8005576:	2320      	movs	r3, #32
 8005578:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800557c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005580:	2330      	movs	r3, #48	@ 0x30
 8005582:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005720 <_svfiprintf_r+0x1e4>
 8005586:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800558a:	f04f 0901 	mov.w	r9, #1
 800558e:	4623      	mov	r3, r4
 8005590:	469a      	mov	sl, r3
 8005592:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005596:	b10a      	cbz	r2, 800559c <_svfiprintf_r+0x60>
 8005598:	2a25      	cmp	r2, #37	@ 0x25
 800559a:	d1f9      	bne.n	8005590 <_svfiprintf_r+0x54>
 800559c:	ebba 0b04 	subs.w	fp, sl, r4
 80055a0:	d00b      	beq.n	80055ba <_svfiprintf_r+0x7e>
 80055a2:	465b      	mov	r3, fp
 80055a4:	4622      	mov	r2, r4
 80055a6:	4629      	mov	r1, r5
 80055a8:	4638      	mov	r0, r7
 80055aa:	f7ff ff6b 	bl	8005484 <__ssputs_r>
 80055ae:	3001      	adds	r0, #1
 80055b0:	f000 80a7 	beq.w	8005702 <_svfiprintf_r+0x1c6>
 80055b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80055b6:	445a      	add	r2, fp
 80055b8:	9209      	str	r2, [sp, #36]	@ 0x24
 80055ba:	f89a 3000 	ldrb.w	r3, [sl]
 80055be:	2b00      	cmp	r3, #0
 80055c0:	f000 809f 	beq.w	8005702 <_svfiprintf_r+0x1c6>
 80055c4:	2300      	movs	r3, #0
 80055c6:	f04f 32ff 	mov.w	r2, #4294967295
 80055ca:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80055ce:	f10a 0a01 	add.w	sl, sl, #1
 80055d2:	9304      	str	r3, [sp, #16]
 80055d4:	9307      	str	r3, [sp, #28]
 80055d6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80055da:	931a      	str	r3, [sp, #104]	@ 0x68
 80055dc:	4654      	mov	r4, sl
 80055de:	2205      	movs	r2, #5
 80055e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80055e4:	484e      	ldr	r0, [pc, #312]	@ (8005720 <_svfiprintf_r+0x1e4>)
 80055e6:	f7fa fdfb 	bl	80001e0 <memchr>
 80055ea:	9a04      	ldr	r2, [sp, #16]
 80055ec:	b9d8      	cbnz	r0, 8005626 <_svfiprintf_r+0xea>
 80055ee:	06d0      	lsls	r0, r2, #27
 80055f0:	bf44      	itt	mi
 80055f2:	2320      	movmi	r3, #32
 80055f4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80055f8:	0711      	lsls	r1, r2, #28
 80055fa:	bf44      	itt	mi
 80055fc:	232b      	movmi	r3, #43	@ 0x2b
 80055fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005602:	f89a 3000 	ldrb.w	r3, [sl]
 8005606:	2b2a      	cmp	r3, #42	@ 0x2a
 8005608:	d015      	beq.n	8005636 <_svfiprintf_r+0xfa>
 800560a:	9a07      	ldr	r2, [sp, #28]
 800560c:	4654      	mov	r4, sl
 800560e:	2000      	movs	r0, #0
 8005610:	f04f 0c0a 	mov.w	ip, #10
 8005614:	4621      	mov	r1, r4
 8005616:	f811 3b01 	ldrb.w	r3, [r1], #1
 800561a:	3b30      	subs	r3, #48	@ 0x30
 800561c:	2b09      	cmp	r3, #9
 800561e:	d94b      	bls.n	80056b8 <_svfiprintf_r+0x17c>
 8005620:	b1b0      	cbz	r0, 8005650 <_svfiprintf_r+0x114>
 8005622:	9207      	str	r2, [sp, #28]
 8005624:	e014      	b.n	8005650 <_svfiprintf_r+0x114>
 8005626:	eba0 0308 	sub.w	r3, r0, r8
 800562a:	fa09 f303 	lsl.w	r3, r9, r3
 800562e:	4313      	orrs	r3, r2
 8005630:	9304      	str	r3, [sp, #16]
 8005632:	46a2      	mov	sl, r4
 8005634:	e7d2      	b.n	80055dc <_svfiprintf_r+0xa0>
 8005636:	9b03      	ldr	r3, [sp, #12]
 8005638:	1d19      	adds	r1, r3, #4
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	9103      	str	r1, [sp, #12]
 800563e:	2b00      	cmp	r3, #0
 8005640:	bfbb      	ittet	lt
 8005642:	425b      	neglt	r3, r3
 8005644:	f042 0202 	orrlt.w	r2, r2, #2
 8005648:	9307      	strge	r3, [sp, #28]
 800564a:	9307      	strlt	r3, [sp, #28]
 800564c:	bfb8      	it	lt
 800564e:	9204      	strlt	r2, [sp, #16]
 8005650:	7823      	ldrb	r3, [r4, #0]
 8005652:	2b2e      	cmp	r3, #46	@ 0x2e
 8005654:	d10a      	bne.n	800566c <_svfiprintf_r+0x130>
 8005656:	7863      	ldrb	r3, [r4, #1]
 8005658:	2b2a      	cmp	r3, #42	@ 0x2a
 800565a:	d132      	bne.n	80056c2 <_svfiprintf_r+0x186>
 800565c:	9b03      	ldr	r3, [sp, #12]
 800565e:	1d1a      	adds	r2, r3, #4
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	9203      	str	r2, [sp, #12]
 8005664:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005668:	3402      	adds	r4, #2
 800566a:	9305      	str	r3, [sp, #20]
 800566c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005730 <_svfiprintf_r+0x1f4>
 8005670:	7821      	ldrb	r1, [r4, #0]
 8005672:	2203      	movs	r2, #3
 8005674:	4650      	mov	r0, sl
 8005676:	f7fa fdb3 	bl	80001e0 <memchr>
 800567a:	b138      	cbz	r0, 800568c <_svfiprintf_r+0x150>
 800567c:	9b04      	ldr	r3, [sp, #16]
 800567e:	eba0 000a 	sub.w	r0, r0, sl
 8005682:	2240      	movs	r2, #64	@ 0x40
 8005684:	4082      	lsls	r2, r0
 8005686:	4313      	orrs	r3, r2
 8005688:	3401      	adds	r4, #1
 800568a:	9304      	str	r3, [sp, #16]
 800568c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005690:	4824      	ldr	r0, [pc, #144]	@ (8005724 <_svfiprintf_r+0x1e8>)
 8005692:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005696:	2206      	movs	r2, #6
 8005698:	f7fa fda2 	bl	80001e0 <memchr>
 800569c:	2800      	cmp	r0, #0
 800569e:	d036      	beq.n	800570e <_svfiprintf_r+0x1d2>
 80056a0:	4b21      	ldr	r3, [pc, #132]	@ (8005728 <_svfiprintf_r+0x1ec>)
 80056a2:	bb1b      	cbnz	r3, 80056ec <_svfiprintf_r+0x1b0>
 80056a4:	9b03      	ldr	r3, [sp, #12]
 80056a6:	3307      	adds	r3, #7
 80056a8:	f023 0307 	bic.w	r3, r3, #7
 80056ac:	3308      	adds	r3, #8
 80056ae:	9303      	str	r3, [sp, #12]
 80056b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80056b2:	4433      	add	r3, r6
 80056b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80056b6:	e76a      	b.n	800558e <_svfiprintf_r+0x52>
 80056b8:	fb0c 3202 	mla	r2, ip, r2, r3
 80056bc:	460c      	mov	r4, r1
 80056be:	2001      	movs	r0, #1
 80056c0:	e7a8      	b.n	8005614 <_svfiprintf_r+0xd8>
 80056c2:	2300      	movs	r3, #0
 80056c4:	3401      	adds	r4, #1
 80056c6:	9305      	str	r3, [sp, #20]
 80056c8:	4619      	mov	r1, r3
 80056ca:	f04f 0c0a 	mov.w	ip, #10
 80056ce:	4620      	mov	r0, r4
 80056d0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80056d4:	3a30      	subs	r2, #48	@ 0x30
 80056d6:	2a09      	cmp	r2, #9
 80056d8:	d903      	bls.n	80056e2 <_svfiprintf_r+0x1a6>
 80056da:	2b00      	cmp	r3, #0
 80056dc:	d0c6      	beq.n	800566c <_svfiprintf_r+0x130>
 80056de:	9105      	str	r1, [sp, #20]
 80056e0:	e7c4      	b.n	800566c <_svfiprintf_r+0x130>
 80056e2:	fb0c 2101 	mla	r1, ip, r1, r2
 80056e6:	4604      	mov	r4, r0
 80056e8:	2301      	movs	r3, #1
 80056ea:	e7f0      	b.n	80056ce <_svfiprintf_r+0x192>
 80056ec:	ab03      	add	r3, sp, #12
 80056ee:	9300      	str	r3, [sp, #0]
 80056f0:	462a      	mov	r2, r5
 80056f2:	4b0e      	ldr	r3, [pc, #56]	@ (800572c <_svfiprintf_r+0x1f0>)
 80056f4:	a904      	add	r1, sp, #16
 80056f6:	4638      	mov	r0, r7
 80056f8:	f7fc fccc 	bl	8002094 <_printf_float>
 80056fc:	1c42      	adds	r2, r0, #1
 80056fe:	4606      	mov	r6, r0
 8005700:	d1d6      	bne.n	80056b0 <_svfiprintf_r+0x174>
 8005702:	89ab      	ldrh	r3, [r5, #12]
 8005704:	065b      	lsls	r3, r3, #25
 8005706:	f53f af2d 	bmi.w	8005564 <_svfiprintf_r+0x28>
 800570a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800570c:	e72c      	b.n	8005568 <_svfiprintf_r+0x2c>
 800570e:	ab03      	add	r3, sp, #12
 8005710:	9300      	str	r3, [sp, #0]
 8005712:	462a      	mov	r2, r5
 8005714:	4b05      	ldr	r3, [pc, #20]	@ (800572c <_svfiprintf_r+0x1f0>)
 8005716:	a904      	add	r1, sp, #16
 8005718:	4638      	mov	r0, r7
 800571a:	f7fc ff53 	bl	80025c4 <_printf_i>
 800571e:	e7ed      	b.n	80056fc <_svfiprintf_r+0x1c0>
 8005720:	08006c75 	.word	0x08006c75
 8005724:	08006c7f 	.word	0x08006c7f
 8005728:	08002095 	.word	0x08002095
 800572c:	08005485 	.word	0x08005485
 8005730:	08006c7b 	.word	0x08006c7b

08005734 <__sflush_r>:
 8005734:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800573c:	0716      	lsls	r6, r2, #28
 800573e:	4605      	mov	r5, r0
 8005740:	460c      	mov	r4, r1
 8005742:	d454      	bmi.n	80057ee <__sflush_r+0xba>
 8005744:	684b      	ldr	r3, [r1, #4]
 8005746:	2b00      	cmp	r3, #0
 8005748:	dc02      	bgt.n	8005750 <__sflush_r+0x1c>
 800574a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800574c:	2b00      	cmp	r3, #0
 800574e:	dd48      	ble.n	80057e2 <__sflush_r+0xae>
 8005750:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005752:	2e00      	cmp	r6, #0
 8005754:	d045      	beq.n	80057e2 <__sflush_r+0xae>
 8005756:	2300      	movs	r3, #0
 8005758:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800575c:	682f      	ldr	r7, [r5, #0]
 800575e:	6a21      	ldr	r1, [r4, #32]
 8005760:	602b      	str	r3, [r5, #0]
 8005762:	d030      	beq.n	80057c6 <__sflush_r+0x92>
 8005764:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005766:	89a3      	ldrh	r3, [r4, #12]
 8005768:	0759      	lsls	r1, r3, #29
 800576a:	d505      	bpl.n	8005778 <__sflush_r+0x44>
 800576c:	6863      	ldr	r3, [r4, #4]
 800576e:	1ad2      	subs	r2, r2, r3
 8005770:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005772:	b10b      	cbz	r3, 8005778 <__sflush_r+0x44>
 8005774:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005776:	1ad2      	subs	r2, r2, r3
 8005778:	2300      	movs	r3, #0
 800577a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800577c:	6a21      	ldr	r1, [r4, #32]
 800577e:	4628      	mov	r0, r5
 8005780:	47b0      	blx	r6
 8005782:	1c43      	adds	r3, r0, #1
 8005784:	89a3      	ldrh	r3, [r4, #12]
 8005786:	d106      	bne.n	8005796 <__sflush_r+0x62>
 8005788:	6829      	ldr	r1, [r5, #0]
 800578a:	291d      	cmp	r1, #29
 800578c:	d82b      	bhi.n	80057e6 <__sflush_r+0xb2>
 800578e:	4a2a      	ldr	r2, [pc, #168]	@ (8005838 <__sflush_r+0x104>)
 8005790:	40ca      	lsrs	r2, r1
 8005792:	07d6      	lsls	r6, r2, #31
 8005794:	d527      	bpl.n	80057e6 <__sflush_r+0xb2>
 8005796:	2200      	movs	r2, #0
 8005798:	6062      	str	r2, [r4, #4]
 800579a:	04d9      	lsls	r1, r3, #19
 800579c:	6922      	ldr	r2, [r4, #16]
 800579e:	6022      	str	r2, [r4, #0]
 80057a0:	d504      	bpl.n	80057ac <__sflush_r+0x78>
 80057a2:	1c42      	adds	r2, r0, #1
 80057a4:	d101      	bne.n	80057aa <__sflush_r+0x76>
 80057a6:	682b      	ldr	r3, [r5, #0]
 80057a8:	b903      	cbnz	r3, 80057ac <__sflush_r+0x78>
 80057aa:	6560      	str	r0, [r4, #84]	@ 0x54
 80057ac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80057ae:	602f      	str	r7, [r5, #0]
 80057b0:	b1b9      	cbz	r1, 80057e2 <__sflush_r+0xae>
 80057b2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80057b6:	4299      	cmp	r1, r3
 80057b8:	d002      	beq.n	80057c0 <__sflush_r+0x8c>
 80057ba:	4628      	mov	r0, r5
 80057bc:	f7fe fa34 	bl	8003c28 <_free_r>
 80057c0:	2300      	movs	r3, #0
 80057c2:	6363      	str	r3, [r4, #52]	@ 0x34
 80057c4:	e00d      	b.n	80057e2 <__sflush_r+0xae>
 80057c6:	2301      	movs	r3, #1
 80057c8:	4628      	mov	r0, r5
 80057ca:	47b0      	blx	r6
 80057cc:	4602      	mov	r2, r0
 80057ce:	1c50      	adds	r0, r2, #1
 80057d0:	d1c9      	bne.n	8005766 <__sflush_r+0x32>
 80057d2:	682b      	ldr	r3, [r5, #0]
 80057d4:	2b00      	cmp	r3, #0
 80057d6:	d0c6      	beq.n	8005766 <__sflush_r+0x32>
 80057d8:	2b1d      	cmp	r3, #29
 80057da:	d001      	beq.n	80057e0 <__sflush_r+0xac>
 80057dc:	2b16      	cmp	r3, #22
 80057de:	d11e      	bne.n	800581e <__sflush_r+0xea>
 80057e0:	602f      	str	r7, [r5, #0]
 80057e2:	2000      	movs	r0, #0
 80057e4:	e022      	b.n	800582c <__sflush_r+0xf8>
 80057e6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80057ea:	b21b      	sxth	r3, r3
 80057ec:	e01b      	b.n	8005826 <__sflush_r+0xf2>
 80057ee:	690f      	ldr	r7, [r1, #16]
 80057f0:	2f00      	cmp	r7, #0
 80057f2:	d0f6      	beq.n	80057e2 <__sflush_r+0xae>
 80057f4:	0793      	lsls	r3, r2, #30
 80057f6:	680e      	ldr	r6, [r1, #0]
 80057f8:	bf08      	it	eq
 80057fa:	694b      	ldreq	r3, [r1, #20]
 80057fc:	600f      	str	r7, [r1, #0]
 80057fe:	bf18      	it	ne
 8005800:	2300      	movne	r3, #0
 8005802:	eba6 0807 	sub.w	r8, r6, r7
 8005806:	608b      	str	r3, [r1, #8]
 8005808:	f1b8 0f00 	cmp.w	r8, #0
 800580c:	dde9      	ble.n	80057e2 <__sflush_r+0xae>
 800580e:	6a21      	ldr	r1, [r4, #32]
 8005810:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8005812:	4643      	mov	r3, r8
 8005814:	463a      	mov	r2, r7
 8005816:	4628      	mov	r0, r5
 8005818:	47b0      	blx	r6
 800581a:	2800      	cmp	r0, #0
 800581c:	dc08      	bgt.n	8005830 <__sflush_r+0xfc>
 800581e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005822:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005826:	81a3      	strh	r3, [r4, #12]
 8005828:	f04f 30ff 	mov.w	r0, #4294967295
 800582c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005830:	4407      	add	r7, r0
 8005832:	eba8 0800 	sub.w	r8, r8, r0
 8005836:	e7e7      	b.n	8005808 <__sflush_r+0xd4>
 8005838:	20400001 	.word	0x20400001

0800583c <_fflush_r>:
 800583c:	b538      	push	{r3, r4, r5, lr}
 800583e:	690b      	ldr	r3, [r1, #16]
 8005840:	4605      	mov	r5, r0
 8005842:	460c      	mov	r4, r1
 8005844:	b913      	cbnz	r3, 800584c <_fflush_r+0x10>
 8005846:	2500      	movs	r5, #0
 8005848:	4628      	mov	r0, r5
 800584a:	bd38      	pop	{r3, r4, r5, pc}
 800584c:	b118      	cbz	r0, 8005856 <_fflush_r+0x1a>
 800584e:	6a03      	ldr	r3, [r0, #32]
 8005850:	b90b      	cbnz	r3, 8005856 <_fflush_r+0x1a>
 8005852:	f7fd fa6f 	bl	8002d34 <__sinit>
 8005856:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800585a:	2b00      	cmp	r3, #0
 800585c:	d0f3      	beq.n	8005846 <_fflush_r+0xa>
 800585e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005860:	07d0      	lsls	r0, r2, #31
 8005862:	d404      	bmi.n	800586e <_fflush_r+0x32>
 8005864:	0599      	lsls	r1, r3, #22
 8005866:	d402      	bmi.n	800586e <_fflush_r+0x32>
 8005868:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800586a:	f7fd fb7c 	bl	8002f66 <__retarget_lock_acquire_recursive>
 800586e:	4628      	mov	r0, r5
 8005870:	4621      	mov	r1, r4
 8005872:	f7ff ff5f 	bl	8005734 <__sflush_r>
 8005876:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005878:	07da      	lsls	r2, r3, #31
 800587a:	4605      	mov	r5, r0
 800587c:	d4e4      	bmi.n	8005848 <_fflush_r+0xc>
 800587e:	89a3      	ldrh	r3, [r4, #12]
 8005880:	059b      	lsls	r3, r3, #22
 8005882:	d4e1      	bmi.n	8005848 <_fflush_r+0xc>
 8005884:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005886:	f7fd fb6f 	bl	8002f68 <__retarget_lock_release_recursive>
 800588a:	e7dd      	b.n	8005848 <_fflush_r+0xc>

0800588c <memmove>:
 800588c:	4288      	cmp	r0, r1
 800588e:	b510      	push	{r4, lr}
 8005890:	eb01 0402 	add.w	r4, r1, r2
 8005894:	d902      	bls.n	800589c <memmove+0x10>
 8005896:	4284      	cmp	r4, r0
 8005898:	4623      	mov	r3, r4
 800589a:	d807      	bhi.n	80058ac <memmove+0x20>
 800589c:	1e43      	subs	r3, r0, #1
 800589e:	42a1      	cmp	r1, r4
 80058a0:	d008      	beq.n	80058b4 <memmove+0x28>
 80058a2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80058a6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80058aa:	e7f8      	b.n	800589e <memmove+0x12>
 80058ac:	4402      	add	r2, r0
 80058ae:	4601      	mov	r1, r0
 80058b0:	428a      	cmp	r2, r1
 80058b2:	d100      	bne.n	80058b6 <memmove+0x2a>
 80058b4:	bd10      	pop	{r4, pc}
 80058b6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80058ba:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80058be:	e7f7      	b.n	80058b0 <memmove+0x24>

080058c0 <strncmp>:
 80058c0:	b510      	push	{r4, lr}
 80058c2:	b16a      	cbz	r2, 80058e0 <strncmp+0x20>
 80058c4:	3901      	subs	r1, #1
 80058c6:	1884      	adds	r4, r0, r2
 80058c8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80058cc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80058d0:	429a      	cmp	r2, r3
 80058d2:	d103      	bne.n	80058dc <strncmp+0x1c>
 80058d4:	42a0      	cmp	r0, r4
 80058d6:	d001      	beq.n	80058dc <strncmp+0x1c>
 80058d8:	2a00      	cmp	r2, #0
 80058da:	d1f5      	bne.n	80058c8 <strncmp+0x8>
 80058dc:	1ad0      	subs	r0, r2, r3
 80058de:	bd10      	pop	{r4, pc}
 80058e0:	4610      	mov	r0, r2
 80058e2:	e7fc      	b.n	80058de <strncmp+0x1e>

080058e4 <_sbrk_r>:
 80058e4:	b538      	push	{r3, r4, r5, lr}
 80058e6:	4d06      	ldr	r5, [pc, #24]	@ (8005900 <_sbrk_r+0x1c>)
 80058e8:	2300      	movs	r3, #0
 80058ea:	4604      	mov	r4, r0
 80058ec:	4608      	mov	r0, r1
 80058ee:	602b      	str	r3, [r5, #0]
 80058f0:	f7fc fa3c 	bl	8001d6c <_sbrk>
 80058f4:	1c43      	adds	r3, r0, #1
 80058f6:	d102      	bne.n	80058fe <_sbrk_r+0x1a>
 80058f8:	682b      	ldr	r3, [r5, #0]
 80058fa:	b103      	cbz	r3, 80058fe <_sbrk_r+0x1a>
 80058fc:	6023      	str	r3, [r4, #0]
 80058fe:	bd38      	pop	{r3, r4, r5, pc}
 8005900:	20000334 	.word	0x20000334

08005904 <memcpy>:
 8005904:	440a      	add	r2, r1
 8005906:	4291      	cmp	r1, r2
 8005908:	f100 33ff 	add.w	r3, r0, #4294967295
 800590c:	d100      	bne.n	8005910 <memcpy+0xc>
 800590e:	4770      	bx	lr
 8005910:	b510      	push	{r4, lr}
 8005912:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005916:	f803 4f01 	strb.w	r4, [r3, #1]!
 800591a:	4291      	cmp	r1, r2
 800591c:	d1f9      	bne.n	8005912 <memcpy+0xe>
 800591e:	bd10      	pop	{r4, pc}

08005920 <nan>:
 8005920:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8005928 <nan+0x8>
 8005924:	4770      	bx	lr
 8005926:	bf00      	nop
 8005928:	00000000 	.word	0x00000000
 800592c:	7ff80000 	.word	0x7ff80000

08005930 <__assert_func>:
 8005930:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005932:	4614      	mov	r4, r2
 8005934:	461a      	mov	r2, r3
 8005936:	4b09      	ldr	r3, [pc, #36]	@ (800595c <__assert_func+0x2c>)
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	4605      	mov	r5, r0
 800593c:	68d8      	ldr	r0, [r3, #12]
 800593e:	b14c      	cbz	r4, 8005954 <__assert_func+0x24>
 8005940:	4b07      	ldr	r3, [pc, #28]	@ (8005960 <__assert_func+0x30>)
 8005942:	9100      	str	r1, [sp, #0]
 8005944:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005948:	4906      	ldr	r1, [pc, #24]	@ (8005964 <__assert_func+0x34>)
 800594a:	462b      	mov	r3, r5
 800594c:	f000 fba8 	bl	80060a0 <fiprintf>
 8005950:	f000 fbb8 	bl	80060c4 <abort>
 8005954:	4b04      	ldr	r3, [pc, #16]	@ (8005968 <__assert_func+0x38>)
 8005956:	461c      	mov	r4, r3
 8005958:	e7f3      	b.n	8005942 <__assert_func+0x12>
 800595a:	bf00      	nop
 800595c:	20000010 	.word	0x20000010
 8005960:	08006c8e 	.word	0x08006c8e
 8005964:	08006c9b 	.word	0x08006c9b
 8005968:	08006cc9 	.word	0x08006cc9

0800596c <_calloc_r>:
 800596c:	b570      	push	{r4, r5, r6, lr}
 800596e:	fba1 5402 	umull	r5, r4, r1, r2
 8005972:	b934      	cbnz	r4, 8005982 <_calloc_r+0x16>
 8005974:	4629      	mov	r1, r5
 8005976:	f7fe f9cb 	bl	8003d10 <_malloc_r>
 800597a:	4606      	mov	r6, r0
 800597c:	b928      	cbnz	r0, 800598a <_calloc_r+0x1e>
 800597e:	4630      	mov	r0, r6
 8005980:	bd70      	pop	{r4, r5, r6, pc}
 8005982:	220c      	movs	r2, #12
 8005984:	6002      	str	r2, [r0, #0]
 8005986:	2600      	movs	r6, #0
 8005988:	e7f9      	b.n	800597e <_calloc_r+0x12>
 800598a:	462a      	mov	r2, r5
 800598c:	4621      	mov	r1, r4
 800598e:	f7fd fa6c 	bl	8002e6a <memset>
 8005992:	e7f4      	b.n	800597e <_calloc_r+0x12>

08005994 <rshift>:
 8005994:	6903      	ldr	r3, [r0, #16]
 8005996:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800599a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800599e:	ea4f 1261 	mov.w	r2, r1, asr #5
 80059a2:	f100 0414 	add.w	r4, r0, #20
 80059a6:	dd45      	ble.n	8005a34 <rshift+0xa0>
 80059a8:	f011 011f 	ands.w	r1, r1, #31
 80059ac:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80059b0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80059b4:	d10c      	bne.n	80059d0 <rshift+0x3c>
 80059b6:	f100 0710 	add.w	r7, r0, #16
 80059ba:	4629      	mov	r1, r5
 80059bc:	42b1      	cmp	r1, r6
 80059be:	d334      	bcc.n	8005a2a <rshift+0x96>
 80059c0:	1a9b      	subs	r3, r3, r2
 80059c2:	009b      	lsls	r3, r3, #2
 80059c4:	1eea      	subs	r2, r5, #3
 80059c6:	4296      	cmp	r6, r2
 80059c8:	bf38      	it	cc
 80059ca:	2300      	movcc	r3, #0
 80059cc:	4423      	add	r3, r4
 80059ce:	e015      	b.n	80059fc <rshift+0x68>
 80059d0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80059d4:	f1c1 0820 	rsb	r8, r1, #32
 80059d8:	40cf      	lsrs	r7, r1
 80059da:	f105 0e04 	add.w	lr, r5, #4
 80059de:	46a1      	mov	r9, r4
 80059e0:	4576      	cmp	r6, lr
 80059e2:	46f4      	mov	ip, lr
 80059e4:	d815      	bhi.n	8005a12 <rshift+0x7e>
 80059e6:	1a9a      	subs	r2, r3, r2
 80059e8:	0092      	lsls	r2, r2, #2
 80059ea:	3a04      	subs	r2, #4
 80059ec:	3501      	adds	r5, #1
 80059ee:	42ae      	cmp	r6, r5
 80059f0:	bf38      	it	cc
 80059f2:	2200      	movcc	r2, #0
 80059f4:	18a3      	adds	r3, r4, r2
 80059f6:	50a7      	str	r7, [r4, r2]
 80059f8:	b107      	cbz	r7, 80059fc <rshift+0x68>
 80059fa:	3304      	adds	r3, #4
 80059fc:	1b1a      	subs	r2, r3, r4
 80059fe:	42a3      	cmp	r3, r4
 8005a00:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005a04:	bf08      	it	eq
 8005a06:	2300      	moveq	r3, #0
 8005a08:	6102      	str	r2, [r0, #16]
 8005a0a:	bf08      	it	eq
 8005a0c:	6143      	streq	r3, [r0, #20]
 8005a0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005a12:	f8dc c000 	ldr.w	ip, [ip]
 8005a16:	fa0c fc08 	lsl.w	ip, ip, r8
 8005a1a:	ea4c 0707 	orr.w	r7, ip, r7
 8005a1e:	f849 7b04 	str.w	r7, [r9], #4
 8005a22:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005a26:	40cf      	lsrs	r7, r1
 8005a28:	e7da      	b.n	80059e0 <rshift+0x4c>
 8005a2a:	f851 cb04 	ldr.w	ip, [r1], #4
 8005a2e:	f847 cf04 	str.w	ip, [r7, #4]!
 8005a32:	e7c3      	b.n	80059bc <rshift+0x28>
 8005a34:	4623      	mov	r3, r4
 8005a36:	e7e1      	b.n	80059fc <rshift+0x68>

08005a38 <__hexdig_fun>:
 8005a38:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005a3c:	2b09      	cmp	r3, #9
 8005a3e:	d802      	bhi.n	8005a46 <__hexdig_fun+0xe>
 8005a40:	3820      	subs	r0, #32
 8005a42:	b2c0      	uxtb	r0, r0
 8005a44:	4770      	bx	lr
 8005a46:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005a4a:	2b05      	cmp	r3, #5
 8005a4c:	d801      	bhi.n	8005a52 <__hexdig_fun+0x1a>
 8005a4e:	3847      	subs	r0, #71	@ 0x47
 8005a50:	e7f7      	b.n	8005a42 <__hexdig_fun+0xa>
 8005a52:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005a56:	2b05      	cmp	r3, #5
 8005a58:	d801      	bhi.n	8005a5e <__hexdig_fun+0x26>
 8005a5a:	3827      	subs	r0, #39	@ 0x27
 8005a5c:	e7f1      	b.n	8005a42 <__hexdig_fun+0xa>
 8005a5e:	2000      	movs	r0, #0
 8005a60:	4770      	bx	lr
	...

08005a64 <__gethex>:
 8005a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a68:	b085      	sub	sp, #20
 8005a6a:	468a      	mov	sl, r1
 8005a6c:	9302      	str	r3, [sp, #8]
 8005a6e:	680b      	ldr	r3, [r1, #0]
 8005a70:	9001      	str	r0, [sp, #4]
 8005a72:	4690      	mov	r8, r2
 8005a74:	1c9c      	adds	r4, r3, #2
 8005a76:	46a1      	mov	r9, r4
 8005a78:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005a7c:	2830      	cmp	r0, #48	@ 0x30
 8005a7e:	d0fa      	beq.n	8005a76 <__gethex+0x12>
 8005a80:	eba9 0303 	sub.w	r3, r9, r3
 8005a84:	f1a3 0b02 	sub.w	fp, r3, #2
 8005a88:	f7ff ffd6 	bl	8005a38 <__hexdig_fun>
 8005a8c:	4605      	mov	r5, r0
 8005a8e:	2800      	cmp	r0, #0
 8005a90:	d168      	bne.n	8005b64 <__gethex+0x100>
 8005a92:	49a0      	ldr	r1, [pc, #640]	@ (8005d14 <__gethex+0x2b0>)
 8005a94:	2201      	movs	r2, #1
 8005a96:	4648      	mov	r0, r9
 8005a98:	f7ff ff12 	bl	80058c0 <strncmp>
 8005a9c:	4607      	mov	r7, r0
 8005a9e:	2800      	cmp	r0, #0
 8005aa0:	d167      	bne.n	8005b72 <__gethex+0x10e>
 8005aa2:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005aa6:	4626      	mov	r6, r4
 8005aa8:	f7ff ffc6 	bl	8005a38 <__hexdig_fun>
 8005aac:	2800      	cmp	r0, #0
 8005aae:	d062      	beq.n	8005b76 <__gethex+0x112>
 8005ab0:	4623      	mov	r3, r4
 8005ab2:	7818      	ldrb	r0, [r3, #0]
 8005ab4:	2830      	cmp	r0, #48	@ 0x30
 8005ab6:	4699      	mov	r9, r3
 8005ab8:	f103 0301 	add.w	r3, r3, #1
 8005abc:	d0f9      	beq.n	8005ab2 <__gethex+0x4e>
 8005abe:	f7ff ffbb 	bl	8005a38 <__hexdig_fun>
 8005ac2:	fab0 f580 	clz	r5, r0
 8005ac6:	096d      	lsrs	r5, r5, #5
 8005ac8:	f04f 0b01 	mov.w	fp, #1
 8005acc:	464a      	mov	r2, r9
 8005ace:	4616      	mov	r6, r2
 8005ad0:	3201      	adds	r2, #1
 8005ad2:	7830      	ldrb	r0, [r6, #0]
 8005ad4:	f7ff ffb0 	bl	8005a38 <__hexdig_fun>
 8005ad8:	2800      	cmp	r0, #0
 8005ada:	d1f8      	bne.n	8005ace <__gethex+0x6a>
 8005adc:	498d      	ldr	r1, [pc, #564]	@ (8005d14 <__gethex+0x2b0>)
 8005ade:	2201      	movs	r2, #1
 8005ae0:	4630      	mov	r0, r6
 8005ae2:	f7ff feed 	bl	80058c0 <strncmp>
 8005ae6:	2800      	cmp	r0, #0
 8005ae8:	d13f      	bne.n	8005b6a <__gethex+0x106>
 8005aea:	b944      	cbnz	r4, 8005afe <__gethex+0x9a>
 8005aec:	1c74      	adds	r4, r6, #1
 8005aee:	4622      	mov	r2, r4
 8005af0:	4616      	mov	r6, r2
 8005af2:	3201      	adds	r2, #1
 8005af4:	7830      	ldrb	r0, [r6, #0]
 8005af6:	f7ff ff9f 	bl	8005a38 <__hexdig_fun>
 8005afa:	2800      	cmp	r0, #0
 8005afc:	d1f8      	bne.n	8005af0 <__gethex+0x8c>
 8005afe:	1ba4      	subs	r4, r4, r6
 8005b00:	00a7      	lsls	r7, r4, #2
 8005b02:	7833      	ldrb	r3, [r6, #0]
 8005b04:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005b08:	2b50      	cmp	r3, #80	@ 0x50
 8005b0a:	d13e      	bne.n	8005b8a <__gethex+0x126>
 8005b0c:	7873      	ldrb	r3, [r6, #1]
 8005b0e:	2b2b      	cmp	r3, #43	@ 0x2b
 8005b10:	d033      	beq.n	8005b7a <__gethex+0x116>
 8005b12:	2b2d      	cmp	r3, #45	@ 0x2d
 8005b14:	d034      	beq.n	8005b80 <__gethex+0x11c>
 8005b16:	1c71      	adds	r1, r6, #1
 8005b18:	2400      	movs	r4, #0
 8005b1a:	7808      	ldrb	r0, [r1, #0]
 8005b1c:	f7ff ff8c 	bl	8005a38 <__hexdig_fun>
 8005b20:	1e43      	subs	r3, r0, #1
 8005b22:	b2db      	uxtb	r3, r3
 8005b24:	2b18      	cmp	r3, #24
 8005b26:	d830      	bhi.n	8005b8a <__gethex+0x126>
 8005b28:	f1a0 0210 	sub.w	r2, r0, #16
 8005b2c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005b30:	f7ff ff82 	bl	8005a38 <__hexdig_fun>
 8005b34:	f100 3cff 	add.w	ip, r0, #4294967295
 8005b38:	fa5f fc8c 	uxtb.w	ip, ip
 8005b3c:	f1bc 0f18 	cmp.w	ip, #24
 8005b40:	f04f 030a 	mov.w	r3, #10
 8005b44:	d91e      	bls.n	8005b84 <__gethex+0x120>
 8005b46:	b104      	cbz	r4, 8005b4a <__gethex+0xe6>
 8005b48:	4252      	negs	r2, r2
 8005b4a:	4417      	add	r7, r2
 8005b4c:	f8ca 1000 	str.w	r1, [sl]
 8005b50:	b1ed      	cbz	r5, 8005b8e <__gethex+0x12a>
 8005b52:	f1bb 0f00 	cmp.w	fp, #0
 8005b56:	bf0c      	ite	eq
 8005b58:	2506      	moveq	r5, #6
 8005b5a:	2500      	movne	r5, #0
 8005b5c:	4628      	mov	r0, r5
 8005b5e:	b005      	add	sp, #20
 8005b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b64:	2500      	movs	r5, #0
 8005b66:	462c      	mov	r4, r5
 8005b68:	e7b0      	b.n	8005acc <__gethex+0x68>
 8005b6a:	2c00      	cmp	r4, #0
 8005b6c:	d1c7      	bne.n	8005afe <__gethex+0x9a>
 8005b6e:	4627      	mov	r7, r4
 8005b70:	e7c7      	b.n	8005b02 <__gethex+0x9e>
 8005b72:	464e      	mov	r6, r9
 8005b74:	462f      	mov	r7, r5
 8005b76:	2501      	movs	r5, #1
 8005b78:	e7c3      	b.n	8005b02 <__gethex+0x9e>
 8005b7a:	2400      	movs	r4, #0
 8005b7c:	1cb1      	adds	r1, r6, #2
 8005b7e:	e7cc      	b.n	8005b1a <__gethex+0xb6>
 8005b80:	2401      	movs	r4, #1
 8005b82:	e7fb      	b.n	8005b7c <__gethex+0x118>
 8005b84:	fb03 0002 	mla	r0, r3, r2, r0
 8005b88:	e7ce      	b.n	8005b28 <__gethex+0xc4>
 8005b8a:	4631      	mov	r1, r6
 8005b8c:	e7de      	b.n	8005b4c <__gethex+0xe8>
 8005b8e:	eba6 0309 	sub.w	r3, r6, r9
 8005b92:	3b01      	subs	r3, #1
 8005b94:	4629      	mov	r1, r5
 8005b96:	2b07      	cmp	r3, #7
 8005b98:	dc0a      	bgt.n	8005bb0 <__gethex+0x14c>
 8005b9a:	9801      	ldr	r0, [sp, #4]
 8005b9c:	f7fe f944 	bl	8003e28 <_Balloc>
 8005ba0:	4604      	mov	r4, r0
 8005ba2:	b940      	cbnz	r0, 8005bb6 <__gethex+0x152>
 8005ba4:	4b5c      	ldr	r3, [pc, #368]	@ (8005d18 <__gethex+0x2b4>)
 8005ba6:	4602      	mov	r2, r0
 8005ba8:	21e4      	movs	r1, #228	@ 0xe4
 8005baa:	485c      	ldr	r0, [pc, #368]	@ (8005d1c <__gethex+0x2b8>)
 8005bac:	f7ff fec0 	bl	8005930 <__assert_func>
 8005bb0:	3101      	adds	r1, #1
 8005bb2:	105b      	asrs	r3, r3, #1
 8005bb4:	e7ef      	b.n	8005b96 <__gethex+0x132>
 8005bb6:	f100 0a14 	add.w	sl, r0, #20
 8005bba:	2300      	movs	r3, #0
 8005bbc:	4655      	mov	r5, sl
 8005bbe:	469b      	mov	fp, r3
 8005bc0:	45b1      	cmp	r9, r6
 8005bc2:	d337      	bcc.n	8005c34 <__gethex+0x1d0>
 8005bc4:	f845 bb04 	str.w	fp, [r5], #4
 8005bc8:	eba5 050a 	sub.w	r5, r5, sl
 8005bcc:	10ad      	asrs	r5, r5, #2
 8005bce:	6125      	str	r5, [r4, #16]
 8005bd0:	4658      	mov	r0, fp
 8005bd2:	f7fe fa1b 	bl	800400c <__hi0bits>
 8005bd6:	016d      	lsls	r5, r5, #5
 8005bd8:	f8d8 6000 	ldr.w	r6, [r8]
 8005bdc:	1a2d      	subs	r5, r5, r0
 8005bde:	42b5      	cmp	r5, r6
 8005be0:	dd54      	ble.n	8005c8c <__gethex+0x228>
 8005be2:	1bad      	subs	r5, r5, r6
 8005be4:	4629      	mov	r1, r5
 8005be6:	4620      	mov	r0, r4
 8005be8:	f7fe fda7 	bl	800473a <__any_on>
 8005bec:	4681      	mov	r9, r0
 8005bee:	b178      	cbz	r0, 8005c10 <__gethex+0x1ac>
 8005bf0:	1e6b      	subs	r3, r5, #1
 8005bf2:	1159      	asrs	r1, r3, #5
 8005bf4:	f003 021f 	and.w	r2, r3, #31
 8005bf8:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005bfc:	f04f 0901 	mov.w	r9, #1
 8005c00:	fa09 f202 	lsl.w	r2, r9, r2
 8005c04:	420a      	tst	r2, r1
 8005c06:	d003      	beq.n	8005c10 <__gethex+0x1ac>
 8005c08:	454b      	cmp	r3, r9
 8005c0a:	dc36      	bgt.n	8005c7a <__gethex+0x216>
 8005c0c:	f04f 0902 	mov.w	r9, #2
 8005c10:	4629      	mov	r1, r5
 8005c12:	4620      	mov	r0, r4
 8005c14:	f7ff febe 	bl	8005994 <rshift>
 8005c18:	442f      	add	r7, r5
 8005c1a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005c1e:	42bb      	cmp	r3, r7
 8005c20:	da42      	bge.n	8005ca8 <__gethex+0x244>
 8005c22:	9801      	ldr	r0, [sp, #4]
 8005c24:	4621      	mov	r1, r4
 8005c26:	f7fe f93f 	bl	8003ea8 <_Bfree>
 8005c2a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005c2c:	2300      	movs	r3, #0
 8005c2e:	6013      	str	r3, [r2, #0]
 8005c30:	25a3      	movs	r5, #163	@ 0xa3
 8005c32:	e793      	b.n	8005b5c <__gethex+0xf8>
 8005c34:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005c38:	2a2e      	cmp	r2, #46	@ 0x2e
 8005c3a:	d012      	beq.n	8005c62 <__gethex+0x1fe>
 8005c3c:	2b20      	cmp	r3, #32
 8005c3e:	d104      	bne.n	8005c4a <__gethex+0x1e6>
 8005c40:	f845 bb04 	str.w	fp, [r5], #4
 8005c44:	f04f 0b00 	mov.w	fp, #0
 8005c48:	465b      	mov	r3, fp
 8005c4a:	7830      	ldrb	r0, [r6, #0]
 8005c4c:	9303      	str	r3, [sp, #12]
 8005c4e:	f7ff fef3 	bl	8005a38 <__hexdig_fun>
 8005c52:	9b03      	ldr	r3, [sp, #12]
 8005c54:	f000 000f 	and.w	r0, r0, #15
 8005c58:	4098      	lsls	r0, r3
 8005c5a:	ea4b 0b00 	orr.w	fp, fp, r0
 8005c5e:	3304      	adds	r3, #4
 8005c60:	e7ae      	b.n	8005bc0 <__gethex+0x15c>
 8005c62:	45b1      	cmp	r9, r6
 8005c64:	d8ea      	bhi.n	8005c3c <__gethex+0x1d8>
 8005c66:	492b      	ldr	r1, [pc, #172]	@ (8005d14 <__gethex+0x2b0>)
 8005c68:	9303      	str	r3, [sp, #12]
 8005c6a:	2201      	movs	r2, #1
 8005c6c:	4630      	mov	r0, r6
 8005c6e:	f7ff fe27 	bl	80058c0 <strncmp>
 8005c72:	9b03      	ldr	r3, [sp, #12]
 8005c74:	2800      	cmp	r0, #0
 8005c76:	d1e1      	bne.n	8005c3c <__gethex+0x1d8>
 8005c78:	e7a2      	b.n	8005bc0 <__gethex+0x15c>
 8005c7a:	1ea9      	subs	r1, r5, #2
 8005c7c:	4620      	mov	r0, r4
 8005c7e:	f7fe fd5c 	bl	800473a <__any_on>
 8005c82:	2800      	cmp	r0, #0
 8005c84:	d0c2      	beq.n	8005c0c <__gethex+0x1a8>
 8005c86:	f04f 0903 	mov.w	r9, #3
 8005c8a:	e7c1      	b.n	8005c10 <__gethex+0x1ac>
 8005c8c:	da09      	bge.n	8005ca2 <__gethex+0x23e>
 8005c8e:	1b75      	subs	r5, r6, r5
 8005c90:	4621      	mov	r1, r4
 8005c92:	9801      	ldr	r0, [sp, #4]
 8005c94:	462a      	mov	r2, r5
 8005c96:	f7fe fb17 	bl	80042c8 <__lshift>
 8005c9a:	1b7f      	subs	r7, r7, r5
 8005c9c:	4604      	mov	r4, r0
 8005c9e:	f100 0a14 	add.w	sl, r0, #20
 8005ca2:	f04f 0900 	mov.w	r9, #0
 8005ca6:	e7b8      	b.n	8005c1a <__gethex+0x1b6>
 8005ca8:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005cac:	42bd      	cmp	r5, r7
 8005cae:	dd6f      	ble.n	8005d90 <__gethex+0x32c>
 8005cb0:	1bed      	subs	r5, r5, r7
 8005cb2:	42ae      	cmp	r6, r5
 8005cb4:	dc34      	bgt.n	8005d20 <__gethex+0x2bc>
 8005cb6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005cba:	2b02      	cmp	r3, #2
 8005cbc:	d022      	beq.n	8005d04 <__gethex+0x2a0>
 8005cbe:	2b03      	cmp	r3, #3
 8005cc0:	d024      	beq.n	8005d0c <__gethex+0x2a8>
 8005cc2:	2b01      	cmp	r3, #1
 8005cc4:	d115      	bne.n	8005cf2 <__gethex+0x28e>
 8005cc6:	42ae      	cmp	r6, r5
 8005cc8:	d113      	bne.n	8005cf2 <__gethex+0x28e>
 8005cca:	2e01      	cmp	r6, #1
 8005ccc:	d10b      	bne.n	8005ce6 <__gethex+0x282>
 8005cce:	9a02      	ldr	r2, [sp, #8]
 8005cd0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005cd4:	6013      	str	r3, [r2, #0]
 8005cd6:	2301      	movs	r3, #1
 8005cd8:	6123      	str	r3, [r4, #16]
 8005cda:	f8ca 3000 	str.w	r3, [sl]
 8005cde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005ce0:	2562      	movs	r5, #98	@ 0x62
 8005ce2:	601c      	str	r4, [r3, #0]
 8005ce4:	e73a      	b.n	8005b5c <__gethex+0xf8>
 8005ce6:	1e71      	subs	r1, r6, #1
 8005ce8:	4620      	mov	r0, r4
 8005cea:	f7fe fd26 	bl	800473a <__any_on>
 8005cee:	2800      	cmp	r0, #0
 8005cf0:	d1ed      	bne.n	8005cce <__gethex+0x26a>
 8005cf2:	9801      	ldr	r0, [sp, #4]
 8005cf4:	4621      	mov	r1, r4
 8005cf6:	f7fe f8d7 	bl	8003ea8 <_Bfree>
 8005cfa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005cfc:	2300      	movs	r3, #0
 8005cfe:	6013      	str	r3, [r2, #0]
 8005d00:	2550      	movs	r5, #80	@ 0x50
 8005d02:	e72b      	b.n	8005b5c <__gethex+0xf8>
 8005d04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d1f3      	bne.n	8005cf2 <__gethex+0x28e>
 8005d0a:	e7e0      	b.n	8005cce <__gethex+0x26a>
 8005d0c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005d0e:	2b00      	cmp	r3, #0
 8005d10:	d1dd      	bne.n	8005cce <__gethex+0x26a>
 8005d12:	e7ee      	b.n	8005cf2 <__gethex+0x28e>
 8005d14:	08006c73 	.word	0x08006c73
 8005d18:	08006c09 	.word	0x08006c09
 8005d1c:	08006cca 	.word	0x08006cca
 8005d20:	1e6f      	subs	r7, r5, #1
 8005d22:	f1b9 0f00 	cmp.w	r9, #0
 8005d26:	d130      	bne.n	8005d8a <__gethex+0x326>
 8005d28:	b127      	cbz	r7, 8005d34 <__gethex+0x2d0>
 8005d2a:	4639      	mov	r1, r7
 8005d2c:	4620      	mov	r0, r4
 8005d2e:	f7fe fd04 	bl	800473a <__any_on>
 8005d32:	4681      	mov	r9, r0
 8005d34:	117a      	asrs	r2, r7, #5
 8005d36:	2301      	movs	r3, #1
 8005d38:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005d3c:	f007 071f 	and.w	r7, r7, #31
 8005d40:	40bb      	lsls	r3, r7
 8005d42:	4213      	tst	r3, r2
 8005d44:	4629      	mov	r1, r5
 8005d46:	4620      	mov	r0, r4
 8005d48:	bf18      	it	ne
 8005d4a:	f049 0902 	orrne.w	r9, r9, #2
 8005d4e:	f7ff fe21 	bl	8005994 <rshift>
 8005d52:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8005d56:	1b76      	subs	r6, r6, r5
 8005d58:	2502      	movs	r5, #2
 8005d5a:	f1b9 0f00 	cmp.w	r9, #0
 8005d5e:	d047      	beq.n	8005df0 <__gethex+0x38c>
 8005d60:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005d64:	2b02      	cmp	r3, #2
 8005d66:	d015      	beq.n	8005d94 <__gethex+0x330>
 8005d68:	2b03      	cmp	r3, #3
 8005d6a:	d017      	beq.n	8005d9c <__gethex+0x338>
 8005d6c:	2b01      	cmp	r3, #1
 8005d6e:	d109      	bne.n	8005d84 <__gethex+0x320>
 8005d70:	f019 0f02 	tst.w	r9, #2
 8005d74:	d006      	beq.n	8005d84 <__gethex+0x320>
 8005d76:	f8da 3000 	ldr.w	r3, [sl]
 8005d7a:	ea49 0903 	orr.w	r9, r9, r3
 8005d7e:	f019 0f01 	tst.w	r9, #1
 8005d82:	d10e      	bne.n	8005da2 <__gethex+0x33e>
 8005d84:	f045 0510 	orr.w	r5, r5, #16
 8005d88:	e032      	b.n	8005df0 <__gethex+0x38c>
 8005d8a:	f04f 0901 	mov.w	r9, #1
 8005d8e:	e7d1      	b.n	8005d34 <__gethex+0x2d0>
 8005d90:	2501      	movs	r5, #1
 8005d92:	e7e2      	b.n	8005d5a <__gethex+0x2f6>
 8005d94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005d96:	f1c3 0301 	rsb	r3, r3, #1
 8005d9a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005d9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	d0f0      	beq.n	8005d84 <__gethex+0x320>
 8005da2:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005da6:	f104 0314 	add.w	r3, r4, #20
 8005daa:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8005dae:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8005db2:	f04f 0c00 	mov.w	ip, #0
 8005db6:	4618      	mov	r0, r3
 8005db8:	f853 2b04 	ldr.w	r2, [r3], #4
 8005dbc:	f1b2 3fff 	cmp.w	r2, #4294967295
 8005dc0:	d01b      	beq.n	8005dfa <__gethex+0x396>
 8005dc2:	3201      	adds	r2, #1
 8005dc4:	6002      	str	r2, [r0, #0]
 8005dc6:	2d02      	cmp	r5, #2
 8005dc8:	f104 0314 	add.w	r3, r4, #20
 8005dcc:	d13c      	bne.n	8005e48 <__gethex+0x3e4>
 8005dce:	f8d8 2000 	ldr.w	r2, [r8]
 8005dd2:	3a01      	subs	r2, #1
 8005dd4:	42b2      	cmp	r2, r6
 8005dd6:	d109      	bne.n	8005dec <__gethex+0x388>
 8005dd8:	1171      	asrs	r1, r6, #5
 8005dda:	2201      	movs	r2, #1
 8005ddc:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005de0:	f006 061f 	and.w	r6, r6, #31
 8005de4:	fa02 f606 	lsl.w	r6, r2, r6
 8005de8:	421e      	tst	r6, r3
 8005dea:	d13a      	bne.n	8005e62 <__gethex+0x3fe>
 8005dec:	f045 0520 	orr.w	r5, r5, #32
 8005df0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005df2:	601c      	str	r4, [r3, #0]
 8005df4:	9b02      	ldr	r3, [sp, #8]
 8005df6:	601f      	str	r7, [r3, #0]
 8005df8:	e6b0      	b.n	8005b5c <__gethex+0xf8>
 8005dfa:	4299      	cmp	r1, r3
 8005dfc:	f843 cc04 	str.w	ip, [r3, #-4]
 8005e00:	d8d9      	bhi.n	8005db6 <__gethex+0x352>
 8005e02:	68a3      	ldr	r3, [r4, #8]
 8005e04:	459b      	cmp	fp, r3
 8005e06:	db17      	blt.n	8005e38 <__gethex+0x3d4>
 8005e08:	6861      	ldr	r1, [r4, #4]
 8005e0a:	9801      	ldr	r0, [sp, #4]
 8005e0c:	3101      	adds	r1, #1
 8005e0e:	f7fe f80b 	bl	8003e28 <_Balloc>
 8005e12:	4681      	mov	r9, r0
 8005e14:	b918      	cbnz	r0, 8005e1e <__gethex+0x3ba>
 8005e16:	4b1a      	ldr	r3, [pc, #104]	@ (8005e80 <__gethex+0x41c>)
 8005e18:	4602      	mov	r2, r0
 8005e1a:	2184      	movs	r1, #132	@ 0x84
 8005e1c:	e6c5      	b.n	8005baa <__gethex+0x146>
 8005e1e:	6922      	ldr	r2, [r4, #16]
 8005e20:	3202      	adds	r2, #2
 8005e22:	f104 010c 	add.w	r1, r4, #12
 8005e26:	0092      	lsls	r2, r2, #2
 8005e28:	300c      	adds	r0, #12
 8005e2a:	f7ff fd6b 	bl	8005904 <memcpy>
 8005e2e:	4621      	mov	r1, r4
 8005e30:	9801      	ldr	r0, [sp, #4]
 8005e32:	f7fe f839 	bl	8003ea8 <_Bfree>
 8005e36:	464c      	mov	r4, r9
 8005e38:	6923      	ldr	r3, [r4, #16]
 8005e3a:	1c5a      	adds	r2, r3, #1
 8005e3c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005e40:	6122      	str	r2, [r4, #16]
 8005e42:	2201      	movs	r2, #1
 8005e44:	615a      	str	r2, [r3, #20]
 8005e46:	e7be      	b.n	8005dc6 <__gethex+0x362>
 8005e48:	6922      	ldr	r2, [r4, #16]
 8005e4a:	455a      	cmp	r2, fp
 8005e4c:	dd0b      	ble.n	8005e66 <__gethex+0x402>
 8005e4e:	2101      	movs	r1, #1
 8005e50:	4620      	mov	r0, r4
 8005e52:	f7ff fd9f 	bl	8005994 <rshift>
 8005e56:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005e5a:	3701      	adds	r7, #1
 8005e5c:	42bb      	cmp	r3, r7
 8005e5e:	f6ff aee0 	blt.w	8005c22 <__gethex+0x1be>
 8005e62:	2501      	movs	r5, #1
 8005e64:	e7c2      	b.n	8005dec <__gethex+0x388>
 8005e66:	f016 061f 	ands.w	r6, r6, #31
 8005e6a:	d0fa      	beq.n	8005e62 <__gethex+0x3fe>
 8005e6c:	4453      	add	r3, sl
 8005e6e:	f1c6 0620 	rsb	r6, r6, #32
 8005e72:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8005e76:	f7fe f8c9 	bl	800400c <__hi0bits>
 8005e7a:	42b0      	cmp	r0, r6
 8005e7c:	dbe7      	blt.n	8005e4e <__gethex+0x3ea>
 8005e7e:	e7f0      	b.n	8005e62 <__gethex+0x3fe>
 8005e80:	08006c09 	.word	0x08006c09

08005e84 <L_shift>:
 8005e84:	f1c2 0208 	rsb	r2, r2, #8
 8005e88:	0092      	lsls	r2, r2, #2
 8005e8a:	b570      	push	{r4, r5, r6, lr}
 8005e8c:	f1c2 0620 	rsb	r6, r2, #32
 8005e90:	6843      	ldr	r3, [r0, #4]
 8005e92:	6804      	ldr	r4, [r0, #0]
 8005e94:	fa03 f506 	lsl.w	r5, r3, r6
 8005e98:	432c      	orrs	r4, r5
 8005e9a:	40d3      	lsrs	r3, r2
 8005e9c:	6004      	str	r4, [r0, #0]
 8005e9e:	f840 3f04 	str.w	r3, [r0, #4]!
 8005ea2:	4288      	cmp	r0, r1
 8005ea4:	d3f4      	bcc.n	8005e90 <L_shift+0xc>
 8005ea6:	bd70      	pop	{r4, r5, r6, pc}

08005ea8 <__match>:
 8005ea8:	b530      	push	{r4, r5, lr}
 8005eaa:	6803      	ldr	r3, [r0, #0]
 8005eac:	3301      	adds	r3, #1
 8005eae:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005eb2:	b914      	cbnz	r4, 8005eba <__match+0x12>
 8005eb4:	6003      	str	r3, [r0, #0]
 8005eb6:	2001      	movs	r0, #1
 8005eb8:	bd30      	pop	{r4, r5, pc}
 8005eba:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ebe:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8005ec2:	2d19      	cmp	r5, #25
 8005ec4:	bf98      	it	ls
 8005ec6:	3220      	addls	r2, #32
 8005ec8:	42a2      	cmp	r2, r4
 8005eca:	d0f0      	beq.n	8005eae <__match+0x6>
 8005ecc:	2000      	movs	r0, #0
 8005ece:	e7f3      	b.n	8005eb8 <__match+0x10>

08005ed0 <__hexnan>:
 8005ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ed4:	680b      	ldr	r3, [r1, #0]
 8005ed6:	6801      	ldr	r1, [r0, #0]
 8005ed8:	115e      	asrs	r6, r3, #5
 8005eda:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005ede:	f013 031f 	ands.w	r3, r3, #31
 8005ee2:	b087      	sub	sp, #28
 8005ee4:	bf18      	it	ne
 8005ee6:	3604      	addne	r6, #4
 8005ee8:	2500      	movs	r5, #0
 8005eea:	1f37      	subs	r7, r6, #4
 8005eec:	4682      	mov	sl, r0
 8005eee:	4690      	mov	r8, r2
 8005ef0:	9301      	str	r3, [sp, #4]
 8005ef2:	f846 5c04 	str.w	r5, [r6, #-4]
 8005ef6:	46b9      	mov	r9, r7
 8005ef8:	463c      	mov	r4, r7
 8005efa:	9502      	str	r5, [sp, #8]
 8005efc:	46ab      	mov	fp, r5
 8005efe:	784a      	ldrb	r2, [r1, #1]
 8005f00:	1c4b      	adds	r3, r1, #1
 8005f02:	9303      	str	r3, [sp, #12]
 8005f04:	b342      	cbz	r2, 8005f58 <__hexnan+0x88>
 8005f06:	4610      	mov	r0, r2
 8005f08:	9105      	str	r1, [sp, #20]
 8005f0a:	9204      	str	r2, [sp, #16]
 8005f0c:	f7ff fd94 	bl	8005a38 <__hexdig_fun>
 8005f10:	2800      	cmp	r0, #0
 8005f12:	d151      	bne.n	8005fb8 <__hexnan+0xe8>
 8005f14:	9a04      	ldr	r2, [sp, #16]
 8005f16:	9905      	ldr	r1, [sp, #20]
 8005f18:	2a20      	cmp	r2, #32
 8005f1a:	d818      	bhi.n	8005f4e <__hexnan+0x7e>
 8005f1c:	9b02      	ldr	r3, [sp, #8]
 8005f1e:	459b      	cmp	fp, r3
 8005f20:	dd13      	ble.n	8005f4a <__hexnan+0x7a>
 8005f22:	454c      	cmp	r4, r9
 8005f24:	d206      	bcs.n	8005f34 <__hexnan+0x64>
 8005f26:	2d07      	cmp	r5, #7
 8005f28:	dc04      	bgt.n	8005f34 <__hexnan+0x64>
 8005f2a:	462a      	mov	r2, r5
 8005f2c:	4649      	mov	r1, r9
 8005f2e:	4620      	mov	r0, r4
 8005f30:	f7ff ffa8 	bl	8005e84 <L_shift>
 8005f34:	4544      	cmp	r4, r8
 8005f36:	d952      	bls.n	8005fde <__hexnan+0x10e>
 8005f38:	2300      	movs	r3, #0
 8005f3a:	f1a4 0904 	sub.w	r9, r4, #4
 8005f3e:	f844 3c04 	str.w	r3, [r4, #-4]
 8005f42:	f8cd b008 	str.w	fp, [sp, #8]
 8005f46:	464c      	mov	r4, r9
 8005f48:	461d      	mov	r5, r3
 8005f4a:	9903      	ldr	r1, [sp, #12]
 8005f4c:	e7d7      	b.n	8005efe <__hexnan+0x2e>
 8005f4e:	2a29      	cmp	r2, #41	@ 0x29
 8005f50:	d157      	bne.n	8006002 <__hexnan+0x132>
 8005f52:	3102      	adds	r1, #2
 8005f54:	f8ca 1000 	str.w	r1, [sl]
 8005f58:	f1bb 0f00 	cmp.w	fp, #0
 8005f5c:	d051      	beq.n	8006002 <__hexnan+0x132>
 8005f5e:	454c      	cmp	r4, r9
 8005f60:	d206      	bcs.n	8005f70 <__hexnan+0xa0>
 8005f62:	2d07      	cmp	r5, #7
 8005f64:	dc04      	bgt.n	8005f70 <__hexnan+0xa0>
 8005f66:	462a      	mov	r2, r5
 8005f68:	4649      	mov	r1, r9
 8005f6a:	4620      	mov	r0, r4
 8005f6c:	f7ff ff8a 	bl	8005e84 <L_shift>
 8005f70:	4544      	cmp	r4, r8
 8005f72:	d936      	bls.n	8005fe2 <__hexnan+0x112>
 8005f74:	f1a8 0204 	sub.w	r2, r8, #4
 8005f78:	4623      	mov	r3, r4
 8005f7a:	f853 1b04 	ldr.w	r1, [r3], #4
 8005f7e:	f842 1f04 	str.w	r1, [r2, #4]!
 8005f82:	429f      	cmp	r7, r3
 8005f84:	d2f9      	bcs.n	8005f7a <__hexnan+0xaa>
 8005f86:	1b3b      	subs	r3, r7, r4
 8005f88:	f023 0303 	bic.w	r3, r3, #3
 8005f8c:	3304      	adds	r3, #4
 8005f8e:	3401      	adds	r4, #1
 8005f90:	3e03      	subs	r6, #3
 8005f92:	42b4      	cmp	r4, r6
 8005f94:	bf88      	it	hi
 8005f96:	2304      	movhi	r3, #4
 8005f98:	4443      	add	r3, r8
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	f843 2b04 	str.w	r2, [r3], #4
 8005fa0:	429f      	cmp	r7, r3
 8005fa2:	d2fb      	bcs.n	8005f9c <__hexnan+0xcc>
 8005fa4:	683b      	ldr	r3, [r7, #0]
 8005fa6:	b91b      	cbnz	r3, 8005fb0 <__hexnan+0xe0>
 8005fa8:	4547      	cmp	r7, r8
 8005faa:	d128      	bne.n	8005ffe <__hexnan+0x12e>
 8005fac:	2301      	movs	r3, #1
 8005fae:	603b      	str	r3, [r7, #0]
 8005fb0:	2005      	movs	r0, #5
 8005fb2:	b007      	add	sp, #28
 8005fb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fb8:	3501      	adds	r5, #1
 8005fba:	2d08      	cmp	r5, #8
 8005fbc:	f10b 0b01 	add.w	fp, fp, #1
 8005fc0:	dd06      	ble.n	8005fd0 <__hexnan+0x100>
 8005fc2:	4544      	cmp	r4, r8
 8005fc4:	d9c1      	bls.n	8005f4a <__hexnan+0x7a>
 8005fc6:	2300      	movs	r3, #0
 8005fc8:	f844 3c04 	str.w	r3, [r4, #-4]
 8005fcc:	2501      	movs	r5, #1
 8005fce:	3c04      	subs	r4, #4
 8005fd0:	6822      	ldr	r2, [r4, #0]
 8005fd2:	f000 000f 	and.w	r0, r0, #15
 8005fd6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005fda:	6020      	str	r0, [r4, #0]
 8005fdc:	e7b5      	b.n	8005f4a <__hexnan+0x7a>
 8005fde:	2508      	movs	r5, #8
 8005fe0:	e7b3      	b.n	8005f4a <__hexnan+0x7a>
 8005fe2:	9b01      	ldr	r3, [sp, #4]
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d0dd      	beq.n	8005fa4 <__hexnan+0xd4>
 8005fe8:	f1c3 0320 	rsb	r3, r3, #32
 8005fec:	f04f 32ff 	mov.w	r2, #4294967295
 8005ff0:	40da      	lsrs	r2, r3
 8005ff2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8005ff6:	4013      	ands	r3, r2
 8005ff8:	f846 3c04 	str.w	r3, [r6, #-4]
 8005ffc:	e7d2      	b.n	8005fa4 <__hexnan+0xd4>
 8005ffe:	3f04      	subs	r7, #4
 8006000:	e7d0      	b.n	8005fa4 <__hexnan+0xd4>
 8006002:	2004      	movs	r0, #4
 8006004:	e7d5      	b.n	8005fb2 <__hexnan+0xe2>

08006006 <__ascii_mbtowc>:
 8006006:	b082      	sub	sp, #8
 8006008:	b901      	cbnz	r1, 800600c <__ascii_mbtowc+0x6>
 800600a:	a901      	add	r1, sp, #4
 800600c:	b142      	cbz	r2, 8006020 <__ascii_mbtowc+0x1a>
 800600e:	b14b      	cbz	r3, 8006024 <__ascii_mbtowc+0x1e>
 8006010:	7813      	ldrb	r3, [r2, #0]
 8006012:	600b      	str	r3, [r1, #0]
 8006014:	7812      	ldrb	r2, [r2, #0]
 8006016:	1e10      	subs	r0, r2, #0
 8006018:	bf18      	it	ne
 800601a:	2001      	movne	r0, #1
 800601c:	b002      	add	sp, #8
 800601e:	4770      	bx	lr
 8006020:	4610      	mov	r0, r2
 8006022:	e7fb      	b.n	800601c <__ascii_mbtowc+0x16>
 8006024:	f06f 0001 	mvn.w	r0, #1
 8006028:	e7f8      	b.n	800601c <__ascii_mbtowc+0x16>

0800602a <_realloc_r>:
 800602a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800602e:	4607      	mov	r7, r0
 8006030:	4614      	mov	r4, r2
 8006032:	460d      	mov	r5, r1
 8006034:	b921      	cbnz	r1, 8006040 <_realloc_r+0x16>
 8006036:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800603a:	4611      	mov	r1, r2
 800603c:	f7fd be68 	b.w	8003d10 <_malloc_r>
 8006040:	b92a      	cbnz	r2, 800604e <_realloc_r+0x24>
 8006042:	f7fd fdf1 	bl	8003c28 <_free_r>
 8006046:	4625      	mov	r5, r4
 8006048:	4628      	mov	r0, r5
 800604a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800604e:	f000 f840 	bl	80060d2 <_malloc_usable_size_r>
 8006052:	4284      	cmp	r4, r0
 8006054:	4606      	mov	r6, r0
 8006056:	d802      	bhi.n	800605e <_realloc_r+0x34>
 8006058:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800605c:	d8f4      	bhi.n	8006048 <_realloc_r+0x1e>
 800605e:	4621      	mov	r1, r4
 8006060:	4638      	mov	r0, r7
 8006062:	f7fd fe55 	bl	8003d10 <_malloc_r>
 8006066:	4680      	mov	r8, r0
 8006068:	b908      	cbnz	r0, 800606e <_realloc_r+0x44>
 800606a:	4645      	mov	r5, r8
 800606c:	e7ec      	b.n	8006048 <_realloc_r+0x1e>
 800606e:	42b4      	cmp	r4, r6
 8006070:	4622      	mov	r2, r4
 8006072:	4629      	mov	r1, r5
 8006074:	bf28      	it	cs
 8006076:	4632      	movcs	r2, r6
 8006078:	f7ff fc44 	bl	8005904 <memcpy>
 800607c:	4629      	mov	r1, r5
 800607e:	4638      	mov	r0, r7
 8006080:	f7fd fdd2 	bl	8003c28 <_free_r>
 8006084:	e7f1      	b.n	800606a <_realloc_r+0x40>

08006086 <__ascii_wctomb>:
 8006086:	4603      	mov	r3, r0
 8006088:	4608      	mov	r0, r1
 800608a:	b141      	cbz	r1, 800609e <__ascii_wctomb+0x18>
 800608c:	2aff      	cmp	r2, #255	@ 0xff
 800608e:	d904      	bls.n	800609a <__ascii_wctomb+0x14>
 8006090:	228a      	movs	r2, #138	@ 0x8a
 8006092:	601a      	str	r2, [r3, #0]
 8006094:	f04f 30ff 	mov.w	r0, #4294967295
 8006098:	4770      	bx	lr
 800609a:	700a      	strb	r2, [r1, #0]
 800609c:	2001      	movs	r0, #1
 800609e:	4770      	bx	lr

080060a0 <fiprintf>:
 80060a0:	b40e      	push	{r1, r2, r3}
 80060a2:	b503      	push	{r0, r1, lr}
 80060a4:	4601      	mov	r1, r0
 80060a6:	ab03      	add	r3, sp, #12
 80060a8:	4805      	ldr	r0, [pc, #20]	@ (80060c0 <fiprintf+0x20>)
 80060aa:	f853 2b04 	ldr.w	r2, [r3], #4
 80060ae:	6800      	ldr	r0, [r0, #0]
 80060b0:	9301      	str	r3, [sp, #4]
 80060b2:	f000 f83f 	bl	8006134 <_vfiprintf_r>
 80060b6:	b002      	add	sp, #8
 80060b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80060bc:	b003      	add	sp, #12
 80060be:	4770      	bx	lr
 80060c0:	20000010 	.word	0x20000010

080060c4 <abort>:
 80060c4:	b508      	push	{r3, lr}
 80060c6:	2006      	movs	r0, #6
 80060c8:	f000 fa08 	bl	80064dc <raise>
 80060cc:	2001      	movs	r0, #1
 80060ce:	f7fb fdd4 	bl	8001c7a <_exit>

080060d2 <_malloc_usable_size_r>:
 80060d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80060d6:	1f18      	subs	r0, r3, #4
 80060d8:	2b00      	cmp	r3, #0
 80060da:	bfbc      	itt	lt
 80060dc:	580b      	ldrlt	r3, [r1, r0]
 80060de:	18c0      	addlt	r0, r0, r3
 80060e0:	4770      	bx	lr

080060e2 <__sfputc_r>:
 80060e2:	6893      	ldr	r3, [r2, #8]
 80060e4:	3b01      	subs	r3, #1
 80060e6:	2b00      	cmp	r3, #0
 80060e8:	b410      	push	{r4}
 80060ea:	6093      	str	r3, [r2, #8]
 80060ec:	da08      	bge.n	8006100 <__sfputc_r+0x1e>
 80060ee:	6994      	ldr	r4, [r2, #24]
 80060f0:	42a3      	cmp	r3, r4
 80060f2:	db01      	blt.n	80060f8 <__sfputc_r+0x16>
 80060f4:	290a      	cmp	r1, #10
 80060f6:	d103      	bne.n	8006100 <__sfputc_r+0x1e>
 80060f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80060fc:	f000 b932 	b.w	8006364 <__swbuf_r>
 8006100:	6813      	ldr	r3, [r2, #0]
 8006102:	1c58      	adds	r0, r3, #1
 8006104:	6010      	str	r0, [r2, #0]
 8006106:	7019      	strb	r1, [r3, #0]
 8006108:	4608      	mov	r0, r1
 800610a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800610e:	4770      	bx	lr

08006110 <__sfputs_r>:
 8006110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006112:	4606      	mov	r6, r0
 8006114:	460f      	mov	r7, r1
 8006116:	4614      	mov	r4, r2
 8006118:	18d5      	adds	r5, r2, r3
 800611a:	42ac      	cmp	r4, r5
 800611c:	d101      	bne.n	8006122 <__sfputs_r+0x12>
 800611e:	2000      	movs	r0, #0
 8006120:	e007      	b.n	8006132 <__sfputs_r+0x22>
 8006122:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006126:	463a      	mov	r2, r7
 8006128:	4630      	mov	r0, r6
 800612a:	f7ff ffda 	bl	80060e2 <__sfputc_r>
 800612e:	1c43      	adds	r3, r0, #1
 8006130:	d1f3      	bne.n	800611a <__sfputs_r+0xa>
 8006132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006134 <_vfiprintf_r>:
 8006134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006138:	460d      	mov	r5, r1
 800613a:	b09d      	sub	sp, #116	@ 0x74
 800613c:	4614      	mov	r4, r2
 800613e:	4698      	mov	r8, r3
 8006140:	4606      	mov	r6, r0
 8006142:	b118      	cbz	r0, 800614c <_vfiprintf_r+0x18>
 8006144:	6a03      	ldr	r3, [r0, #32]
 8006146:	b90b      	cbnz	r3, 800614c <_vfiprintf_r+0x18>
 8006148:	f7fc fdf4 	bl	8002d34 <__sinit>
 800614c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800614e:	07d9      	lsls	r1, r3, #31
 8006150:	d405      	bmi.n	800615e <_vfiprintf_r+0x2a>
 8006152:	89ab      	ldrh	r3, [r5, #12]
 8006154:	059a      	lsls	r2, r3, #22
 8006156:	d402      	bmi.n	800615e <_vfiprintf_r+0x2a>
 8006158:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800615a:	f7fc ff04 	bl	8002f66 <__retarget_lock_acquire_recursive>
 800615e:	89ab      	ldrh	r3, [r5, #12]
 8006160:	071b      	lsls	r3, r3, #28
 8006162:	d501      	bpl.n	8006168 <_vfiprintf_r+0x34>
 8006164:	692b      	ldr	r3, [r5, #16]
 8006166:	b99b      	cbnz	r3, 8006190 <_vfiprintf_r+0x5c>
 8006168:	4629      	mov	r1, r5
 800616a:	4630      	mov	r0, r6
 800616c:	f000 f938 	bl	80063e0 <__swsetup_r>
 8006170:	b170      	cbz	r0, 8006190 <_vfiprintf_r+0x5c>
 8006172:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006174:	07dc      	lsls	r4, r3, #31
 8006176:	d504      	bpl.n	8006182 <_vfiprintf_r+0x4e>
 8006178:	f04f 30ff 	mov.w	r0, #4294967295
 800617c:	b01d      	add	sp, #116	@ 0x74
 800617e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006182:	89ab      	ldrh	r3, [r5, #12]
 8006184:	0598      	lsls	r0, r3, #22
 8006186:	d4f7      	bmi.n	8006178 <_vfiprintf_r+0x44>
 8006188:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800618a:	f7fc feed 	bl	8002f68 <__retarget_lock_release_recursive>
 800618e:	e7f3      	b.n	8006178 <_vfiprintf_r+0x44>
 8006190:	2300      	movs	r3, #0
 8006192:	9309      	str	r3, [sp, #36]	@ 0x24
 8006194:	2320      	movs	r3, #32
 8006196:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800619a:	f8cd 800c 	str.w	r8, [sp, #12]
 800619e:	2330      	movs	r3, #48	@ 0x30
 80061a0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8006350 <_vfiprintf_r+0x21c>
 80061a4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80061a8:	f04f 0901 	mov.w	r9, #1
 80061ac:	4623      	mov	r3, r4
 80061ae:	469a      	mov	sl, r3
 80061b0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80061b4:	b10a      	cbz	r2, 80061ba <_vfiprintf_r+0x86>
 80061b6:	2a25      	cmp	r2, #37	@ 0x25
 80061b8:	d1f9      	bne.n	80061ae <_vfiprintf_r+0x7a>
 80061ba:	ebba 0b04 	subs.w	fp, sl, r4
 80061be:	d00b      	beq.n	80061d8 <_vfiprintf_r+0xa4>
 80061c0:	465b      	mov	r3, fp
 80061c2:	4622      	mov	r2, r4
 80061c4:	4629      	mov	r1, r5
 80061c6:	4630      	mov	r0, r6
 80061c8:	f7ff ffa2 	bl	8006110 <__sfputs_r>
 80061cc:	3001      	adds	r0, #1
 80061ce:	f000 80a7 	beq.w	8006320 <_vfiprintf_r+0x1ec>
 80061d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80061d4:	445a      	add	r2, fp
 80061d6:	9209      	str	r2, [sp, #36]	@ 0x24
 80061d8:	f89a 3000 	ldrb.w	r3, [sl]
 80061dc:	2b00      	cmp	r3, #0
 80061de:	f000 809f 	beq.w	8006320 <_vfiprintf_r+0x1ec>
 80061e2:	2300      	movs	r3, #0
 80061e4:	f04f 32ff 	mov.w	r2, #4294967295
 80061e8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80061ec:	f10a 0a01 	add.w	sl, sl, #1
 80061f0:	9304      	str	r3, [sp, #16]
 80061f2:	9307      	str	r3, [sp, #28]
 80061f4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80061f8:	931a      	str	r3, [sp, #104]	@ 0x68
 80061fa:	4654      	mov	r4, sl
 80061fc:	2205      	movs	r2, #5
 80061fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006202:	4853      	ldr	r0, [pc, #332]	@ (8006350 <_vfiprintf_r+0x21c>)
 8006204:	f7f9 ffec 	bl	80001e0 <memchr>
 8006208:	9a04      	ldr	r2, [sp, #16]
 800620a:	b9d8      	cbnz	r0, 8006244 <_vfiprintf_r+0x110>
 800620c:	06d1      	lsls	r1, r2, #27
 800620e:	bf44      	itt	mi
 8006210:	2320      	movmi	r3, #32
 8006212:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006216:	0713      	lsls	r3, r2, #28
 8006218:	bf44      	itt	mi
 800621a:	232b      	movmi	r3, #43	@ 0x2b
 800621c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8006220:	f89a 3000 	ldrb.w	r3, [sl]
 8006224:	2b2a      	cmp	r3, #42	@ 0x2a
 8006226:	d015      	beq.n	8006254 <_vfiprintf_r+0x120>
 8006228:	9a07      	ldr	r2, [sp, #28]
 800622a:	4654      	mov	r4, sl
 800622c:	2000      	movs	r0, #0
 800622e:	f04f 0c0a 	mov.w	ip, #10
 8006232:	4621      	mov	r1, r4
 8006234:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006238:	3b30      	subs	r3, #48	@ 0x30
 800623a:	2b09      	cmp	r3, #9
 800623c:	d94b      	bls.n	80062d6 <_vfiprintf_r+0x1a2>
 800623e:	b1b0      	cbz	r0, 800626e <_vfiprintf_r+0x13a>
 8006240:	9207      	str	r2, [sp, #28]
 8006242:	e014      	b.n	800626e <_vfiprintf_r+0x13a>
 8006244:	eba0 0308 	sub.w	r3, r0, r8
 8006248:	fa09 f303 	lsl.w	r3, r9, r3
 800624c:	4313      	orrs	r3, r2
 800624e:	9304      	str	r3, [sp, #16]
 8006250:	46a2      	mov	sl, r4
 8006252:	e7d2      	b.n	80061fa <_vfiprintf_r+0xc6>
 8006254:	9b03      	ldr	r3, [sp, #12]
 8006256:	1d19      	adds	r1, r3, #4
 8006258:	681b      	ldr	r3, [r3, #0]
 800625a:	9103      	str	r1, [sp, #12]
 800625c:	2b00      	cmp	r3, #0
 800625e:	bfbb      	ittet	lt
 8006260:	425b      	neglt	r3, r3
 8006262:	f042 0202 	orrlt.w	r2, r2, #2
 8006266:	9307      	strge	r3, [sp, #28]
 8006268:	9307      	strlt	r3, [sp, #28]
 800626a:	bfb8      	it	lt
 800626c:	9204      	strlt	r2, [sp, #16]
 800626e:	7823      	ldrb	r3, [r4, #0]
 8006270:	2b2e      	cmp	r3, #46	@ 0x2e
 8006272:	d10a      	bne.n	800628a <_vfiprintf_r+0x156>
 8006274:	7863      	ldrb	r3, [r4, #1]
 8006276:	2b2a      	cmp	r3, #42	@ 0x2a
 8006278:	d132      	bne.n	80062e0 <_vfiprintf_r+0x1ac>
 800627a:	9b03      	ldr	r3, [sp, #12]
 800627c:	1d1a      	adds	r2, r3, #4
 800627e:	681b      	ldr	r3, [r3, #0]
 8006280:	9203      	str	r2, [sp, #12]
 8006282:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006286:	3402      	adds	r4, #2
 8006288:	9305      	str	r3, [sp, #20]
 800628a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8006360 <_vfiprintf_r+0x22c>
 800628e:	7821      	ldrb	r1, [r4, #0]
 8006290:	2203      	movs	r2, #3
 8006292:	4650      	mov	r0, sl
 8006294:	f7f9 ffa4 	bl	80001e0 <memchr>
 8006298:	b138      	cbz	r0, 80062aa <_vfiprintf_r+0x176>
 800629a:	9b04      	ldr	r3, [sp, #16]
 800629c:	eba0 000a 	sub.w	r0, r0, sl
 80062a0:	2240      	movs	r2, #64	@ 0x40
 80062a2:	4082      	lsls	r2, r0
 80062a4:	4313      	orrs	r3, r2
 80062a6:	3401      	adds	r4, #1
 80062a8:	9304      	str	r3, [sp, #16]
 80062aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80062ae:	4829      	ldr	r0, [pc, #164]	@ (8006354 <_vfiprintf_r+0x220>)
 80062b0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80062b4:	2206      	movs	r2, #6
 80062b6:	f7f9 ff93 	bl	80001e0 <memchr>
 80062ba:	2800      	cmp	r0, #0
 80062bc:	d03f      	beq.n	800633e <_vfiprintf_r+0x20a>
 80062be:	4b26      	ldr	r3, [pc, #152]	@ (8006358 <_vfiprintf_r+0x224>)
 80062c0:	bb1b      	cbnz	r3, 800630a <_vfiprintf_r+0x1d6>
 80062c2:	9b03      	ldr	r3, [sp, #12]
 80062c4:	3307      	adds	r3, #7
 80062c6:	f023 0307 	bic.w	r3, r3, #7
 80062ca:	3308      	adds	r3, #8
 80062cc:	9303      	str	r3, [sp, #12]
 80062ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80062d0:	443b      	add	r3, r7
 80062d2:	9309      	str	r3, [sp, #36]	@ 0x24
 80062d4:	e76a      	b.n	80061ac <_vfiprintf_r+0x78>
 80062d6:	fb0c 3202 	mla	r2, ip, r2, r3
 80062da:	460c      	mov	r4, r1
 80062dc:	2001      	movs	r0, #1
 80062de:	e7a8      	b.n	8006232 <_vfiprintf_r+0xfe>
 80062e0:	2300      	movs	r3, #0
 80062e2:	3401      	adds	r4, #1
 80062e4:	9305      	str	r3, [sp, #20]
 80062e6:	4619      	mov	r1, r3
 80062e8:	f04f 0c0a 	mov.w	ip, #10
 80062ec:	4620      	mov	r0, r4
 80062ee:	f810 2b01 	ldrb.w	r2, [r0], #1
 80062f2:	3a30      	subs	r2, #48	@ 0x30
 80062f4:	2a09      	cmp	r2, #9
 80062f6:	d903      	bls.n	8006300 <_vfiprintf_r+0x1cc>
 80062f8:	2b00      	cmp	r3, #0
 80062fa:	d0c6      	beq.n	800628a <_vfiprintf_r+0x156>
 80062fc:	9105      	str	r1, [sp, #20]
 80062fe:	e7c4      	b.n	800628a <_vfiprintf_r+0x156>
 8006300:	fb0c 2101 	mla	r1, ip, r1, r2
 8006304:	4604      	mov	r4, r0
 8006306:	2301      	movs	r3, #1
 8006308:	e7f0      	b.n	80062ec <_vfiprintf_r+0x1b8>
 800630a:	ab03      	add	r3, sp, #12
 800630c:	9300      	str	r3, [sp, #0]
 800630e:	462a      	mov	r2, r5
 8006310:	4b12      	ldr	r3, [pc, #72]	@ (800635c <_vfiprintf_r+0x228>)
 8006312:	a904      	add	r1, sp, #16
 8006314:	4630      	mov	r0, r6
 8006316:	f7fb febd 	bl	8002094 <_printf_float>
 800631a:	4607      	mov	r7, r0
 800631c:	1c78      	adds	r0, r7, #1
 800631e:	d1d6      	bne.n	80062ce <_vfiprintf_r+0x19a>
 8006320:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006322:	07d9      	lsls	r1, r3, #31
 8006324:	d405      	bmi.n	8006332 <_vfiprintf_r+0x1fe>
 8006326:	89ab      	ldrh	r3, [r5, #12]
 8006328:	059a      	lsls	r2, r3, #22
 800632a:	d402      	bmi.n	8006332 <_vfiprintf_r+0x1fe>
 800632c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800632e:	f7fc fe1b 	bl	8002f68 <__retarget_lock_release_recursive>
 8006332:	89ab      	ldrh	r3, [r5, #12]
 8006334:	065b      	lsls	r3, r3, #25
 8006336:	f53f af1f 	bmi.w	8006178 <_vfiprintf_r+0x44>
 800633a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800633c:	e71e      	b.n	800617c <_vfiprintf_r+0x48>
 800633e:	ab03      	add	r3, sp, #12
 8006340:	9300      	str	r3, [sp, #0]
 8006342:	462a      	mov	r2, r5
 8006344:	4b05      	ldr	r3, [pc, #20]	@ (800635c <_vfiprintf_r+0x228>)
 8006346:	a904      	add	r1, sp, #16
 8006348:	4630      	mov	r0, r6
 800634a:	f7fc f93b 	bl	80025c4 <_printf_i>
 800634e:	e7e4      	b.n	800631a <_vfiprintf_r+0x1e6>
 8006350:	08006c75 	.word	0x08006c75
 8006354:	08006c7f 	.word	0x08006c7f
 8006358:	08002095 	.word	0x08002095
 800635c:	08006111 	.word	0x08006111
 8006360:	08006c7b 	.word	0x08006c7b

08006364 <__swbuf_r>:
 8006364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006366:	460e      	mov	r6, r1
 8006368:	4614      	mov	r4, r2
 800636a:	4605      	mov	r5, r0
 800636c:	b118      	cbz	r0, 8006376 <__swbuf_r+0x12>
 800636e:	6a03      	ldr	r3, [r0, #32]
 8006370:	b90b      	cbnz	r3, 8006376 <__swbuf_r+0x12>
 8006372:	f7fc fcdf 	bl	8002d34 <__sinit>
 8006376:	69a3      	ldr	r3, [r4, #24]
 8006378:	60a3      	str	r3, [r4, #8]
 800637a:	89a3      	ldrh	r3, [r4, #12]
 800637c:	071a      	lsls	r2, r3, #28
 800637e:	d501      	bpl.n	8006384 <__swbuf_r+0x20>
 8006380:	6923      	ldr	r3, [r4, #16]
 8006382:	b943      	cbnz	r3, 8006396 <__swbuf_r+0x32>
 8006384:	4621      	mov	r1, r4
 8006386:	4628      	mov	r0, r5
 8006388:	f000 f82a 	bl	80063e0 <__swsetup_r>
 800638c:	b118      	cbz	r0, 8006396 <__swbuf_r+0x32>
 800638e:	f04f 37ff 	mov.w	r7, #4294967295
 8006392:	4638      	mov	r0, r7
 8006394:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006396:	6823      	ldr	r3, [r4, #0]
 8006398:	6922      	ldr	r2, [r4, #16]
 800639a:	1a98      	subs	r0, r3, r2
 800639c:	6963      	ldr	r3, [r4, #20]
 800639e:	b2f6      	uxtb	r6, r6
 80063a0:	4283      	cmp	r3, r0
 80063a2:	4637      	mov	r7, r6
 80063a4:	dc05      	bgt.n	80063b2 <__swbuf_r+0x4e>
 80063a6:	4621      	mov	r1, r4
 80063a8:	4628      	mov	r0, r5
 80063aa:	f7ff fa47 	bl	800583c <_fflush_r>
 80063ae:	2800      	cmp	r0, #0
 80063b0:	d1ed      	bne.n	800638e <__swbuf_r+0x2a>
 80063b2:	68a3      	ldr	r3, [r4, #8]
 80063b4:	3b01      	subs	r3, #1
 80063b6:	60a3      	str	r3, [r4, #8]
 80063b8:	6823      	ldr	r3, [r4, #0]
 80063ba:	1c5a      	adds	r2, r3, #1
 80063bc:	6022      	str	r2, [r4, #0]
 80063be:	701e      	strb	r6, [r3, #0]
 80063c0:	6962      	ldr	r2, [r4, #20]
 80063c2:	1c43      	adds	r3, r0, #1
 80063c4:	429a      	cmp	r2, r3
 80063c6:	d004      	beq.n	80063d2 <__swbuf_r+0x6e>
 80063c8:	89a3      	ldrh	r3, [r4, #12]
 80063ca:	07db      	lsls	r3, r3, #31
 80063cc:	d5e1      	bpl.n	8006392 <__swbuf_r+0x2e>
 80063ce:	2e0a      	cmp	r6, #10
 80063d0:	d1df      	bne.n	8006392 <__swbuf_r+0x2e>
 80063d2:	4621      	mov	r1, r4
 80063d4:	4628      	mov	r0, r5
 80063d6:	f7ff fa31 	bl	800583c <_fflush_r>
 80063da:	2800      	cmp	r0, #0
 80063dc:	d0d9      	beq.n	8006392 <__swbuf_r+0x2e>
 80063de:	e7d6      	b.n	800638e <__swbuf_r+0x2a>

080063e0 <__swsetup_r>:
 80063e0:	b538      	push	{r3, r4, r5, lr}
 80063e2:	4b29      	ldr	r3, [pc, #164]	@ (8006488 <__swsetup_r+0xa8>)
 80063e4:	4605      	mov	r5, r0
 80063e6:	6818      	ldr	r0, [r3, #0]
 80063e8:	460c      	mov	r4, r1
 80063ea:	b118      	cbz	r0, 80063f4 <__swsetup_r+0x14>
 80063ec:	6a03      	ldr	r3, [r0, #32]
 80063ee:	b90b      	cbnz	r3, 80063f4 <__swsetup_r+0x14>
 80063f0:	f7fc fca0 	bl	8002d34 <__sinit>
 80063f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80063f8:	0719      	lsls	r1, r3, #28
 80063fa:	d422      	bmi.n	8006442 <__swsetup_r+0x62>
 80063fc:	06da      	lsls	r2, r3, #27
 80063fe:	d407      	bmi.n	8006410 <__swsetup_r+0x30>
 8006400:	2209      	movs	r2, #9
 8006402:	602a      	str	r2, [r5, #0]
 8006404:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006408:	81a3      	strh	r3, [r4, #12]
 800640a:	f04f 30ff 	mov.w	r0, #4294967295
 800640e:	e033      	b.n	8006478 <__swsetup_r+0x98>
 8006410:	0758      	lsls	r0, r3, #29
 8006412:	d512      	bpl.n	800643a <__swsetup_r+0x5a>
 8006414:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8006416:	b141      	cbz	r1, 800642a <__swsetup_r+0x4a>
 8006418:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800641c:	4299      	cmp	r1, r3
 800641e:	d002      	beq.n	8006426 <__swsetup_r+0x46>
 8006420:	4628      	mov	r0, r5
 8006422:	f7fd fc01 	bl	8003c28 <_free_r>
 8006426:	2300      	movs	r3, #0
 8006428:	6363      	str	r3, [r4, #52]	@ 0x34
 800642a:	89a3      	ldrh	r3, [r4, #12]
 800642c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8006430:	81a3      	strh	r3, [r4, #12]
 8006432:	2300      	movs	r3, #0
 8006434:	6063      	str	r3, [r4, #4]
 8006436:	6923      	ldr	r3, [r4, #16]
 8006438:	6023      	str	r3, [r4, #0]
 800643a:	89a3      	ldrh	r3, [r4, #12]
 800643c:	f043 0308 	orr.w	r3, r3, #8
 8006440:	81a3      	strh	r3, [r4, #12]
 8006442:	6923      	ldr	r3, [r4, #16]
 8006444:	b94b      	cbnz	r3, 800645a <__swsetup_r+0x7a>
 8006446:	89a3      	ldrh	r3, [r4, #12]
 8006448:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800644c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006450:	d003      	beq.n	800645a <__swsetup_r+0x7a>
 8006452:	4621      	mov	r1, r4
 8006454:	4628      	mov	r0, r5
 8006456:	f000 f883 	bl	8006560 <__smakebuf_r>
 800645a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800645e:	f013 0201 	ands.w	r2, r3, #1
 8006462:	d00a      	beq.n	800647a <__swsetup_r+0x9a>
 8006464:	2200      	movs	r2, #0
 8006466:	60a2      	str	r2, [r4, #8]
 8006468:	6962      	ldr	r2, [r4, #20]
 800646a:	4252      	negs	r2, r2
 800646c:	61a2      	str	r2, [r4, #24]
 800646e:	6922      	ldr	r2, [r4, #16]
 8006470:	b942      	cbnz	r2, 8006484 <__swsetup_r+0xa4>
 8006472:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8006476:	d1c5      	bne.n	8006404 <__swsetup_r+0x24>
 8006478:	bd38      	pop	{r3, r4, r5, pc}
 800647a:	0799      	lsls	r1, r3, #30
 800647c:	bf58      	it	pl
 800647e:	6962      	ldrpl	r2, [r4, #20]
 8006480:	60a2      	str	r2, [r4, #8]
 8006482:	e7f4      	b.n	800646e <__swsetup_r+0x8e>
 8006484:	2000      	movs	r0, #0
 8006486:	e7f7      	b.n	8006478 <__swsetup_r+0x98>
 8006488:	20000010 	.word	0x20000010

0800648c <_raise_r>:
 800648c:	291f      	cmp	r1, #31
 800648e:	b538      	push	{r3, r4, r5, lr}
 8006490:	4605      	mov	r5, r0
 8006492:	460c      	mov	r4, r1
 8006494:	d904      	bls.n	80064a0 <_raise_r+0x14>
 8006496:	2316      	movs	r3, #22
 8006498:	6003      	str	r3, [r0, #0]
 800649a:	f04f 30ff 	mov.w	r0, #4294967295
 800649e:	bd38      	pop	{r3, r4, r5, pc}
 80064a0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80064a2:	b112      	cbz	r2, 80064aa <_raise_r+0x1e>
 80064a4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80064a8:	b94b      	cbnz	r3, 80064be <_raise_r+0x32>
 80064aa:	4628      	mov	r0, r5
 80064ac:	f000 f830 	bl	8006510 <_getpid_r>
 80064b0:	4622      	mov	r2, r4
 80064b2:	4601      	mov	r1, r0
 80064b4:	4628      	mov	r0, r5
 80064b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80064ba:	f000 b817 	b.w	80064ec <_kill_r>
 80064be:	2b01      	cmp	r3, #1
 80064c0:	d00a      	beq.n	80064d8 <_raise_r+0x4c>
 80064c2:	1c59      	adds	r1, r3, #1
 80064c4:	d103      	bne.n	80064ce <_raise_r+0x42>
 80064c6:	2316      	movs	r3, #22
 80064c8:	6003      	str	r3, [r0, #0]
 80064ca:	2001      	movs	r0, #1
 80064cc:	e7e7      	b.n	800649e <_raise_r+0x12>
 80064ce:	2100      	movs	r1, #0
 80064d0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80064d4:	4620      	mov	r0, r4
 80064d6:	4798      	blx	r3
 80064d8:	2000      	movs	r0, #0
 80064da:	e7e0      	b.n	800649e <_raise_r+0x12>

080064dc <raise>:
 80064dc:	4b02      	ldr	r3, [pc, #8]	@ (80064e8 <raise+0xc>)
 80064de:	4601      	mov	r1, r0
 80064e0:	6818      	ldr	r0, [r3, #0]
 80064e2:	f7ff bfd3 	b.w	800648c <_raise_r>
 80064e6:	bf00      	nop
 80064e8:	20000010 	.word	0x20000010

080064ec <_kill_r>:
 80064ec:	b538      	push	{r3, r4, r5, lr}
 80064ee:	4d07      	ldr	r5, [pc, #28]	@ (800650c <_kill_r+0x20>)
 80064f0:	2300      	movs	r3, #0
 80064f2:	4604      	mov	r4, r0
 80064f4:	4608      	mov	r0, r1
 80064f6:	4611      	mov	r1, r2
 80064f8:	602b      	str	r3, [r5, #0]
 80064fa:	f7fb fbae 	bl	8001c5a <_kill>
 80064fe:	1c43      	adds	r3, r0, #1
 8006500:	d102      	bne.n	8006508 <_kill_r+0x1c>
 8006502:	682b      	ldr	r3, [r5, #0]
 8006504:	b103      	cbz	r3, 8006508 <_kill_r+0x1c>
 8006506:	6023      	str	r3, [r4, #0]
 8006508:	bd38      	pop	{r3, r4, r5, pc}
 800650a:	bf00      	nop
 800650c:	20000334 	.word	0x20000334

08006510 <_getpid_r>:
 8006510:	f7fb bb9b 	b.w	8001c4a <_getpid>

08006514 <__swhatbuf_r>:
 8006514:	b570      	push	{r4, r5, r6, lr}
 8006516:	460c      	mov	r4, r1
 8006518:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800651c:	2900      	cmp	r1, #0
 800651e:	b096      	sub	sp, #88	@ 0x58
 8006520:	4615      	mov	r5, r2
 8006522:	461e      	mov	r6, r3
 8006524:	da0d      	bge.n	8006542 <__swhatbuf_r+0x2e>
 8006526:	89a3      	ldrh	r3, [r4, #12]
 8006528:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800652c:	f04f 0100 	mov.w	r1, #0
 8006530:	bf14      	ite	ne
 8006532:	2340      	movne	r3, #64	@ 0x40
 8006534:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006538:	2000      	movs	r0, #0
 800653a:	6031      	str	r1, [r6, #0]
 800653c:	602b      	str	r3, [r5, #0]
 800653e:	b016      	add	sp, #88	@ 0x58
 8006540:	bd70      	pop	{r4, r5, r6, pc}
 8006542:	466a      	mov	r2, sp
 8006544:	f000 f848 	bl	80065d8 <_fstat_r>
 8006548:	2800      	cmp	r0, #0
 800654a:	dbec      	blt.n	8006526 <__swhatbuf_r+0x12>
 800654c:	9901      	ldr	r1, [sp, #4]
 800654e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006552:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006556:	4259      	negs	r1, r3
 8006558:	4159      	adcs	r1, r3
 800655a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800655e:	e7eb      	b.n	8006538 <__swhatbuf_r+0x24>

08006560 <__smakebuf_r>:
 8006560:	898b      	ldrh	r3, [r1, #12]
 8006562:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006564:	079d      	lsls	r5, r3, #30
 8006566:	4606      	mov	r6, r0
 8006568:	460c      	mov	r4, r1
 800656a:	d507      	bpl.n	800657c <__smakebuf_r+0x1c>
 800656c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006570:	6023      	str	r3, [r4, #0]
 8006572:	6123      	str	r3, [r4, #16]
 8006574:	2301      	movs	r3, #1
 8006576:	6163      	str	r3, [r4, #20]
 8006578:	b003      	add	sp, #12
 800657a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800657c:	ab01      	add	r3, sp, #4
 800657e:	466a      	mov	r2, sp
 8006580:	f7ff ffc8 	bl	8006514 <__swhatbuf_r>
 8006584:	9f00      	ldr	r7, [sp, #0]
 8006586:	4605      	mov	r5, r0
 8006588:	4639      	mov	r1, r7
 800658a:	4630      	mov	r0, r6
 800658c:	f7fd fbc0 	bl	8003d10 <_malloc_r>
 8006590:	b948      	cbnz	r0, 80065a6 <__smakebuf_r+0x46>
 8006592:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006596:	059a      	lsls	r2, r3, #22
 8006598:	d4ee      	bmi.n	8006578 <__smakebuf_r+0x18>
 800659a:	f023 0303 	bic.w	r3, r3, #3
 800659e:	f043 0302 	orr.w	r3, r3, #2
 80065a2:	81a3      	strh	r3, [r4, #12]
 80065a4:	e7e2      	b.n	800656c <__smakebuf_r+0xc>
 80065a6:	89a3      	ldrh	r3, [r4, #12]
 80065a8:	6020      	str	r0, [r4, #0]
 80065aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80065ae:	81a3      	strh	r3, [r4, #12]
 80065b0:	9b01      	ldr	r3, [sp, #4]
 80065b2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80065b6:	b15b      	cbz	r3, 80065d0 <__smakebuf_r+0x70>
 80065b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80065bc:	4630      	mov	r0, r6
 80065be:	f000 f81d 	bl	80065fc <_isatty_r>
 80065c2:	b128      	cbz	r0, 80065d0 <__smakebuf_r+0x70>
 80065c4:	89a3      	ldrh	r3, [r4, #12]
 80065c6:	f023 0303 	bic.w	r3, r3, #3
 80065ca:	f043 0301 	orr.w	r3, r3, #1
 80065ce:	81a3      	strh	r3, [r4, #12]
 80065d0:	89a3      	ldrh	r3, [r4, #12]
 80065d2:	431d      	orrs	r5, r3
 80065d4:	81a5      	strh	r5, [r4, #12]
 80065d6:	e7cf      	b.n	8006578 <__smakebuf_r+0x18>

080065d8 <_fstat_r>:
 80065d8:	b538      	push	{r3, r4, r5, lr}
 80065da:	4d07      	ldr	r5, [pc, #28]	@ (80065f8 <_fstat_r+0x20>)
 80065dc:	2300      	movs	r3, #0
 80065de:	4604      	mov	r4, r0
 80065e0:	4608      	mov	r0, r1
 80065e2:	4611      	mov	r1, r2
 80065e4:	602b      	str	r3, [r5, #0]
 80065e6:	f7fb fb98 	bl	8001d1a <_fstat>
 80065ea:	1c43      	adds	r3, r0, #1
 80065ec:	d102      	bne.n	80065f4 <_fstat_r+0x1c>
 80065ee:	682b      	ldr	r3, [r5, #0]
 80065f0:	b103      	cbz	r3, 80065f4 <_fstat_r+0x1c>
 80065f2:	6023      	str	r3, [r4, #0]
 80065f4:	bd38      	pop	{r3, r4, r5, pc}
 80065f6:	bf00      	nop
 80065f8:	20000334 	.word	0x20000334

080065fc <_isatty_r>:
 80065fc:	b538      	push	{r3, r4, r5, lr}
 80065fe:	4d06      	ldr	r5, [pc, #24]	@ (8006618 <_isatty_r+0x1c>)
 8006600:	2300      	movs	r3, #0
 8006602:	4604      	mov	r4, r0
 8006604:	4608      	mov	r0, r1
 8006606:	602b      	str	r3, [r5, #0]
 8006608:	f7fb fb97 	bl	8001d3a <_isatty>
 800660c:	1c43      	adds	r3, r0, #1
 800660e:	d102      	bne.n	8006616 <_isatty_r+0x1a>
 8006610:	682b      	ldr	r3, [r5, #0]
 8006612:	b103      	cbz	r3, 8006616 <_isatty_r+0x1a>
 8006614:	6023      	str	r3, [r4, #0]
 8006616:	bd38      	pop	{r3, r4, r5, pc}
 8006618:	20000334 	.word	0x20000334

0800661c <atan2f>:
 800661c:	f000 b800 	b.w	8006620 <__ieee754_atan2f>

08006620 <__ieee754_atan2f>:
 8006620:	ee10 2a90 	vmov	r2, s1
 8006624:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8006628:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 800662c:	b510      	push	{r4, lr}
 800662e:	eef0 7a40 	vmov.f32	s15, s0
 8006632:	d806      	bhi.n	8006642 <__ieee754_atan2f+0x22>
 8006634:	ee10 0a10 	vmov	r0, s0
 8006638:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 800663c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8006640:	d904      	bls.n	800664c <__ieee754_atan2f+0x2c>
 8006642:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8006646:	eeb0 0a67 	vmov.f32	s0, s15
 800664a:	bd10      	pop	{r4, pc}
 800664c:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8006650:	d103      	bne.n	800665a <__ieee754_atan2f+0x3a>
 8006652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006656:	f000 b883 	b.w	8006760 <atanf>
 800665a:	1794      	asrs	r4, r2, #30
 800665c:	f004 0402 	and.w	r4, r4, #2
 8006660:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8006664:	b943      	cbnz	r3, 8006678 <__ieee754_atan2f+0x58>
 8006666:	2c02      	cmp	r4, #2
 8006668:	d05e      	beq.n	8006728 <__ieee754_atan2f+0x108>
 800666a:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 800673c <__ieee754_atan2f+0x11c>
 800666e:	2c03      	cmp	r4, #3
 8006670:	bf08      	it	eq
 8006672:	eef0 7a47 	vmoveq.f32	s15, s14
 8006676:	e7e6      	b.n	8006646 <__ieee754_atan2f+0x26>
 8006678:	b941      	cbnz	r1, 800668c <__ieee754_atan2f+0x6c>
 800667a:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8006740 <__ieee754_atan2f+0x120>
 800667e:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8006744 <__ieee754_atan2f+0x124>
 8006682:	2800      	cmp	r0, #0
 8006684:	bfa8      	it	ge
 8006686:	eef0 7a47 	vmovge.f32	s15, s14
 800668a:	e7dc      	b.n	8006646 <__ieee754_atan2f+0x26>
 800668c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8006690:	d110      	bne.n	80066b4 <__ieee754_atan2f+0x94>
 8006692:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8006696:	f104 34ff 	add.w	r4, r4, #4294967295
 800669a:	d107      	bne.n	80066ac <__ieee754_atan2f+0x8c>
 800669c:	2c02      	cmp	r4, #2
 800669e:	d846      	bhi.n	800672e <__ieee754_atan2f+0x10e>
 80066a0:	4b29      	ldr	r3, [pc, #164]	@ (8006748 <__ieee754_atan2f+0x128>)
 80066a2:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80066a6:	edd3 7a00 	vldr	s15, [r3]
 80066aa:	e7cc      	b.n	8006646 <__ieee754_atan2f+0x26>
 80066ac:	2c02      	cmp	r4, #2
 80066ae:	d841      	bhi.n	8006734 <__ieee754_atan2f+0x114>
 80066b0:	4b26      	ldr	r3, [pc, #152]	@ (800674c <__ieee754_atan2f+0x12c>)
 80066b2:	e7f6      	b.n	80066a2 <__ieee754_atan2f+0x82>
 80066b4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80066b8:	d0df      	beq.n	800667a <__ieee754_atan2f+0x5a>
 80066ba:	1a5b      	subs	r3, r3, r1
 80066bc:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 80066c0:	ea4f 51e3 	mov.w	r1, r3, asr #23
 80066c4:	da1a      	bge.n	80066fc <__ieee754_atan2f+0xdc>
 80066c6:	2a00      	cmp	r2, #0
 80066c8:	da01      	bge.n	80066ce <__ieee754_atan2f+0xae>
 80066ca:	313c      	adds	r1, #60	@ 0x3c
 80066cc:	db19      	blt.n	8006702 <__ieee754_atan2f+0xe2>
 80066ce:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 80066d2:	f000 f919 	bl	8006908 <fabsf>
 80066d6:	f000 f843 	bl	8006760 <atanf>
 80066da:	eef0 7a40 	vmov.f32	s15, s0
 80066de:	2c01      	cmp	r4, #1
 80066e0:	d012      	beq.n	8006708 <__ieee754_atan2f+0xe8>
 80066e2:	2c02      	cmp	r4, #2
 80066e4:	d017      	beq.n	8006716 <__ieee754_atan2f+0xf6>
 80066e6:	2c00      	cmp	r4, #0
 80066e8:	d0ad      	beq.n	8006646 <__ieee754_atan2f+0x26>
 80066ea:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8006750 <__ieee754_atan2f+0x130>
 80066ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80066f2:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8006754 <__ieee754_atan2f+0x134>
 80066f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80066fa:	e7a4      	b.n	8006646 <__ieee754_atan2f+0x26>
 80066fc:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8006744 <__ieee754_atan2f+0x124>
 8006700:	e7ed      	b.n	80066de <__ieee754_atan2f+0xbe>
 8006702:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8006758 <__ieee754_atan2f+0x138>
 8006706:	e7ea      	b.n	80066de <__ieee754_atan2f+0xbe>
 8006708:	ee17 3a90 	vmov	r3, s15
 800670c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8006710:	ee07 3a90 	vmov	s15, r3
 8006714:	e797      	b.n	8006646 <__ieee754_atan2f+0x26>
 8006716:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8006750 <__ieee754_atan2f+0x130>
 800671a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800671e:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8006754 <__ieee754_atan2f+0x134>
 8006722:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006726:	e78e      	b.n	8006646 <__ieee754_atan2f+0x26>
 8006728:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8006754 <__ieee754_atan2f+0x134>
 800672c:	e78b      	b.n	8006646 <__ieee754_atan2f+0x26>
 800672e:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 800675c <__ieee754_atan2f+0x13c>
 8006732:	e788      	b.n	8006646 <__ieee754_atan2f+0x26>
 8006734:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8006758 <__ieee754_atan2f+0x138>
 8006738:	e785      	b.n	8006646 <__ieee754_atan2f+0x26>
 800673a:	bf00      	nop
 800673c:	c0490fdb 	.word	0xc0490fdb
 8006740:	bfc90fdb 	.word	0xbfc90fdb
 8006744:	3fc90fdb 	.word	0x3fc90fdb
 8006748:	08006f88 	.word	0x08006f88
 800674c:	08006f7c 	.word	0x08006f7c
 8006750:	33bbbd2e 	.word	0x33bbbd2e
 8006754:	40490fdb 	.word	0x40490fdb
 8006758:	00000000 	.word	0x00000000
 800675c:	3f490fdb 	.word	0x3f490fdb

08006760 <atanf>:
 8006760:	b538      	push	{r3, r4, r5, lr}
 8006762:	ee10 5a10 	vmov	r5, s0
 8006766:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 800676a:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 800676e:	eef0 7a40 	vmov.f32	s15, s0
 8006772:	d310      	bcc.n	8006796 <atanf+0x36>
 8006774:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8006778:	d904      	bls.n	8006784 <atanf+0x24>
 800677a:	ee70 7a00 	vadd.f32	s15, s0, s0
 800677e:	eeb0 0a67 	vmov.f32	s0, s15
 8006782:	bd38      	pop	{r3, r4, r5, pc}
 8006784:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80068bc <atanf+0x15c>
 8006788:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 80068c0 <atanf+0x160>
 800678c:	2d00      	cmp	r5, #0
 800678e:	bfc8      	it	gt
 8006790:	eef0 7a47 	vmovgt.f32	s15, s14
 8006794:	e7f3      	b.n	800677e <atanf+0x1e>
 8006796:	4b4b      	ldr	r3, [pc, #300]	@ (80068c4 <atanf+0x164>)
 8006798:	429c      	cmp	r4, r3
 800679a:	d810      	bhi.n	80067be <atanf+0x5e>
 800679c:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 80067a0:	d20a      	bcs.n	80067b8 <atanf+0x58>
 80067a2:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 80068c8 <atanf+0x168>
 80067a6:	ee30 7a07 	vadd.f32	s14, s0, s14
 80067aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80067ae:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80067b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80067b6:	dce2      	bgt.n	800677e <atanf+0x1e>
 80067b8:	f04f 33ff 	mov.w	r3, #4294967295
 80067bc:	e013      	b.n	80067e6 <atanf+0x86>
 80067be:	f000 f8a3 	bl	8006908 <fabsf>
 80067c2:	4b42      	ldr	r3, [pc, #264]	@ (80068cc <atanf+0x16c>)
 80067c4:	429c      	cmp	r4, r3
 80067c6:	d84f      	bhi.n	8006868 <atanf+0x108>
 80067c8:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 80067cc:	429c      	cmp	r4, r3
 80067ce:	d841      	bhi.n	8006854 <atanf+0xf4>
 80067d0:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80067d4:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80067d8:	eea0 7a27 	vfma.f32	s14, s0, s15
 80067dc:	2300      	movs	r3, #0
 80067de:	ee30 0a27 	vadd.f32	s0, s0, s15
 80067e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80067e6:	1c5a      	adds	r2, r3, #1
 80067e8:	ee27 6aa7 	vmul.f32	s12, s15, s15
 80067ec:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 80068d0 <atanf+0x170>
 80067f0:	eddf 5a38 	vldr	s11, [pc, #224]	@ 80068d4 <atanf+0x174>
 80067f4:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 80068d8 <atanf+0x178>
 80067f8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80067fc:	eee6 5a87 	vfma.f32	s11, s13, s14
 8006800:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 80068dc <atanf+0x17c>
 8006804:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8006808:	eddf 5a35 	vldr	s11, [pc, #212]	@ 80068e0 <atanf+0x180>
 800680c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8006810:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 80068e4 <atanf+0x184>
 8006814:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8006818:	eddf 5a33 	vldr	s11, [pc, #204]	@ 80068e8 <atanf+0x188>
 800681c:	eee7 5a26 	vfma.f32	s11, s14, s13
 8006820:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 80068ec <atanf+0x18c>
 8006824:	eea6 5a87 	vfma.f32	s10, s13, s14
 8006828:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 80068f0 <atanf+0x190>
 800682c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8006830:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 80068f4 <atanf+0x194>
 8006834:	eea7 5a26 	vfma.f32	s10, s14, s13
 8006838:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 80068f8 <atanf+0x198>
 800683c:	eea5 7a26 	vfma.f32	s14, s10, s13
 8006840:	ee27 7a26 	vmul.f32	s14, s14, s13
 8006844:	eea5 7a86 	vfma.f32	s14, s11, s12
 8006848:	ee27 7a87 	vmul.f32	s14, s15, s14
 800684c:	d121      	bne.n	8006892 <atanf+0x132>
 800684e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8006852:	e794      	b.n	800677e <atanf+0x1e>
 8006854:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8006858:	ee30 7a67 	vsub.f32	s14, s0, s15
 800685c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8006860:	2301      	movs	r3, #1
 8006862:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8006866:	e7be      	b.n	80067e6 <atanf+0x86>
 8006868:	4b24      	ldr	r3, [pc, #144]	@ (80068fc <atanf+0x19c>)
 800686a:	429c      	cmp	r4, r3
 800686c:	d80b      	bhi.n	8006886 <atanf+0x126>
 800686e:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 8006872:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006876:	eea0 7a27 	vfma.f32	s14, s0, s15
 800687a:	2302      	movs	r3, #2
 800687c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8006880:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006884:	e7af      	b.n	80067e6 <atanf+0x86>
 8006886:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 800688a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800688e:	2303      	movs	r3, #3
 8006890:	e7a9      	b.n	80067e6 <atanf+0x86>
 8006892:	4a1b      	ldr	r2, [pc, #108]	@ (8006900 <atanf+0x1a0>)
 8006894:	491b      	ldr	r1, [pc, #108]	@ (8006904 <atanf+0x1a4>)
 8006896:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 800689a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800689e:	edd3 6a00 	vldr	s13, [r3]
 80068a2:	ee37 7a66 	vsub.f32	s14, s14, s13
 80068a6:	2d00      	cmp	r5, #0
 80068a8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80068ac:	edd2 7a00 	vldr	s15, [r2]
 80068b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80068b4:	bfb8      	it	lt
 80068b6:	eef1 7a67 	vneglt.f32	s15, s15
 80068ba:	e760      	b.n	800677e <atanf+0x1e>
 80068bc:	bfc90fdb 	.word	0xbfc90fdb
 80068c0:	3fc90fdb 	.word	0x3fc90fdb
 80068c4:	3edfffff 	.word	0x3edfffff
 80068c8:	7149f2ca 	.word	0x7149f2ca
 80068cc:	3f97ffff 	.word	0x3f97ffff
 80068d0:	3c8569d7 	.word	0x3c8569d7
 80068d4:	3d4bda59 	.word	0x3d4bda59
 80068d8:	bd6ef16b 	.word	0xbd6ef16b
 80068dc:	3d886b35 	.word	0x3d886b35
 80068e0:	3dba2e6e 	.word	0x3dba2e6e
 80068e4:	3e124925 	.word	0x3e124925
 80068e8:	3eaaaaab 	.word	0x3eaaaaab
 80068ec:	bd15a221 	.word	0xbd15a221
 80068f0:	bd9d8795 	.word	0xbd9d8795
 80068f4:	bde38e38 	.word	0xbde38e38
 80068f8:	be4ccccd 	.word	0xbe4ccccd
 80068fc:	401bffff 	.word	0x401bffff
 8006900:	08006fa4 	.word	0x08006fa4
 8006904:	08006f94 	.word	0x08006f94

08006908 <fabsf>:
 8006908:	ee10 3a10 	vmov	r3, s0
 800690c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8006910:	ee00 3a10 	vmov	s0, r3
 8006914:	4770      	bx	lr
	...

08006918 <_init>:
 8006918:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800691a:	bf00      	nop
 800691c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800691e:	bc08      	pop	{r3}
 8006920:	469e      	mov	lr, r3
 8006922:	4770      	bx	lr

08006924 <_fini>:
 8006924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006926:	bf00      	nop
 8006928:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800692a:	bc08      	pop	{r3}
 800692c:	469e      	mov	lr, r3
 800692e:	4770      	bx	lr
